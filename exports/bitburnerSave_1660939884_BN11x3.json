{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hacking\":4006434311,\"hp\":2602005461,\"max_hp\":2602005461,\"strength\":52277201993,\"defense\":26020054518,\"dexterity\":4215711059,\"agility\":12109791154,\"charisma\":1164805323,\"intelligence\":7290,\"hacking_chance_mult\":950350.6168916931,\"hacking_speed_mult\":724944.9994923305,\"hacking_money_mult\":8057403.226832083,\"hacking_grow_mult\":1585017.697101277,\"hacking_exp\":3.523667286909709e+22,\"strength_exp\":242036210606617.28,\"defense_exp\":266223353842225.2,\"dexterity_exp\":928382872160820.5,\"agility_exp\":741147778663723.2,\"charisma_exp\":227941964335818.53,\"intelligence_exp\":4.6000000000000133e+101,\"hacking_mult\":4569411.44847404,\"strength_mult\":60798510.15987795,\"defense_mult\":30154494.572048966,\"dexterity_mult\":4669270.497371026,\"agility_mult\":13520596.786897236,\"charisma_mult\":1357702.873986058,\"hacking_exp_mult\":2184300.0759279667,\"strength_exp_mult\":570497.9557459778,\"defense_exp_mult\":627547.7513205757,\"dexterity_exp_mult\":690302.5264526332,\"agility_exp_mult\":570497.9557459778,\"charisma_exp_mult\":847300.4076799075,\"company_rep_mult\":2824868.59296433,\"faction_rep_mult\":288907.3040968378,\"money\":1e+100,\"city\":\"New Tokyo\",\"location\":\"Noodle Bar\",\"jobs\":{},\"companyName\":\"\",\"currentServer\":\"home\",\"purchasedServers\":[],\"hacknetNodes\":[\"hacknet-node-0\",\"hacknet-node-1\",\"hacknet-node-2\",\"hacknet-node-3\",\"hacknet-node-4\",\"hacknet-node-5\",\"hacknet-node-6\",\"hacknet-node-7\",\"hacknet-node-8\",\"hacknet-node-9\",\"hacknet-node-10\",\"hacknet-node-11\",\"hacknet-node-12\",\"hacknet-node-13\",\"hacknet-node-14\",\"hacknet-node-15\",\"hacknet-node-16\",\"hacknet-node-17\",\"hacknet-node-18\",\"hacknet-node-19\"],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":20971520,\"hashes\":6114826.380665451,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":1,\"Increase Maximum Money\":1,\"Improve Studying\":325817,\"Improve Gym Training\":277793,\"Exchange for Corporation Research\":504,\"Exchange for Bladeburner Rank\":83886,\"Exchange for Bladeburner SP\":83886,\"Generate Coding Contract\":627}}},\"factions\":[\"Illuminati\",\"Daedalus\",\"The Covenant\",\"ECorp\",\"MegaCorp\",\"Bachman & Associates\",\"Blade Industries\",\"NWO\",\"Clarke Incorporated\",\"OmniTek Incorporated\",\"Four Sigma\",\"KuaiGong International\",\"Fulcrum Secret Technologies\",\"Aevum\",\"Sector-12\",\"Netburners\",\"Tian Di Hui\",\"Bladeburners\"],\"factionInvitations\":[],\"queuedAugmentations\":[{\"level\":1,\"name\":\"PCMatrix\"},{\"level\":1,\"name\":\"Social Negotiation Assistant (S.N.A)\"},{\"level\":1,\"name\":\"Neuroreceptor Management Implant\"}],\"augmentations\":[{\"name\":\"NeuroFlux Governor\",\"level\":1188},{\"level\":1,\"name\":\"Wired Reflexes\"},{\"level\":1,\"name\":\"Augmented Targeting I\"},{\"level\":1,\"name\":\"Speech Processor Implant\"},{\"level\":1,\"name\":\"Augmented Targeting II\"},{\"level\":1,\"name\":\"CashRoot Starter Kit\"},{\"level\":1,\"name\":\"Artificial Bio-neural Network Implant\"},{\"level\":1,\"name\":\"Enhanced Myelin Sheathing\"},{\"level\":1,\"name\":\"DataJack\"},{\"level\":1,\"name\":\"Embedded Netburner Module\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core Implant\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V2 Upgrade\"},{\"level\":1,\"name\":\"Neural Accelerator\"},{\"level\":1,\"name\":\"Neurotrainer II\"},{\"level\":1,\"name\":\"BitRunners Neurolink\"},{\"level\":1,\"name\":\"Artificial Synaptic Potentiation\"},{\"level\":1,\"name\":\"Neuralstimulator\"},{\"level\":1,\"name\":\"The Black Hand\"},{\"level\":1,\"name\":\"BitWire\"},{\"level\":1,\"name\":\"Neural-Retention Enhancement\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen I\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen II\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen III\"},{\"level\":1,\"name\":\"CRTX42-AA Gene Modification\"},{\"level\":1,\"name\":\"Hacknet Node CPU Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Cache Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node NIC Architecture Neural-Upload\"},{\"level\":1,\"name\":\"Hacknet Node Kernel Direct-Neural Interface\"},{\"level\":1,\"name\":\"Hacknet Node Core Direct-Neural Interface\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen IV\"},{\"level\":1,\"name\":\"Cranial Signal Processors - Gen V\"},{\"level\":1,\"name\":\"Synaptic Enhancement Implant\"},{\"level\":1,\"name\":\"Neurotrainer I\"},{\"level\":1,\"name\":\"Synfibril Muscle\"},{\"level\":1,\"name\":\"Embedded Netburner Module Analyze Engine\"},{\"level\":1,\"name\":\"Synthetic Heart\"},{\"level\":1,\"name\":\"NEMEAN Subdermal Weave\"},{\"level\":1,\"name\":\"Embedded Netburner Module Direct Memory Access Upgrade\"},{\"level\":1,\"name\":\"Embedded Netburner Module Core V3 Upgrade\"},{\"level\":1,\"name\":\"QLink\"},{\"level\":1,\"name\":\"The Red Pill\"},{\"level\":1,\"name\":\"Augmented Targeting III\"},{\"level\":1,\"name\":\"Graphene Bone Lacings\"},{\"level\":1,\"name\":\"SPTN-97 Gene Modification\"},{\"level\":1,\"name\":\"EsperTech Bladeburner Eyewear\"},{\"level\":1,\"name\":\"The Blade's Simulacrum\"},{\"level\":1,\"name\":\"EMS-4 Recombination\"},{\"level\":1,\"name\":\"ORION-MKIV Shoulder\"},{\"level\":1,\"name\":\"Hyperion Plasma Cannon V1\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor: IPU Upgrade\"},{\"level\":1,\"name\":\"Vangelis Virus\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor: Power Cells Upgrade\"},{\"level\":1,\"name\":\"Blade's Runners\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\"},{\"level\":1,\"name\":\"Hyperion Plasma Cannon V2\"},{\"level\":1,\"name\":\"I.N.T.E.R.L.I.N.K.E.D\"},{\"level\":1,\"name\":\"GOLEM Serum\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor: Unibeam Upgrade\"},{\"level\":1,\"name\":\"Vangelis Virus 3.0\"},{\"level\":1,\"name\":\"BLADE-51b Tesla Armor: Omnibeam Upgrade\"},{\"level\":1,\"name\":\"Speech Enhancement\"},{\"level\":1,\"name\":\"Nuoptimal Nootropic Injector Implant\"},{\"level\":1,\"name\":\"ADR-V2 Pheromone Gene\"},{\"level\":1,\"name\":\"FocusWire\"},{\"level\":1,\"name\":\"Enhanced Social Interaction Implant\"},{\"level\":1,\"name\":\"SmartJaw\"},{\"level\":1,\"name\":\"Combat Rib I\"},{\"level\":1,\"name\":\"Combat Rib II\"},{\"level\":1,\"name\":\"Combat Rib III\"},{\"level\":1,\"name\":\"Nanofiber Weave\"},{\"level\":1,\"name\":\"Bionic Spine\"},{\"level\":1,\"name\":\"Bionic Legs\"},{\"level\":1,\"name\":\"HyperSight Corneal Implant\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface Optimization Submodule\"},{\"level\":1,\"name\":\"Neotra\"},{\"level\":1,\"name\":\"Neuronal Densification\"},{\"level\":1,\"name\":\"nextSENS Gene Modification\"},{\"level\":1,\"name\":\"Graphene Bionic Spine Upgrade\"},{\"level\":1,\"name\":\"Graphene Bionic Legs Upgrade\"},{\"level\":1,\"name\":\"ECorp HVMind Implant\"},{\"level\":1,\"name\":\"ADR-V1 Pheromone Gene\"},{\"level\":1,\"name\":\"CordiARC Fusion Reactor\"},{\"level\":1,\"name\":\"Neurotrainer III\"},{\"level\":1,\"name\":\"Power Recirculation Core\"},{\"level\":1,\"name\":\"Xanipher\"},{\"level\":1,\"name\":\"Hydroflame Left Arm\"},{\"level\":1,\"name\":\"OmniTek InfoLoad\"},{\"level\":1,\"name\":\"Photosynthetic Cells\"},{\"level\":1,\"name\":\"PC Direct-Neural Interface NeuroNet Injector\"}],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":3,\"n\":2},{\"lvl\":3,\"n\":3},{\"lvl\":3,\"n\":4},{\"lvl\":3,\"n\":5},{\"lvl\":3,\"n\":6},{\"lvl\":50,\"n\":12},{\"lvl\":3,\"n\":7},{\"lvl\":3,\"n\":8},{\"lvl\":3,\"n\":9},{\"lvl\":3,\"n\":10},{\"lvl\":2,\"n\":11},{\"lvl\":2,\"n\":13}],\"numPeopleKilled\":0,\"karma\":0,\"crime_money_mult\":248635.37685909675,\"crime_success_mult\":248635.37685909675,\"isWorking\":true,\"focus\":false,\"workType\":\"Working for Faction\",\"workCostMult\":3,\"workExpMult\":2,\"currentWorkFactionName\":\"Illuminati\",\"currentWorkFactionDescription\":\"carrying out field missions\",\"workHackExpGainRate\":218430.0075927967,\"workStrExpGainRate\":57049.79557459778,\"workDefExpGainRate\":62754.77513205758,\"workDexExpGainRate\":69030.25264526332,\"workAgiExpGainRate\":57049.79557459778,\"workChaExpGainRate\":84730.04076799075,\"workRepGainRate\":1501706515319744.2,\"workMoneyGainRate\":0,\"workMoneyLossRate\":0,\"workHackExpGained\":9829350.34167585,\"workStrExpGained\":2567240.8008569023,\"workDefExpGained\":2823964.8809425915,\"workDexExpGained\":3106361.3690368496,\"workAgiExpGained\":2567240.8008569023,\"workChaExpGained\":3812851.8345595887,\"workRepGained\":67576792743348856,\"workMoneyGained\":0,\"createProgramName\":\"\",\"createProgramReqLvl\":25,\"graftAugmentationName\":\"\",\"timeWorkedGraftAugmentation\":0,\"className\":\"\",\"crimeType\":\"\",\"timeWorked\":9000,\"timeWorkedCreateProgram\":0,\"timeNeededToCompleteWork\":72000000,\"work_money_mult\":354505.0207070434,\"hacknet_node_money_mult\":503431.8114126436,\"hacknet_node_purchase_cost_mult\":0.0000034627856052034208,\"hacknet_node_ram_cost_mult\":0.000004526517130984863,\"hacknet_node_core_cost_mult\":0.000004526517130984863,\"hacknet_node_level_cost_mult\":0.000003847539561337134,\"hasWseAccount\":true,\"hasTixApiAccess\":true,\"has4SData\":true,\"has4SDataTixApi\":true,\"gang\":null,\"corporation\":{\"ctor\":\"Corporation\",\"data\":{\"name\":\"CO\",\"divisions\":[{\"ctor\":\"Industry\",\"data\":{\"name\":\"AG\",\"type\":\"Agriculture\",\"sciResearch\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Scientific Research\",\"qty\":12068135.926940633,\"qlt\":0,\"dmd\":0,\"dmdR\":[0,0],\"cmp\":0,\"cmpR\":[0,0],\"mv\":0,\"mku\":0,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":0,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"researched\":{\"Hi-Tech R&D Laboratory\":true,\"Bulk Purchasing\":true,\"AutoBrew\":true,\"AutoPartyManager\":true,\"Automatic Drug Administration\":true,\"Go-Juice\":true,\"CPH4 Injections\":true,\"Drones\":true,\"Drones - Assembly\":true,\"Drones - Transport\":true,\"HRBuddy-Recruitment\":true,\"HRBuddy-Training\":true,\"JoyWire\":true,\"Market-TA.I\":true,\"Overclock\":true,\"Market-TA.II\":true,\"Sti.mu\":true,\"Self-Correcting Assemblers\":true},\"reqMats\":{\"Water\":0.5,\"Energy\":0.5},\"prodMats\":[\"Plants\",\"Food\"],\"products\":{},\"makesProducts\":false,\"awareness\":2.6257759903339047e+151,\"popularity\":9.222156221336196e+151,\"startingCost\":40000000000,\"reFac\":0.72,\"sciFac\":0.5,\"hwFac\":0.2,\"robFac\":0.3,\"aiFac\":0.3,\"advFac\":0.04,\"prodMult\":14757.500032317093,\"upgrades\":[15,269],\"state\":\"PURCHASE\",\"newInd\":false,\"offices\":{\"Aevum\":{\"ctor\":\"OfficeSpace\",\"data\":{\"minEne\":0,\"maxEne\":110,\"minHap\":0,\"maxHap\":110,\"maxMor\":110,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0rCRxeH\",\"mor\":110,\"hap\":109.99884941146864,\"ene\":109.99884941146864,\"int\":80,\"cha\":75.0186834117377,\"exp\":192.9446834114341,\"cre\":71,\"eff\":88.0186834117377,\"sal\":1200,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qwfP7vm\",\"mor\":110,\"hap\":109.9998834787268,\"ene\":109.9998834787268,\"int\":58,\"cha\":75.01700688372412,\"exp\":191.9400068834253,\"cre\":57,\"eff\":70.01700688372412,\"sal\":1035,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xoLoDtc\",\"mor\":110,\"hap\":109.99839423850403,\"ene\":109.99839423850403,\"int\":69,\"cha\":50.01570078744356,\"exp\":174.93570078722527,\"cre\":51,\"eff\":86.01570078744356,\"sal\":972,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"k0CgXLh\",\"mor\":110,\"hap\":109.99707998824996,\"ene\":109.99707998824996,\"int\":91,\"cha\":92.00222306533675,\"exp\":168.907223065147,\"cre\":51,\"eff\":75.00222306533675,\"sal\":1113,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Lw04FZV\",\"mor\":110,\"hap\":109.99798444229566,\"ene\":109.99798444229566,\"int\":88,\"cha\":64.00570993545854,\"exp\":180.90770993521198,\"cre\":51,\"eff\":75.00570993545854,\"sal\":1056,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FFoGbjP\",\"mor\":110,\"hap\":109.99848822713513,\"ene\":109.99848822713513,\"int\":90,\"cha\":92,\"exp\":199.89899999966346,\"cre\":81,\"eff\":75,\"sal\":1293,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lhSpeiW\",\"mor\":110,\"hap\":109.99933981990038,\"ene\":109.99933981990038,\"int\":60,\"cha\":57,\"exp\":175.89899999977715,\"cre\":58,\"eff\":56,\"sal\":900,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"3RYT0XF\",\"mor\":110,\"hap\":109.99915336369781,\"ene\":109.99915336369781,\"int\":61,\"cha\":70,\"exp\":161.89899999984348,\"cre\":50,\"eff\":73,\"sal\":927,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GfQPpu2\",\"mor\":110,\"hap\":109.99834198932997,\"ene\":109.99834198932997,\"int\":100,\"cha\":79,\"exp\":203.89899999964453,\"cre\":65,\"eff\":60,\"sal\":1203,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mFxxwvq\",\"mor\":110,\"hap\":109.99777506436943,\"ene\":109.99777506436943,\"int\":73,\"cha\":68,\"exp\":187.8989999997203,\"cre\":98,\"eff\":79,\"sal\":1197,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Gp8UV2m\",\"mor\":110,\"hap\":109.99875135497031,\"ene\":109.99875135497031,\"int\":93,\"cha\":56,\"exp\":159.89899999985295,\"cre\":90,\"eff\":58,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"viIP15Y\",\"mor\":110,\"hap\":109.99774183618902,\"ene\":109.99774183618902,\"int\":60,\"cha\":62,\"exp\":196.89899999967767,\"cre\":55,\"eff\":83,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"MqMxbXa\",\"mor\":110,\"hap\":109.99996669663109,\"ene\":109.99996669663109,\"int\":60,\"cha\":84,\"exp\":199.89899999966346,\"cre\":80,\"eff\":50,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"dRvJN7Z\",\"mor\":110,\"hap\":109.99944494670716,\"ene\":109.99944494670716,\"int\":51,\"cha\":81,\"exp\":203.89899999964453,\"cre\":65,\"eff\":57,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"W28zwZa\",\"mor\":110,\"hap\":109.99970937372602,\"ene\":109.99970937372602,\"int\":88,\"cha\":58,\"exp\":156.89899999986716,\"cre\":81,\"eff\":96,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"H26wwqq\",\"mor\":110,\"hap\":109.99913829851313,\"ene\":109.99913829851313,\"int\":63,\"cha\":53,\"exp\":189.89899999971084,\"cre\":78,\"eff\":76,\"sal\":1059,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oEhui9E\",\"mor\":110,\"hap\":109.99896249662099,\"ene\":109.99896249662099,\"int\":50,\"cha\":79,\"exp\":161.89899999984348,\"cre\":67,\"eff\":79,\"sal\":990,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4D0T19U\",\"mor\":110,\"hap\":109.9993640651765,\"ene\":109.9993640651765,\"int\":63,\"cha\":90,\"exp\":199.89899999966346,\"cre\":83,\"eff\":89,\"sal\":1254,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"dif501x\",\"mor\":110,\"hap\":109.99818774908435,\"ene\":109.99818774908435,\"int\":52,\"cha\":51,\"exp\":180.89899999975347,\"cre\":60,\"eff\":68,\"sal\":915,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"71tqA6F\",\"mor\":110,\"hap\":109.99941868018226,\"ene\":109.99941868018226,\"int\":83,\"cha\":95,\"exp\":184.8989999997345,\"cre\":57,\"eff\":93,\"sal\":1218,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xFbMKhG\",\"mor\":110,\"hap\":109.9974518546182,\"ene\":109.9974518546182,\"int\":53,\"cha\":83,\"exp\":187.8989999997203,\"cre\":56,\"eff\":50,\"sal\":969,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"762Gens\",\"mor\":110,\"hap\":109.99977965689558,\"ene\":109.99977965689558,\"int\":58,\"cha\":59,\"exp\":168.89899999981031,\"cre\":92,\"eff\":50,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Pc9OVSJ\",\"mor\":110,\"hap\":109.99859430879299,\"ene\":109.99859430879299,\"int\":93,\"cha\":97,\"exp\":158.8989999998577,\"cre\":73,\"eff\":99,\"sal\":1242,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"siEmFW2\",\"mor\":110,\"hap\":109.99960832336659,\"ene\":109.99960832336659,\"int\":69,\"cha\":87,\"exp\":181.89899999974872,\"cre\":58,\"eff\":87,\"sal\":1128,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wyrJwNS\",\"mor\":110,\"hap\":109.99911591397179,\"ene\":109.99911591397179,\"int\":71,\"cha\":62,\"exp\":166.89899999981978,\"cre\":51,\"eff\":89,\"sal\":999,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GcWIhb7\",\"mor\":110,\"hap\":109.99847437513365,\"ene\":109.99847437513365,\"int\":92,\"cha\":93,\"exp\":167.89899999981506,\"cre\":64,\"eff\":68,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ThfUUD9\",\"mor\":110,\"hap\":109.99940108021843,\"ene\":109.99940108021843,\"int\":77,\"cha\":55,\"exp\":189.89899999971084,\"cre\":85,\"eff\":93,\"sal\":1179,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kbo1mJp\",\"mor\":110,\"hap\":109.99940705903136,\"ene\":109.99940705903136,\"int\":56,\"cha\":57,\"exp\":193.89899999969188,\"cre\":69,\"eff\":64,\"sal\":999,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"US4UZr7\",\"mor\":110,\"hap\":109.99975794530697,\"ene\":109.99975794530697,\"int\":54,\"cha\":79,\"exp\":181.89899999974872,\"cre\":65,\"eff\":78,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LpJXkvc\",\"mor\":110,\"hap\":109.9988785431557,\"ene\":109.9988785431557,\"int\":93,\"cha\":71,\"exp\":182.898999999744,\"cre\":82,\"eff\":100,\"sal\":1266,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"TvYZ5bs\",\"mor\":110,\"hap\":109.99933653960329,\"ene\":109.99933653960329,\"int\":79,\"cha\":95,\"exp\":202.89899999964925,\"cre\":59,\"eff\":88,\"sal\":1251,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"pSOjncq\",\"mor\":110,\"hap\":109.99725927212668,\"ene\":109.99725927212668,\"int\":79,\"cha\":92,\"exp\":173.89899999978664,\"cre\":57,\"eff\":65,\"sal\":1080,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"aFeXLlw\",\"mor\":110,\"hap\":109.99914724425025,\"ene\":109.99914724425025,\"int\":92,\"cha\":89,\"exp\":180.89899999975347,\"cre\":99,\"eff\":93,\"sal\":1341,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"QmKBsAI\",\"mor\":110,\"hap\":109.99823964256633,\"ene\":109.99823964256633,\"int\":57,\"cha\":55,\"exp\":198.8989999996682,\"cre\":76,\"eff\":74,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"honML5x\",\"mor\":110,\"hap\":109.99778826813005,\"ene\":109.99778826813005,\"int\":60,\"cha\":53,\"exp\":175.89899999977715,\"cre\":61,\"eff\":92,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9NBkl8S\",\"mor\":110,\"hap\":109.99859258415816,\"ene\":109.99859258415816,\"int\":75,\"cha\":84,\"exp\":180.89899999975347,\"cre\":72,\"eff\":69,\"sal\":1122,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"epSaIr4\",\"mor\":110,\"hap\":109.99884387624793,\"ene\":109.99884387624793,\"int\":89,\"cha\":62,\"exp\":163.898999999834,\"cre\":68,\"eff\":59,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GZnVcVa\",\"mor\":110,\"hap\":109.99958043099602,\"ene\":109.99958043099602,\"int\":53,\"cha\":98,\"exp\":190.8989999997061,\"cre\":66,\"eff\":80,\"sal\":1143,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AF2IQnz\",\"mor\":110,\"hap\":109.99906267596143,\"ene\":109.99906267596143,\"int\":85,\"cha\":98,\"exp\":206.89899999963032,\"cre\":96,\"eff\":64,\"sal\":1329,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NGKTkna\",\"mor\":110,\"hap\":109.99811961301195,\"ene\":109.99811961301195,\"int\":91,\"cha\":54,\"exp\":173.89899999978664,\"cre\":72,\"eff\":62,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"a6AV5HU\",\"mor\":110,\"hap\":109.99761448952141,\"ene\":109.99761448952141,\"int\":50,\"cha\":56,\"exp\":185.8989999997298,\"cre\":74,\"eff\":54,\"sal\":939,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tvdP0Lr\",\"mor\":110,\"hap\":109.99994966555276,\"ene\":109.99994966555276,\"int\":66,\"cha\":61,\"exp\":173.89899999978664,\"cre\":56,\"eff\":63,\"sal\":939,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ISRn8HV\",\"mor\":110,\"hap\":109.9973393788944,\"ene\":109.9973393788944,\"int\":97,\"cha\":84,\"exp\":177.89899999976768,\"cre\":70,\"eff\":74,\"sal\":1188,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qqy4mCh\",\"mor\":110,\"hap\":109.99886432074796,\"ene\":109.99886432074796,\"int\":56,\"cha\":51,\"exp\":162.89899999983874,\"cre\":64,\"eff\":71,\"sal\":894,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"865ykCO\",\"mor\":110,\"hap\":109.99818097952824,\"ene\":109.99818097952824,\"int\":64,\"cha\":87,\"exp\":202.89899999964925,\"cre\":52,\"eff\":71,\"sal\":1110,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"C0RF8Zz\",\"mor\":110,\"hap\":109.99929221577202,\"ene\":109.99929221577202,\"int\":55,\"cha\":75,\"exp\":180.89899999975347,\"cre\":83,\"eff\":79,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gZvRpUY\",\"mor\":110,\"hap\":109.9972723644075,\"ene\":109.9972723644075,\"int\":70,\"cha\":70,\"exp\":189.89899999971084,\"cre\":59,\"eff\":72,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DRkEjA2\",\"mor\":110,\"hap\":109.99803765785009,\"ene\":109.99803765785009,\"int\":71,\"cha\":87,\"exp\":196.89899999967767,\"cre\":75,\"eff\":64,\"sal\":1161,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"pKiwkaa\",\"mor\":110,\"hap\":109.99883956025674,\"ene\":109.99883956025674,\"int\":76,\"cha\":81,\"exp\":186.89899999972505,\"cre\":66,\"eff\":51,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IUjDZnc\",\"mor\":110,\"hap\":109.99888040466372,\"ene\":109.99888040466372,\"int\":64,\"cha\":78,\"exp\":159.89899999985295,\"cre\":53,\"eff\":60,\"sal\":924,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6mXFaIr\",\"mor\":110,\"hap\":109.99991236594518,\"ene\":109.99991236594518,\"int\":86,\"cha\":54,\"exp\":179.89899999975822,\"cre\":67,\"eff\":76,\"sal\":1068,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lnJPLZE\",\"mor\":110,\"hap\":109.99912500215343,\"ene\":109.99912500215343,\"int\":88,\"cha\":55,\"exp\":161.89899999984348,\"cre\":87,\"eff\":98,\"sal\":1149,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AitwX6W\",\"mor\":110,\"hap\":109.99888668721174,\"ene\":109.99888668721174,\"int\":60,\"cha\":84,\"exp\":202.89899999964925,\"cre\":52,\"eff\":60,\"sal\":1056,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"toB4OQo\",\"mor\":110,\"hap\":109.99878355746749,\"ene\":109.99878355746749,\"int\":75,\"cha\":71,\"exp\":164.89899999982927,\"cre\":84,\"eff\":80,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1WeuKJc\",\"mor\":110,\"hap\":109.99814927862836,\"ene\":109.99814927862836,\"int\":57,\"cha\":79,\"exp\":166.89899999981978,\"cre\":72,\"eff\":58,\"sal\":978,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kGyTSr7\",\"mor\":110,\"hap\":109.9984876371445,\"ene\":109.9984876371445,\"int\":54,\"cha\":73,\"exp\":174.8989999997819,\"cre\":73,\"eff\":99,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sLABIvN\",\"mor\":110,\"hap\":109.99741456265993,\"ene\":109.99741456265993,\"int\":100,\"cha\":89,\"exp\":167.89899999981506,\"cre\":77,\"eff\":50,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LryG1cI\",\"mor\":110,\"hap\":109.99841154738147,\"ene\":109.99841154738147,\"int\":86,\"cha\":50,\"exp\":169.89899999980557,\"cre\":95,\"eff\":79,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"VsKRgLR\",\"mor\":110,\"hap\":109.99901306276945,\"ene\":109.99901306276945,\"int\":74,\"cha\":79,\"exp\":170.89899999980085,\"cre\":60,\"eff\":82,\"sal\":1077,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GCzZvDq\",\"mor\":110,\"hap\":109.99718824498595,\"ene\":109.99718824498595,\"int\":76,\"cha\":60,\"exp\":205.89899999963504,\"cre\":80,\"eff\":62,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wzi8Bxp\",\"mor\":110,\"hap\":109.99953612919617,\"ene\":109.99953612919617,\"int\":52,\"cha\":91,\"exp\":165.89899999982453,\"cre\":62,\"eff\":53,\"sal\":951,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"v4DJJ4W\",\"mor\":110,\"hap\":109.9993711869274,\"ene\":109.9993711869274,\"int\":59,\"cha\":73,\"exp\":193.89899999969188,\"cre\":52,\"eff\":59,\"sal\":990,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7XUZ3Ix\",\"mor\":110,\"hap\":109.99797100637575,\"ene\":109.99797100637575,\"int\":54,\"cha\":58,\"exp\":156.89899999986716,\"cre\":78,\"eff\":85,\"sal\":975,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RJOLysD\",\"mor\":110,\"hap\":109.9971248778285,\"ene\":109.9971248778285,\"int\":98,\"cha\":78,\"exp\":194.89899999968716,\"cre\":82,\"eff\":97,\"sal\":1329,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zhnMnjx\",\"mor\":110,\"hap\":109.999418599196,\"ene\":109.999418599196,\"int\":50,\"cha\":50,\"exp\":158.8989999998577,\"cre\":52,\"eff\":64,\"sal\":804,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"J3qAqGW\",\"mor\":110,\"hap\":109.9985245512967,\"ene\":109.9985245512967,\"int\":99,\"cha\":65,\"exp\":183.89899999973926,\"cre\":81,\"eff\":68,\"sal\":1170,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"E1rJW7I\",\"mor\":110,\"hap\":109.99804559493171,\"ene\":109.99804559493171,\"int\":94,\"cha\":86,\"exp\":193.89899999969188,\"cre\":94,\"eff\":85,\"sal\":1338,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8wnK9AB\",\"mor\":110,\"hap\":109.99855411420793,\"ene\":109.99855411420793,\"int\":66,\"cha\":58,\"exp\":198.8989999996682,\"cre\":77,\"eff\":91,\"sal\":1152,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yE8NGV8\",\"mor\":110,\"hap\":109.99897421291706,\"ene\":109.99897421291706,\"int\":60,\"cha\":58,\"exp\":186.89899999972505,\"cre\":50,\"eff\":71,\"sal\":957,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Nm2x9tk\",\"mor\":110,\"hap\":109.99866040660149,\"ene\":109.99866040660149,\"int\":77,\"cha\":82,\"exp\":174.8989999997819,\"cre\":78,\"eff\":74,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7a7r48i\",\"mor\":110,\"hap\":109.99820826135226,\"ene\":109.99820826135226,\"int\":99,\"cha\":74,\"exp\":162.89899999983874,\"cre\":83,\"eff\":91,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"KiYgN7H\",\"mor\":110,\"hap\":109.99763396287901,\"ene\":109.99763396287901,\"int\":63,\"cha\":76,\"exp\":198.8989999996682,\"cre\":50,\"eff\":59,\"sal\":1020,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"jrMjiIC\",\"mor\":110,\"hap\":109.99734697576834,\"ene\":109.99734697576834,\"int\":90,\"cha\":56,\"exp\":200.89899999965874,\"cre\":62,\"eff\":96,\"sal\":1194,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2wdKr2x\",\"mor\":110,\"hap\":109.99779811111351,\"ene\":109.99779811111351,\"int\":97,\"cha\":93,\"exp\":168.89899999981031,\"cre\":79,\"eff\":95,\"sal\":1278,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"K41bLbi\",\"mor\":110,\"hap\":109.99730835317891,\"ene\":109.99730835317891,\"int\":50,\"cha\":61,\"exp\":173.89899999978664,\"cre\":57,\"eff\":89,\"sal\":972,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Ip1i3aG\",\"mor\":110,\"hap\":109.99976691045393,\"ene\":109.99976691045393,\"int\":100,\"cha\":96,\"exp\":167.89899999981506,\"cre\":83,\"eff\":65,\"sal\":1215,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"TPNaT6B\",\"mor\":110,\"hap\":109.99740943874593,\"ene\":109.99740943874593,\"int\":51,\"cha\":64,\"exp\":159.89899999985295,\"cre\":58,\"eff\":96,\"sal\":966,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RYHBEKm\",\"mor\":110,\"hap\":109.997524887975,\"ene\":109.997524887975,\"int\":98,\"cha\":67,\"exp\":194.89899999968716,\"cre\":52,\"eff\":64,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"306qboz\",\"mor\":110,\"hap\":109.99936527138719,\"ene\":109.99936527138719,\"int\":96,\"cha\":79,\"exp\":186.89899999972505,\"cre\":86,\"eff\":83,\"sal\":1272,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UQKuPud\",\"mor\":110,\"hap\":109.99808009878808,\"ene\":109.99808009878808,\"int\":69,\"cha\":85,\"exp\":186.89899999972505,\"cre\":77,\"eff\":98,\"sal\":1227,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EtiYsGx\",\"mor\":110,\"hap\":109.99719290230861,\"ene\":109.99719290230861,\"int\":84,\"cha\":77,\"exp\":173.89899999978664,\"cre\":77,\"eff\":100,\"sal\":1215,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yvJFsVP\",\"mor\":110,\"hap\":109.99925592748657,\"ene\":109.99925592748657,\"int\":91,\"cha\":78,\"exp\":184.8989999997345,\"cre\":61,\"eff\":100,\"sal\":1224,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"78QTzZh\",\"mor\":110,\"hap\":109.9970550547227,\"ene\":109.9970550547227,\"int\":86,\"cha\":52,\"exp\":166.89899999981978,\"cre\":75,\"eff\":97,\"sal\":1110,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"b8Cify0\",\"mor\":110,\"hap\":109.9976249248919,\"ene\":109.9976249248919,\"int\":89,\"cha\":54,\"exp\":169.89899999980557,\"cre\":67,\"eff\":88,\"sal\":1083,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NnMcglb\",\"mor\":110,\"hap\":109.99918289623265,\"ene\":109.99918289623265,\"int\":85,\"cha\":83,\"exp\":162.89899999983874,\"cre\":50,\"eff\":63,\"sal\":1011,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YDNZkz1\",\"mor\":110,\"hap\":109.99873482278045,\"ene\":109.99873482278045,\"int\":65,\"cha\":50,\"exp\":167.89899999981506,\"cre\":58,\"eff\":70,\"sal\":912,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qb5YFio\",\"mor\":110,\"hap\":109.99710865522243,\"ene\":109.99710865522243,\"int\":87,\"cha\":58,\"exp\":197.89899999967295,\"cre\":75,\"eff\":82,\"sal\":1179,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GV3KBnG\",\"mor\":110,\"hap\":109.99736793832996,\"ene\":109.99736793832996,\"int\":72,\"cha\":95,\"exp\":167.89899999981506,\"cre\":64,\"eff\":94,\"sal\":1158,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"geXqnFc\",\"mor\":110,\"hap\":109.99750497075658,\"ene\":109.99750497075658,\"int\":66,\"cha\":72,\"exp\":166.89899999981978,\"cre\":92,\"eff\":74,\"sal\":1092,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JneKblk\",\"mor\":110,\"hap\":109.99998122638529,\"ene\":109.99998122638529,\"int\":60,\"cha\":77,\"exp\":196.89899999967767,\"cre\":63,\"eff\":69,\"sal\":1077,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qksOgaN\",\"mor\":110,\"hap\":109.99789604148917,\"ene\":109.99789604148917,\"int\":51,\"cha\":86,\"exp\":192.89899999969663,\"cre\":58,\"eff\":76,\"sal\":1071,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qCe8Rom\",\"mor\":110,\"hap\":109.99904757752884,\"ene\":109.99904757752884,\"int\":84,\"cha\":72,\"exp\":189.89899999971084,\"cre\":54,\"eff\":52,\"sal\":1035,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GIPSOqe\",\"mor\":110,\"hap\":109.99968518854332,\"ene\":109.99968518854332,\"int\":53,\"cha\":52,\"exp\":168.89899999981031,\"cre\":75,\"eff\":77,\"sal\":957,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EySPVPC\",\"mor\":110,\"hap\":109.99860910159806,\"ene\":109.99860910159806,\"int\":81,\"cha\":75,\"exp\":158.8989999998577,\"cre\":50,\"eff\":68,\"sal\":978,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UHJTQCR\",\"mor\":110,\"hap\":109.99785415587078,\"ene\":109.99785415587078,\"int\":65,\"cha\":78,\"exp\":176.89899999977243,\"cre\":84,\"eff\":100,\"sal\":1191,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"78SBzwM\",\"mor\":110,\"hap\":109.99870665404703,\"ene\":109.99870665404703,\"int\":96,\"cha\":83,\"exp\":206.89899999963032,\"cre\":92,\"eff\":75,\"sal\":1338,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HNdefsK\",\"mor\":110,\"hap\":109.99788372690512,\"ene\":109.99788372690512,\"int\":65,\"cha\":82,\"exp\":203.89899999964453,\"cre\":77,\"eff\":58,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"aSbPuEE\",\"mor\":110,\"hap\":109.99955735392638,\"ene\":109.99955735392638,\"int\":55,\"cha\":100,\"exp\":192.89899999969663,\"cre\":63,\"eff\":72,\"sal\":1128,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"E7dC5ER\",\"mor\":110,\"hap\":109.99800742700707,\"ene\":109.99800742700707,\"int\":66,\"cha\":87,\"exp\":178.89899999976294,\"cre\":58,\"eff\":80,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}}],\"employeeProd\":{\"Operations\":3184046.2235011132,\"Engineer\":645541.4184472567,\"Business\":117101.90245233255,\"Management\":248026.03175947038,\"Research & Development\":0,\"total\":4194715.576160171,\"Training\":0,\"Unassigned\":0},\"employeeJobs\":{\"Operations\":75,\"Engineer\":14,\"Business\":5,\"Management\":5,\"Research & Development\":0,\"Training\":0,\"Unassigned\":0,\"total\":99},\"loc\":\"Aevum\",\"size\":99}},\"Chongqing\":{\"ctor\":\"OfficeSpace\",\"data\":{\"minEne\":0,\"maxEne\":110,\"minHap\":0,\"maxHap\":110,\"maxMor\":110,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"cmt44fh\",\"mor\":110,\"hap\":109.99821960032301,\"ene\":109.99821960032301,\"int\":74,\"cha\":76.01024113373033,\"exp\":158.74624113358763,\"cre\":77,\"eff\":60.01024113373032,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Dtamv6X\",\"mor\":110,\"hap\":109.99799157714858,\"ene\":109.99799157714858,\"int\":75,\"cha\":60.01436273207343,\"exp\":166.74736273189282,\"cre\":56,\"eff\":89.01436273207342,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qQUALuJ\",\"mor\":110,\"hap\":109.99750555990464,\"ene\":109.99750555990464,\"int\":75,\"cha\":83.01026383220997,\"exp\":152.74026383209574,\"cre\":66,\"eff\":58.01026383220999,\"sal\":1071,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9wEGHaa\",\"mor\":110,\"hap\":109.99891024782474,\"ene\":109.99891024782474,\"int\":98,\"cha\":84.0068888235604,\"exp\":156.73388882342724,\"cre\":64,\"eff\":81.0068888235604,\"sal\":1218,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZFUEDZx\",\"mor\":110,\"hap\":109.9983116582188,\"ene\":109.9983116582188,\"int\":94,\"cha\":75,\"exp\":145.723999999919,\"cre\":89,\"eff\":92,\"sal\":1254,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7G3iwLj\",\"mor\":110,\"hap\":109.99995063917056,\"ene\":109.99995063917056,\"int\":82,\"cha\":91,\"exp\":131.7239999999853,\"cre\":63,\"eff\":89,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uKnY7SI\",\"mor\":110,\"hap\":109.99731748633269,\"ene\":109.99731748633269,\"int\":92,\"cha\":67,\"exp\":128.7239999999995,\"cre\":83,\"eff\":86,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EnB8b6D\",\"mor\":110,\"hap\":109.99730438514254,\"ene\":109.99730438514254,\"int\":73,\"cha\":76,\"exp\":177.72399999976741,\"cre\":95,\"eff\":91,\"sal\":1305,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F7cKf5I\",\"mor\":110,\"hap\":109.99958054478026,\"ene\":109.99958054478026,\"int\":98,\"cha\":59,\"exp\":152.72399999988582,\"cre\":55,\"eff\":97,\"sal\":1152,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GQbgd8c\",\"mor\":110,\"hap\":109.99989080571986,\"ene\":109.99989080571986,\"int\":65,\"cha\":70,\"exp\":129.7239999999948,\"cre\":70,\"eff\":73,\"sal\":990,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hart5kS\",\"mor\":110,\"hap\":109.99847180843115,\"ene\":109.99847180843115,\"int\":77,\"cha\":68,\"exp\":159.72399999985268,\"cre\":71,\"eff\":80,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qUZYHf9\",\"mor\":110,\"hap\":109.99829568983273,\"ene\":109.99829568983273,\"int\":90,\"cha\":57,\"exp\":162.72399999983847,\"cre\":52,\"eff\":93,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F72c4dp\",\"mor\":110,\"hap\":109.99762728989768,\"ene\":109.99762728989768,\"int\":58,\"cha\":65,\"exp\":143.72399999992845,\"cre\":83,\"eff\":56,\"sal\":984,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7TerZRR\",\"mor\":110,\"hap\":109.99912538780191,\"ene\":109.99912538780191,\"int\":94,\"cha\":96,\"exp\":155.7239999998716,\"cre\":88,\"eff\":86,\"sal\":1326,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WSBe7rF\",\"mor\":110,\"hap\":109.99817546266796,\"ene\":109.99817546266796,\"int\":100,\"cha\":73,\"exp\":142.7239999999332,\"cre\":65,\"eff\":74,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uUTIozI\",\"mor\":110,\"hap\":109.99965098536431,\"ene\":109.99965098536431,\"int\":69,\"cha\":92,\"exp\":169.7239999998053,\"cre\":66,\"eff\":69,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xsUfo1u\",\"mor\":110,\"hap\":109.99998065812787,\"ene\":109.99998065812787,\"int\":91,\"cha\":69,\"exp\":166.7239999998195,\"cre\":93,\"eff\":93,\"sal\":1305,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7FjfArJ\",\"mor\":110,\"hap\":109.99738104006968,\"ene\":109.99738104006968,\"int\":70,\"cha\":69,\"exp\":164.72399999982898,\"cre\":85,\"eff\":89,\"sal\":1200,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tf3nIEO\",\"mor\":110,\"hap\":109.99803987007574,\"ene\":109.99803987007574,\"int\":77,\"cha\":79,\"exp\":167.72399999981477,\"cre\":54,\"eff\":72,\"sal\":1116,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZSd2JAQ\",\"mor\":110,\"hap\":109.99818999581339,\"ene\":109.99818999581339,\"int\":57,\"cha\":70,\"exp\":146.72399999991424,\"cre\":61,\"eff\":76,\"sal\":999,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8H76FEJ\",\"mor\":110,\"hap\":109.99801231376044,\"ene\":109.99801231376044,\"int\":100,\"cha\":74,\"exp\":175.72399999977688,\"cre\":69,\"eff\":92,\"sal\":1299,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"KxximOE\",\"mor\":110,\"hap\":109.99957734779102,\"ene\":109.99957734779102,\"int\":95,\"cha\":87,\"exp\":163.72399999983372,\"cre\":67,\"eff\":53,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qiTciDw\",\"mor\":110,\"hap\":109.99850426314197,\"ene\":109.99850426314197,\"int\":66,\"cha\":77,\"exp\":175.72399999977688,\"cre\":84,\"eff\":88,\"sal\":1239,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"REIenWd\",\"mor\":110,\"hap\":109.99991263580604,\"ene\":109.99991263580604,\"int\":87,\"cha\":75,\"exp\":144.72399999992373,\"cre\":70,\"eff\":78,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HPnM7Vn\",\"mor\":110,\"hap\":109.99870648365471,\"ene\":109.99870648365471,\"int\":92,\"cha\":96,\"exp\":167.72399999981477,\"cre\":68,\"eff\":87,\"sal\":1299,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AB9FzZe\",\"mor\":110,\"hap\":109.99864256516274,\"ene\":109.99864256516274,\"int\":97,\"cha\":100,\"exp\":157.72399999986214,\"cre\":60,\"eff\":63,\"sal\":1200,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GDO8CoJ\",\"mor\":110,\"hap\":109.99988724127641,\"ene\":109.99988724127641,\"int\":50,\"cha\":79,\"exp\":146.72399999991424,\"cre\":67,\"eff\":54,\"sal\":957,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4voCpEM\",\"mor\":110,\"hap\":109.998485002338,\"ene\":109.998485002338,\"int\":95,\"cha\":90,\"exp\":168.72399999981005,\"cre\":95,\"eff\":99,\"sal\":1410,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9ZAUUIw\",\"mor\":110,\"hap\":109.999303739888,\"ene\":109.999303739888,\"int\":59,\"cha\":67,\"exp\":164.72399999982898,\"cre\":50,\"eff\":55,\"sal\":954,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"48Rf9B6\",\"mor\":110,\"hap\":109.99955772629022,\"ene\":109.99955772629022,\"int\":71,\"cha\":87,\"exp\":164.72399999982898,\"cre\":100,\"eff\":75,\"sal\":1260,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"3zeJfM3\",\"mor\":110,\"hap\":109.99891077385954,\"ene\":109.99891077385954,\"int\":91,\"cha\":77,\"exp\":134.72399999997108,\"cre\":89,\"eff\":90,\"sal\":1212,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hLrPUiT\",\"mor\":110,\"hap\":109.99708531935673,\"ene\":109.99708531935673,\"int\":50,\"cha\":90,\"exp\":156.7239999998669,\"cre\":65,\"eff\":82,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Zw4znEY\",\"mor\":110,\"hap\":109.9997936155689,\"ene\":109.9997936155689,\"int\":57,\"cha\":61,\"exp\":177.72399999976741,\"cre\":95,\"eff\":90,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"d8Vr3YJ\",\"mor\":110,\"hap\":109.99810496363395,\"ene\":109.99810496363395,\"int\":97,\"cha\":86,\"exp\":144.72399999992373,\"cre\":98,\"eff\":100,\"sal\":1344,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Cq8wTaU\",\"mor\":110,\"hap\":109.99847278655167,\"ene\":109.99847278655167,\"int\":80,\"cha\":57,\"exp\":163.72399999983372,\"cre\":77,\"eff\":85,\"sal\":1155,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"h8cqeGV\",\"mor\":110,\"hap\":109.99904285344996,\"ene\":109.99904285344996,\"int\":75,\"cha\":54,\"exp\":161.7239999998432,\"cre\":80,\"eff\":99,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"I7xJ6QQ\",\"mor\":110,\"hap\":109.99781074089307,\"ene\":109.99781074089307,\"int\":67,\"cha\":78,\"exp\":159.72399999985268,\"cre\":91,\"eff\":69,\"sal\":1161,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ch7rPX5\",\"mor\":110,\"hap\":109.99889234941578,\"ene\":109.99889234941578,\"int\":63,\"cha\":94,\"exp\":146.72399999991424,\"cre\":67,\"eff\":79,\"sal\":1116,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zm0YlJQ\",\"mor\":110,\"hap\":109.99971674426732,\"ene\":109.99971674426732,\"int\":96,\"cha\":85,\"exp\":137.72399999995687,\"cre\":61,\"eff\":100,\"sal\":1206,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"q3wzKfW\",\"mor\":110,\"hap\":109.99919297480713,\"ene\":109.99919297480713,\"int\":66,\"cha\":85,\"exp\":163.72399999983372,\"cre\":80,\"eff\":52,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rDue0RA\",\"mor\":110,\"hap\":109.99855486035499,\"ene\":109.99855486035499,\"int\":99,\"cha\":58,\"exp\":151.72399999989057,\"cre\":79,\"eff\":94,\"sal\":1212,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HErdXc1\",\"mor\":110,\"hap\":109.99716784176756,\"ene\":109.99716784176756,\"int\":78,\"cha\":62,\"exp\":129.7239999999948,\"cre\":100,\"eff\":94,\"sal\":1158,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"MzLquZK\",\"mor\":110,\"hap\":109.99902017151715,\"ene\":109.99902017151715,\"int\":85,\"cha\":93,\"exp\":146.72399999991424,\"cre\":76,\"eff\":68,\"sal\":1173,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SmzODKx\",\"mor\":110,\"hap\":109.99785176874462,\"ene\":109.99785176874462,\"int\":87,\"cha\":68,\"exp\":174.72399999978163,\"cre\":85,\"eff\":92,\"sal\":1287,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bx09gGj\",\"mor\":110,\"hap\":109.99805836083806,\"ene\":109.99805836083806,\"int\":64,\"cha\":95,\"exp\":156.7239999998669,\"cre\":83,\"eff\":50,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rdwuWyG\",\"mor\":110,\"hap\":109.99961974812153,\"ene\":109.99961974812153,\"int\":82,\"cha\":59,\"exp\":170.72399999980055,\"cre\":68,\"eff\":73,\"sal\":1125,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"H0ml7pD\",\"mor\":110,\"hap\":109.9997599000933,\"ene\":109.9997599000933,\"int\":69,\"cha\":59,\"exp\":165.72399999982426,\"cre\":61,\"eff\":66,\"sal\":1029,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EbJEXyZ\",\"mor\":110,\"hap\":109.99933588141778,\"ene\":109.99933588141778,\"int\":92,\"cha\":86,\"exp\":134.72399999997108,\"cre\":52,\"eff\":59,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"acY9OAk\",\"mor\":110,\"hap\":109.99981244411956,\"ene\":109.99981244411956,\"int\":84,\"cha\":86,\"exp\":177.72399999976741,\"cre\":71,\"eff\":72,\"sal\":1239,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sEt8DLP\",\"mor\":110,\"hap\":109.99896390538098,\"ene\":109.99896390538098,\"int\":87,\"cha\":55,\"exp\":151.72399999989057,\"cre\":69,\"eff\":78,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IZfDZ5a\",\"mor\":110,\"hap\":109.99761363635695,\"ene\":109.99761363635695,\"int\":90,\"cha\":83,\"exp\":148.72399999990478,\"cre\":98,\"eff\":78,\"sal\":1260,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"402fMVJ\",\"mor\":110,\"hap\":109.99864003740716,\"ene\":109.99864003740716,\"int\":80,\"cha\":92,\"exp\":145.723999999919,\"cre\":90,\"eff\":61,\"sal\":1173,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gz2o74O\",\"mor\":110,\"hap\":109.99749594512231,\"ene\":109.99749594512231,\"int\":90,\"cha\":98,\"exp\":149.72399999990003,\"cre\":90,\"eff\":93,\"sal\":1329,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GpQnxmR\",\"mor\":110,\"hap\":109.99729953859033,\"ene\":109.99729953859033,\"int\":99,\"cha\":52,\"exp\":166.7239999998195,\"cre\":86,\"eff\":98,\"sal\":1272,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PgCicvQ\",\"mor\":110,\"hap\":109.99824512950673,\"ene\":109.99824512950673,\"int\":63,\"cha\":50,\"exp\":163.72399999983372,\"cre\":67,\"eff\":75,\"sal\":1023,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1jH2yX6\",\"mor\":110,\"hap\":109.9974926375674,\"ene\":109.9974926375674,\"int\":58,\"cha\":84,\"exp\":134.72399999997108,\"cre\":92,\"eff\":77,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7ImchZd\",\"mor\":110,\"hap\":109.99893102748398,\"ene\":109.99893102748398,\"int\":69,\"cha\":90,\"exp\":135.72399999996637,\"cre\":91,\"eff\":84,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JbgAoau\",\"mor\":110,\"hap\":109.99737159879469,\"ene\":109.99737159879469,\"int\":76,\"cha\":88,\"exp\":176.72399999977213,\"cre\":78,\"eff\":98,\"sal\":1317,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"H2YrAof\",\"mor\":110,\"hap\":109.99946456646371,\"ene\":109.99946456646371,\"int\":94,\"cha\":84,\"exp\":171.72399999979584,\"cre\":100,\"eff\":57,\"sal\":1287,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"J9zg6za\",\"mor\":110,\"hap\":109.99738754663677,\"ene\":109.99738754663677,\"int\":88,\"cha\":96,\"exp\":146.72399999991424,\"cre\":69,\"eff\":96,\"sal\":1254,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yR62yx6\",\"mor\":110,\"hap\":109.99831846278077,\"ene\":109.99831846278077,\"int\":83,\"cha\":55,\"exp\":158.7239999998574,\"cre\":81,\"eff\":78,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"eSS8093\",\"mor\":110,\"hap\":109.99940962149583,\"ene\":109.99940962149583,\"int\":55,\"cha\":57,\"exp\":131.7239999999853,\"cre\":84,\"eff\":76,\"sal\":978,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"01kwWDo\",\"mor\":110,\"hap\":109.99871070847843,\"ene\":109.99871070847843,\"int\":98,\"cha\":62,\"exp\":127.72400000000295,\"cre\":56,\"eff\":59,\"sal\":975,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hpNxawe\",\"mor\":110,\"hap\":109.99798134677523,\"ene\":109.99798134677523,\"int\":83,\"cha\":55,\"exp\":128.7239999999995,\"cre\":82,\"eff\":54,\"sal\":975,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nj9FPgL\",\"mor\":110,\"hap\":109.9985662857429,\"ene\":109.9985662857429,\"int\":60,\"cha\":56,\"exp\":151.72399999989057,\"cre\":88,\"eff\":62,\"sal\":1020,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wCpxnFF\",\"mor\":110,\"hap\":109.99777835311093,\"ene\":109.99777835311093,\"int\":51,\"cha\":56,\"exp\":168.72399999981005,\"cre\":52,\"eff\":62,\"sal\":936,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6kH2Mcy\",\"mor\":110,\"hap\":109.99796934307982,\"ene\":109.99796934307982,\"int\":61,\"cha\":64,\"exp\":161.7239999998432,\"cre\":82,\"eff\":94,\"sal\":1155,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"VOUdyHs\",\"mor\":110,\"hap\":109.99906400901345,\"ene\":109.99906400901345,\"int\":96,\"cha\":97,\"exp\":132.72399999998058,\"cre\":73,\"eff\":86,\"sal\":1221,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZHsE28n\",\"mor\":110,\"hap\":109.99731835682336,\"ene\":109.99731835682336,\"int\":95,\"cha\":56,\"exp\":139.7239999999474,\"cre\":67,\"eff\":68,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NeHCNYb\",\"mor\":110,\"hap\":109.99775513418042,\"ene\":109.99775513418042,\"int\":77,\"cha\":52,\"exp\":139.7239999999474,\"cre\":50,\"eff\":88,\"sal\":987,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GpDOOwT\",\"mor\":110,\"hap\":109.99808717953252,\"ene\":109.99808717953252,\"int\":68,\"cha\":56,\"exp\":176.72399999977213,\"cre\":78,\"eff\":65,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wbCZHpF\",\"mor\":110,\"hap\":109.99801686829443,\"ene\":109.99801686829443,\"int\":96,\"cha\":68,\"exp\":127.72400000000295,\"cre\":68,\"eff\":76,\"sal\":1074,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gSv720U\",\"mor\":110,\"hap\":109.99780404022692,\"ene\":109.99780404022692,\"int\":75,\"cha\":61,\"exp\":148.72399999990478,\"cre\":69,\"eff\":87,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"K3zepV3\",\"mor\":110,\"hap\":109.99715545302644,\"ene\":109.99715545302644,\"int\":90,\"cha\":58,\"exp\":172.7239999997911,\"cre\":85,\"eff\":86,\"sal\":1242,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BS8Mh5d\",\"mor\":110,\"hap\":109.997018155862,\"ene\":109.997018155862,\"int\":57,\"cha\":59,\"exp\":143.72399999992845,\"cre\":78,\"eff\":78,\"sal\":1014,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SDkAb4y\",\"mor\":110,\"hap\":109.99968965127366,\"ene\":109.99968965127366,\"int\":75,\"cha\":61,\"exp\":142.7239999999332,\"cre\":75,\"eff\":52,\"sal\":984,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EwJwGiB\",\"mor\":110,\"hap\":109.99769434320662,\"ene\":109.99769434320662,\"int\":66,\"cha\":99,\"exp\":173.72399999978634,\"cre\":89,\"eff\":77,\"sal\":1281,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CBtGccx\",\"mor\":110,\"hap\":109.99739663353053,\"ene\":109.99739663353053,\"int\":96,\"cha\":81,\"exp\":139.7239999999474,\"cre\":64,\"eff\":62,\"sal\":1095,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RX6gZKt\",\"mor\":110,\"hap\":109.99880715856918,\"ene\":109.99880715856918,\"int\":65,\"cha\":60,\"exp\":131.7239999999853,\"cre\":59,\"eff\":83,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UCxcSyT\",\"mor\":110,\"hap\":109.99925152393112,\"ene\":109.99925152393112,\"int\":56,\"cha\":92,\"exp\":134.72399999997108,\"cre\":51,\"eff\":61,\"sal\":951,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HSHD4iq\",\"mor\":110,\"hap\":109.99772522211597,\"ene\":109.99772522211597,\"int\":94,\"cha\":87,\"exp\":154.72399999987636,\"cre\":88,\"eff\":81,\"sal\":1281,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lMyRxF9\",\"mor\":110,\"hap\":109.99859419907739,\"ene\":109.99859419907739,\"int\":77,\"cha\":85,\"exp\":154.72399999987636,\"cre\":90,\"eff\":63,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"u6zzXWk\",\"mor\":110,\"hap\":109.99706010583762,\"ene\":109.99706010583762,\"int\":97,\"cha\":71,\"exp\":174.72399999978163,\"cre\":50,\"eff\":95,\"sal\":1230,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EFFXBbz\",\"mor\":110,\"hap\":109.99735608975833,\"ene\":109.99735608975833,\"int\":94,\"cha\":74,\"exp\":170.72399999980055,\"cre\":95,\"eff\":79,\"sal\":1305,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uC3iP17\",\"mor\":110,\"hap\":109.99722492034415,\"ene\":109.99722492034415,\"int\":82,\"cha\":50,\"exp\":166.7239999998195,\"cre\":96,\"eff\":75,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ELsdsVP\",\"mor\":110,\"hap\":109.9988219584754,\"ene\":109.9988219584754,\"int\":86,\"cha\":70,\"exp\":130.72399999999004,\"cre\":98,\"eff\":94,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EkkcTLj\",\"mor\":110,\"hap\":109.99860258483899,\"ene\":109.99860258483899,\"int\":88,\"cha\":99,\"exp\":162.72399999983847,\"cre\":79,\"eff\":75,\"sal\":1278,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"aHzbZvs\",\"mor\":110,\"hap\":109.99764295569688,\"ene\":109.99764295569688,\"int\":65,\"cha\":99,\"exp\":167.72399999981477,\"cre\":53,\"eff\":94,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"n4S8VfX\",\"mor\":110,\"hap\":109.99732823787,\"ene\":109.99732823787,\"int\":50,\"cha\":87,\"exp\":147.72399999990952,\"cre\":62,\"eff\":52,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sUyzGGF\",\"mor\":110,\"hap\":109.99904220069278,\"ene\":109.99904220069278,\"int\":72,\"cha\":77,\"exp\":141.72399999993794,\"cre\":83,\"eff\":64,\"sal\":1080,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"y7UzUVn\",\"mor\":110,\"hap\":109.99735213714288,\"ene\":109.99735213714288,\"int\":52,\"cha\":64,\"exp\":162.72399999983847,\"cre\":85,\"eff\":65,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AXOluZV\",\"mor\":110,\"hap\":109.99994176603988,\"ene\":109.99994176603988,\"int\":70,\"cha\":75,\"exp\":157.72399999986214,\"cre\":66,\"eff\":76,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UvHDGSL\",\"mor\":110,\"hap\":109.99868784500968,\"ene\":109.99868784500968,\"int\":77,\"cha\":71,\"exp\":166.7239999998195,\"cre\":93,\"eff\":89,\"sal\":1257,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"erlLcq6\",\"mor\":110,\"hap\":109.99825012062712,\"ene\":109.99825012062712,\"int\":67,\"cha\":58,\"exp\":154.72399999987636,\"cre\":94,\"eff\":54,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"MTGsMlp\",\"mor\":110,\"hap\":109.99744361979529,\"ene\":109.99744361979529,\"int\":58,\"cha\":95,\"exp\":142.7239999999332,\"cre\":75,\"eff\":81,\"sal\":1122,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IPWGVZE\",\"mor\":110,\"hap\":109.9981622295255,\"ene\":109.9981622295255,\"int\":80,\"cha\":75,\"exp\":140.72399999994266,\"cre\":99,\"eff\":60,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oKd7KMQ\",\"mor\":110,\"hap\":109.99804430022249,\"ene\":109.99804430022249,\"int\":67,\"cha\":94,\"exp\":149.72399999990003,\"cre\":79,\"eff\":70,\"sal\":1146,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"P7DNQTS\",\"mor\":110,\"hap\":109.99707191727487,\"ene\":109.99707191727487,\"int\":68,\"cha\":71,\"exp\":159.72399999985268,\"cre\":70,\"eff\":84,\"sal\":1125,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CXkccHc\",\"mor\":110,\"hap\":109.99765775576427,\"ene\":109.99765775576427,\"int\":94,\"cha\":56,\"exp\":154.72399999987636,\"cre\":88,\"eff\":79,\"sal\":1182,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"w6OIhT3\",\"mor\":110,\"hap\":109.99863763037237,\"ene\":109.99863763037237,\"int\":61,\"cha\":53,\"exp\":131.7239999999853,\"cre\":52,\"eff\":86,\"sal\":918,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2Zjb4YK\",\"mor\":110,\"hap\":109.99931534140734,\"ene\":109.99931534140734,\"int\":93,\"cha\":55,\"exp\":153.7239999998811,\"cre\":90,\"eff\":82,\"sal\":1188,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8y6iQbp\",\"mor\":110,\"hap\":109.99958992251958,\"ene\":109.99958992251958,\"int\":85,\"cha\":60,\"exp\":129.7239999999948,\"cre\":61,\"eff\":90,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"W3c6mYJ\",\"mor\":110,\"hap\":109.99952695620831,\"ene\":109.99952695620831,\"int\":54,\"cha\":86,\"exp\":174.72399999978163,\"cre\":71,\"eff\":81,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"g9rBiv6\",\"mor\":110,\"hap\":109.99933384471578,\"ene\":109.99933384471578,\"int\":65,\"cha\":61,\"exp\":175.72399999977688,\"cre\":97,\"eff\":76,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"36PAF98\",\"mor\":110,\"hap\":109.99895494456972,\"ene\":109.99895494456972,\"int\":89,\"cha\":78,\"exp\":176.72399999977213,\"cre\":57,\"eff\":67,\"sal\":1170,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"KUJu3Xj\",\"mor\":110,\"hap\":109.9992760618914,\"ene\":109.9992760618914,\"int\":77,\"cha\":91,\"exp\":128.7239999999995,\"cre\":61,\"eff\":72,\"sal\":1056,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"iOTEv3s\",\"mor\":110,\"hap\":109.99981611394095,\"ene\":109.99981611394095,\"int\":70,\"cha\":76,\"exp\":160.72399999984793,\"cre\":95,\"eff\":75,\"sal\":1197,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"byD3vFi\",\"mor\":110,\"hap\":109.99925886717274,\"ene\":109.99925886717274,\"int\":83,\"cha\":70,\"exp\":142.7239999999332,\"cre\":65,\"eff\":67,\"sal\":1050,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hqY4OQw\",\"mor\":110,\"hap\":109.99789594502782,\"ene\":109.99789594502782,\"int\":91,\"cha\":61,\"exp\":169.7239999998053,\"cre\":70,\"eff\":52,\"sal\":1098,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kJedAem\",\"mor\":110,\"hap\":109.99876898627748,\"ene\":109.99876898627748,\"int\":90,\"cha\":50,\"exp\":171.72399999979584,\"cre\":84,\"eff\":72,\"sal\":1170,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Kt1DJL7\",\"mor\":110,\"hap\":109.99763482518976,\"ene\":109.99763482518976,\"int\":50,\"cha\":79,\"exp\":167.72399999981477,\"cre\":51,\"eff\":97,\"sal\":1101,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hfKc3xQ\",\"mor\":110,\"hap\":109.99817466517342,\"ene\":109.99817466517342,\"int\":77,\"cha\":73,\"exp\":147.72399999990952,\"cre\":90,\"eff\":83,\"sal\":1179,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1xpvQs8\",\"mor\":110,\"hap\":109.99856367256217,\"ene\":109.99856367256217,\"int\":60,\"cha\":77,\"exp\":128.7239999999995,\"cre\":66,\"eff\":85,\"sal\":1017,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NUaYOe0\",\"mor\":110,\"hap\":109.9975128522297,\"ene\":109.9975128522297,\"int\":72,\"cha\":100,\"exp\":162.72399999983847,\"cre\":95,\"eff\":60,\"sal\":1236,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lIfoncO\",\"mor\":110,\"hap\":109.99971236934971,\"ene\":109.99971236934971,\"int\":93,\"cha\":66,\"exp\":152.72399999988582,\"cre\":74,\"eff\":99,\"sal\":1221,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PL5g1GB\",\"mor\":110,\"hap\":109.99814496766163,\"ene\":109.99814496766163,\"int\":86,\"cha\":87,\"exp\":151.72399999989057,\"cre\":65,\"eff\":74,\"sal\":1158,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ds8cr9t\",\"mor\":110,\"hap\":109.9976293393549,\"ene\":109.9976293393549,\"int\":69,\"cha\":100,\"exp\":154.72399999987636,\"cre\":99,\"eff\":53,\"sal\":1194,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Ws5Wasr\",\"mor\":110,\"hap\":109.99749980872797,\"ene\":109.99749980872797,\"int\":85,\"cha\":78,\"exp\":145.723999999919,\"cre\":71,\"eff\":54,\"sal\":1068,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rdQIQD3\",\"mor\":110,\"hap\":109.99959559486445,\"ene\":109.99959559486445,\"int\":68,\"cha\":88,\"exp\":140.72399999994266,\"cre\":91,\"eff\":72,\"sal\":1146,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nWeSR1x\",\"mor\":110,\"hap\":109.9992924574544,\"ene\":109.9992924574544,\"int\":50,\"cha\":58,\"exp\":155.7239999998716,\"cre\":57,\"eff\":80,\"sal\":969,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WeTPhah\",\"mor\":110,\"hap\":109.99777386090454,\"ene\":109.99777386090454,\"int\":57,\"cha\":100,\"exp\":131.7239999999853,\"cre\":53,\"eff\":100,\"sal\":1092,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ybclwHI\",\"mor\":110,\"hap\":109.99963879329852,\"ene\":109.99963879329852,\"int\":53,\"cha\":51,\"exp\":169.7239999998053,\"cre\":93,\"eff\":61,\"sal\":1050,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"myYBj7X\",\"mor\":110,\"hap\":109.99905285769601,\"ene\":109.99905285769601,\"int\":84,\"cha\":52,\"exp\":154.72399999987636,\"cre\":87,\"eff\":58,\"sal\":1074,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BFXRMhN\",\"mor\":110,\"hap\":109.99943719663554,\"ene\":109.99943719663554,\"int\":82,\"cha\":64,\"exp\":157.72399999986214,\"cre\":95,\"eff\":72,\"sal\":1179,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hWPrJzY\",\"mor\":110,\"hap\":109.99851949116378,\"ene\":109.99851949116378,\"int\":94,\"cha\":56,\"exp\":171.72399999979584,\"cre\":61,\"eff\":85,\"sal\":1170,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"InpI5Eq\",\"mor\":110,\"hap\":109.9992061711187,\"ene\":109.9992061711187,\"int\":77,\"cha\":89,\"exp\":139.7239999999474,\"cre\":55,\"eff\":89,\"sal\":1116,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kZNU1l4\",\"mor\":110,\"hap\":109.99871904709165,\"ene\":109.99871904709165,\"int\":68,\"cha\":81,\"exp\":130.72399999999004,\"cre\":84,\"eff\":71,\"sal\":1071,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2hwuk1Q\",\"mor\":110,\"hap\":109.99973038913868,\"ene\":109.99973038913868,\"int\":59,\"cha\":61,\"exp\":153.7239999998811,\"cre\":50,\"eff\":58,\"sal\":912,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"w72PEZs\",\"mor\":110,\"hap\":109.99968221903522,\"ene\":109.99968221903522,\"int\":86,\"cha\":70,\"exp\":158.7239999998574,\"cre\":88,\"eff\":67,\"sal\":1176,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"B0SXVdO\",\"mor\":110,\"hap\":109.99922665873405,\"ene\":109.99922665873405,\"int\":97,\"cha\":60,\"exp\":170.72399999980055,\"cre\":80,\"eff\":71,\"sal\":1203,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PBJqiB4\",\"mor\":110,\"hap\":109.99977421322487,\"ene\":109.99977421322487,\"int\":96,\"cha\":72,\"exp\":176.72399999977213,\"cre\":92,\"eff\":67,\"sal\":1278,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"woyddZy\",\"mor\":110,\"hap\":109.99747382625826,\"ene\":109.99747382625826,\"int\":50,\"cha\":81,\"exp\":169.7239999998053,\"cre\":53,\"eff\":65,\"sal\":1023,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"vw8FUCS\",\"mor\":110,\"hap\":109.99990808553675,\"ene\":109.99990808553675,\"int\":50,\"cha\":57,\"exp\":144.72399999992373,\"cre\":60,\"eff\":54,\"sal\":864,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"dfgqaPs\",\"mor\":110,\"hap\":109.99769656559566,\"ene\":109.99769656559566,\"int\":100,\"cha\":60,\"exp\":147.72399999990952,\"cre\":81,\"eff\":63,\"sal\":1122,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JmIrK6f\",\"mor\":110,\"hap\":109.99939919580528,\"ene\":109.99939919580528,\"int\":52,\"cha\":52,\"exp\":160.72399999984793,\"cre\":59,\"eff\":53,\"sal\":897,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8wvGC09\",\"mor\":110,\"hap\":109.99981216640731,\"ene\":109.99981216640731,\"int\":91,\"cha\":83,\"exp\":144.72399999992373,\"cre\":99,\"eff\":82,\"sal\":1266,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yaJjHgj\",\"mor\":110,\"hap\":109.99714792138535,\"ene\":109.99714792138535,\"int\":50,\"cha\":76,\"exp\":136.72399999996162,\"cre\":84,\"eff\":80,\"sal\":1047,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ORO3gWR\",\"mor\":110,\"hap\":109.99989280913495,\"ene\":109.99989280913495,\"int\":58,\"cha\":60,\"exp\":141.72399999993794,\"cre\":77,\"eff\":59,\"sal\":954,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nYqGozf\",\"mor\":110,\"hap\":109.99729958979489,\"ene\":109.99729958979489,\"int\":62,\"cha\":81,\"exp\":129.7239999999948,\"cre\":96,\"eff\":88,\"sal\":1137,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"N6QjekW\",\"mor\":110,\"hap\":109.99763084412145,\"ene\":109.99763084412145,\"int\":83,\"cha\":95,\"exp\":158.7239999998574,\"cre\":52,\"eff\":53,\"sal\":1092,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ct2JBDw\",\"mor\":110,\"hap\":109.99773978330275,\"ene\":109.99773978330275,\"int\":54,\"cha\":76,\"exp\":157.72399999986214,\"cre\":87,\"eff\":62,\"sal\":1077,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rIcotOr\",\"mor\":110,\"hap\":109.99877744522819,\"ene\":109.99877744522819,\"int\":70,\"cha\":75,\"exp\":128.7239999999995,\"cre\":50,\"eff\":95,\"sal\":1023,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HarQAuN\",\"mor\":110,\"hap\":109.99846770719816,\"ene\":109.99846770719816,\"int\":58,\"cha\":94,\"exp\":171.72399999979584,\"cre\":95,\"eff\":69,\"sal\":1230,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lndG7I8\",\"mor\":110,\"hap\":109.9985300084236,\"ene\":109.9985300084236,\"int\":77,\"cha\":54,\"exp\":150.7239999998953,\"cre\":82,\"eff\":66,\"sal\":1056,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hAMNZQS\",\"mor\":110,\"hap\":109.99897019389557,\"ene\":109.99897019389557,\"int\":52,\"cha\":87,\"exp\":166.7239999998195,\"cre\":69,\"eff\":54,\"sal\":1053,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XRibcwo\",\"mor\":110,\"hap\":109.99996791531242,\"ene\":109.99996791531242,\"int\":95,\"cha\":55,\"exp\":139.7239999999474,\"cre\":76,\"eff\":69,\"sal\":1071,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"e4MTx94\",\"mor\":110,\"hap\":109.99835580624196,\"ene\":109.99835580624196,\"int\":90,\"cha\":58,\"exp\":165.72399999982426,\"cre\":69,\"eff\":85,\"sal\":1170,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zapwRBw\",\"mor\":110,\"hap\":109.9980324753924,\"ene\":109.9980324753924,\"int\":79,\"cha\":79,\"exp\":159.72399999985268,\"cre\":86,\"eff\":78,\"sal\":1212,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YgCA9QB\",\"mor\":110,\"hap\":109.99903785069998,\"ene\":109.99903785069998,\"int\":82,\"cha\":62,\"exp\":136.72399999996162,\"cre\":81,\"eff\":69,\"sal\":1059,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"iVjg7vv\",\"mor\":110,\"hap\":109.99724648311299,\"ene\":109.99724648311299,\"int\":62,\"cha\":57,\"exp\":148.72399999990478,\"cre\":52,\"eff\":97,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hFx7I43\",\"mor\":110,\"hap\":109.99719520745727,\"ene\":109.99719520745727,\"int\":59,\"cha\":74,\"exp\":164.72399999982898,\"cre\":93,\"eff\":88,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"krN82jE\",\"mor\":110,\"hap\":109.99964830974973,\"ene\":109.99964830974973,\"int\":58,\"cha\":86,\"exp\":135.72399999996637,\"cre\":63,\"eff\":55,\"sal\":960,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"U57nDKm\",\"mor\":110,\"hap\":109.9995615483251,\"ene\":109.9995615483251,\"int\":64,\"cha\":65,\"exp\":170.72399999980055,\"cre\":55,\"eff\":62,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}}],\"employeeProd\":{\"Operations\":4795198.221824503,\"Engineer\":1079137.3093421853,\"Business\":252038.54631004733,\"Management\":470029.5998125486,\"Research & Development\":0,\"total\":6596403.677289283,\"Training\":0,\"Unassigned\":0},\"employeeJobs\":{\"Operations\":108,\"Engineer\":25,\"Business\":10,\"Management\":10,\"Research & Development\":0,\"Training\":0,\"Unassigned\":0,\"total\":153},\"loc\":\"Chongqing\",\"size\":153}},\"Sector-12\":{\"ctor\":\"OfficeSpace\",\"data\":{\"minEne\":0,\"maxEne\":110,\"minHap\":0,\"maxHap\":110,\"maxMor\":110,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XthhKGx\",\"mor\":110,\"hap\":109.99865219550975,\"ene\":109.99865219550975,\"int\":98,\"cha\":95,\"exp\":289.0709999992455,\"cre\":83,\"eff\":79,\"sal\":1263,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"N5UvkUN\",\"mor\":110,\"hap\":109.99822584871481,\"ene\":109.99822584871481,\"int\":57,\"cha\":50,\"exp\":289.0709999992455,\"cre\":91,\"eff\":55,\"sal\":957,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HohQu1d\",\"mor\":110,\"hap\":109.99723161214644,\"ene\":109.99723161214644,\"int\":61,\"cha\":87,\"exp\":309.07099999915073,\"cre\":58,\"eff\":73,\"sal\":1095,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sspaePW\",\"mor\":110,\"hap\":109.9981710793437,\"ene\":109.9981710793437,\"int\":51,\"cha\":78,\"exp\":317.07099999911287,\"cre\":66,\"eff\":80,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bweP8Py\",\"mor\":110,\"hap\":109.99820590508091,\"ene\":109.99820590508091,\"int\":57,\"cha\":60,\"exp\":296.07099999921235,\"cre\":63,\"eff\":93,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"POFJMqj\",\"mor\":110,\"hap\":109.99789864040001,\"ene\":109.99789864040001,\"int\":84,\"cha\":80,\"exp\":291.070999999236,\"cre\":97,\"eff\":85,\"sal\":1242,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HWb5aB6\",\"mor\":110,\"hap\":109.9993836287138,\"ene\":109.9993836287138,\"int\":74,\"cha\":86,\"exp\":310.070999999146,\"cre\":96,\"eff\":100,\"sal\":1329,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HijSGKo\",\"mor\":110,\"hap\":109.99873888910604,\"ene\":109.99873888910604,\"int\":73,\"cha\":61,\"exp\":304.07099999917443,\"cre\":68,\"eff\":54,\"sal\":1011,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kV7xzfr\",\"mor\":110,\"hap\":109.99758564255288,\"ene\":109.99758564255288,\"int\":60,\"cha\":66,\"exp\":294.0709999992218,\"cre\":100,\"eff\":100,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"05rpRYd\",\"mor\":110,\"hap\":109.99770701037123,\"ene\":109.99770701037123,\"int\":91,\"cha\":50,\"exp\":302.0709999991839,\"cre\":79,\"eff\":95,\"sal\":1182,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xsxC0nk\",\"mor\":110,\"hap\":109.99782153791213,\"ene\":109.99782153791213,\"int\":97,\"cha\":87,\"exp\":290.07099999924077,\"cre\":82,\"eff\":70,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0TRMYDe\",\"mor\":110,\"hap\":109.99802861636786,\"ene\":109.99802861636786,\"int\":98,\"cha\":51,\"exp\":297.0709999992076,\"cre\":72,\"eff\":69,\"sal\":1092,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"g9qBZyq\",\"mor\":110,\"hap\":109.99851087827632,\"ene\":109.99851087827632,\"int\":80,\"cha\":69,\"exp\":298.07099999920285,\"cre\":95,\"eff\":70,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xddL9EG\",\"mor\":110,\"hap\":109.99727587610057,\"ene\":109.99727587610057,\"int\":75,\"cha\":71,\"exp\":296.07099999921235,\"cre\":61,\"eff\":78,\"sal\":1074,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"pk7RCeV\",\"mor\":110,\"hap\":109.99757406255681,\"ene\":109.99757406255681,\"int\":72,\"cha\":77,\"exp\":284.0709999992692,\"cre\":98,\"eff\":86,\"sal\":1182,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ozC9q24\",\"mor\":110,\"hap\":109.99847590865576,\"ene\":109.99847590865576,\"int\":54,\"cha\":79,\"exp\":285.0709999992644,\"cre\":90,\"eff\":69,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8Gag1t9\",\"mor\":110,\"hap\":109.99827770390723,\"ene\":109.99827770390723,\"int\":72,\"cha\":89,\"exp\":273.07099999932126,\"cre\":83,\"eff\":79,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"D82c49s\",\"mor\":110,\"hap\":109.99707899994459,\"ene\":109.99707899994459,\"int\":95,\"cha\":97,\"exp\":312.0709999991365,\"cre\":71,\"eff\":68,\"sal\":1260,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oP6QqDB\",\"mor\":110,\"hap\":109.99848036313475,\"ene\":109.99848036313475,\"int\":85,\"cha\":65,\"exp\":283.0709999992739,\"cre\":59,\"eff\":63,\"sal\":996,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"91UhGjk\",\"mor\":110,\"hap\":109.99740587929176,\"ene\":109.99740587929176,\"int\":65,\"cha\":88,\"exp\":310.070999999146,\"cre\":55,\"eff\":93,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"doAB2sm\",\"mor\":110,\"hap\":109.99950155553947,\"ene\":109.99950155553947,\"int\":50,\"cha\":60,\"exp\":323.07099999908445,\"cre\":62,\"eff\":64,\"sal\":1008,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JNeZRqh\",\"mor\":110,\"hap\":109.99864358348815,\"ene\":109.99864358348815,\"int\":98,\"cha\":96,\"exp\":306.07099999916494,\"cre\":91,\"eff\":51,\"sal\":1257,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AbDsKS1\",\"mor\":110,\"hap\":109.99814592948303,\"ene\":109.99814592948303,\"int\":56,\"cha\":71,\"exp\":273.07099999932126,\"cre\":53,\"eff\":100,\"sal\":990,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BklPchR\",\"mor\":110,\"hap\":109.9976287902603,\"ene\":109.9976287902603,\"int\":67,\"cha\":85,\"exp\":298.07099999920285,\"cre\":69,\"eff\":65,\"sal\":1083,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xwkQCq8\",\"mor\":110,\"hap\":109.99907517569298,\"ene\":109.99907517569298,\"int\":62,\"cha\":78,\"exp\":296.07099999921235,\"cre\":61,\"eff\":62,\"sal\":1008,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"3alkfxc\",\"mor\":110,\"hap\":109.9971530731947,\"ene\":109.9971530731947,\"int\":50,\"cha\":76,\"exp\":302.0709999991839,\"cre\":70,\"eff\":94,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Ttk8cy6\",\"mor\":110,\"hap\":109.99798511573323,\"ene\":109.99798511573323,\"int\":97,\"cha\":86,\"exp\":277.07099999930233,\"cre\":91,\"eff\":75,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FoAIxp6\",\"mor\":110,\"hap\":109.9991829344143,\"ene\":109.9991829344143,\"int\":97,\"cha\":59,\"exp\":300.07099999919336,\"cre\":82,\"eff\":91,\"sal\":1218,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bQgVlPx\",\"mor\":110,\"hap\":109.99789639694056,\"ene\":109.99789639694056,\"int\":82,\"cha\":95,\"exp\":288.0709999992502,\"cre\":97,\"eff\":79,\"sal\":1254,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ojmXtTu\",\"mor\":110,\"hap\":109.99864011286479,\"ene\":109.99864011286479,\"int\":91,\"cha\":63,\"exp\":280.0709999992881,\"cre\":83,\"eff\":50,\"sal\":1032,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yhrbImr\",\"mor\":110,\"hap\":109.99872588692293,\"ene\":109.99872588692293,\"int\":99,\"cha\":66,\"exp\":321.0709999990939,\"cre\":91,\"eff\":54,\"sal\":1224,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PXhLetN\",\"mor\":110,\"hap\":109.99839206253552,\"ene\":109.99839206253552,\"int\":60,\"cha\":54,\"exp\":321.0709999990939,\"cre\":67,\"eff\":88,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"M649hZV\",\"mor\":110,\"hap\":109.9972286999706,\"ene\":109.9972286999706,\"int\":61,\"cha\":74,\"exp\":323.07099999908445,\"cre\":78,\"eff\":89,\"sal\":1206,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9WWebN5\",\"mor\":110,\"hap\":109.9992752769928,\"ene\":109.9992752769928,\"int\":84,\"cha\":95,\"exp\":288.0709999992502,\"cre\":55,\"eff\":96,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PG37UKj\",\"mor\":110,\"hap\":109.99761362925572,\"ene\":109.99761362925572,\"int\":93,\"cha\":80,\"exp\":319.0709999991034,\"cre\":74,\"eff\":51,\"sal\":1182,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"m2wGASw\",\"mor\":110,\"hap\":109.99752790958308,\"ene\":109.99752790958308,\"int\":74,\"cha\":55,\"exp\":285.0709999992644,\"cre\":58,\"eff\":63,\"sal\":936,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"E35hwyY\",\"mor\":110,\"hap\":109.99750918651468,\"ene\":109.99750918651468,\"int\":67,\"cha\":84,\"exp\":311.0709999991413,\"cre\":52,\"eff\":56,\"sal\":1041,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Olw6ZtO\",\"mor\":110,\"hap\":109.99753074447909,\"ene\":109.99753074447909,\"int\":96,\"cha\":83,\"exp\":283.0709999992739,\"cre\":85,\"eff\":63,\"sal\":1161,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"U6hWZk2\",\"mor\":110,\"hap\":109.99800810118121,\"ene\":109.99800810118121,\"int\":74,\"cha\":73,\"exp\":273.0679999993213,\"cre\":92,\"eff\":77,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8yDrUr6\",\"mor\":110,\"hap\":109.9976409329688,\"ene\":109.9976409329688,\"int\":78,\"cha\":67,\"exp\":277.06799999930234,\"cre\":86,\"eff\":99,\"sal\":1152,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ic2xYKJ\",\"mor\":110,\"hap\":109.99715282688564,\"ene\":109.99715282688564,\"int\":58,\"cha\":62,\"exp\":276.06799999930706,\"cre\":79,\"eff\":63,\"sal\":945,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WRQaHsZ\",\"mor\":110,\"hap\":109.99891734982998,\"ene\":109.99891734982998,\"int\":50,\"cha\":52,\"exp\":278.0679999992976,\"cre\":54,\"eff\":96,\"sal\":921,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Wvu5cwh\",\"mor\":110,\"hap\":109.99863082610193,\"ene\":109.99863082610193,\"int\":52,\"cha\":57,\"exp\":286.0679999992597,\"cre\":66,\"eff\":72,\"sal\":930,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"V7IVxTm\",\"mor\":110,\"hap\":109.99740286547711,\"ene\":109.99740286547711,\"int\":74,\"cha\":86,\"exp\":290.0679999992408,\"cre\":78,\"eff\":92,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IhM2BTW\",\"mor\":110,\"hap\":109.99907657944398,\"ene\":109.99907657944398,\"int\":70,\"cha\":51,\"exp\":305.06799999916973,\"cre\":77,\"eff\":67,\"sal\":1041,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"umtMfF8\",\"mor\":110,\"hap\":109.99996275393404,\"ene\":109.99996275393404,\"int\":100,\"cha\":67,\"exp\":308.0679999991555,\"cre\":89,\"eff\":92,\"sal\":1299,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tUdyf5Z\",\"mor\":110,\"hap\":109.99804976766754,\"ene\":109.99804976766754,\"int\":63,\"cha\":73,\"exp\":273.0679999993213,\"cre\":78,\"eff\":82,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ftt2Opo\",\"mor\":110,\"hap\":109.99892825117561,\"ene\":109.99892825117561,\"int\":67,\"cha\":65,\"exp\":274.06799999931656,\"cre\":80,\"eff\":58,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"74uywWd\",\"mor\":110,\"hap\":109.99819415961173,\"ene\":109.99819415961173,\"int\":59,\"cha\":89,\"exp\":276.06799999930706,\"cre\":71,\"eff\":75,\"sal\":1041,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bBfKSdT\",\"mor\":110,\"hap\":109.9999736095937,\"ene\":109.9999736095937,\"int\":78,\"cha\":70,\"exp\":290.0679999992408,\"cre\":53,\"eff\":57,\"sal\":975,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"COKI9Eq\",\"mor\":110,\"hap\":109.99725479979156,\"ene\":109.99725479979156,\"int\":71,\"cha\":64,\"exp\":300.0679999991934,\"cre\":86,\"eff\":81,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WOumOKa\",\"mor\":110,\"hap\":109.999598350702,\"ene\":109.999598350702,\"int\":85,\"cha\":57,\"exp\":274.06799999931656,\"cre\":74,\"eff\":81,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4kpt7d5\",\"mor\":110,\"hap\":109.9970289607043,\"ene\":109.9970289607043,\"int\":53,\"cha\":51,\"exp\":317.0679999991129,\"cre\":84,\"eff\":82,\"sal\":1092,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GCysi56\",\"mor\":110,\"hap\":109.99771694679596,\"ene\":109.99771694679596,\"int\":57,\"cha\":65,\"exp\":309.06799999915074,\"cre\":89,\"eff\":74,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PfzKpIM\",\"mor\":110,\"hap\":109.99829433151642,\"ene\":109.99829433151642,\"int\":57,\"cha\":63,\"exp\":285.06799999926443,\"cre\":81,\"eff\":54,\"sal\":951,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"c523z8y\",\"mor\":110,\"hap\":109.9973065024827,\"ene\":109.9973065024827,\"int\":68,\"cha\":88,\"exp\":293.0679999992266,\"cre\":79,\"eff\":61,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mPYkS5B\",\"mor\":110,\"hap\":109.99851547763754,\"ene\":109.99851547763754,\"int\":67,\"cha\":76,\"exp\":302.06799999918394,\"cre\":90,\"eff\":96,\"sal\":1224,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZyqcCMw\",\"mor\":110,\"hap\":109.99717785810934,\"ene\":109.99717785810934,\"int\":52,\"cha\":51,\"exp\":312.06799999913653,\"cre\":85,\"eff\":73,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"X7TPw07\",\"mor\":110,\"hap\":109.99923841756373,\"ene\":109.99923841756373,\"int\":73,\"cha\":52,\"exp\":318.0679999991081,\"cre\":50,\"eff\":99,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qpOPAeq\",\"mor\":110,\"hap\":109.99733501368001,\"ene\":109.99733501368001,\"int\":85,\"cha\":69,\"exp\":304.06799999917445,\"cre\":93,\"eff\":69,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"T2Yd4WD\",\"mor\":110,\"hap\":109.99863277003195,\"ene\":109.99863277003195,\"int\":57,\"cha\":71,\"exp\":315.0679999991223,\"cre\":74,\"eff\":88,\"sal\":1146,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JXLT7SE\",\"mor\":110,\"hap\":109.99829375787594,\"ene\":109.99829375787594,\"int\":99,\"cha\":81,\"exp\":299.06799999919815,\"cre\":65,\"eff\":50,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bms0W6x\",\"mor\":110,\"hap\":109.99805533193285,\"ene\":109.99805533193285,\"int\":54,\"cha\":93,\"exp\":302.06799999918394,\"cre\":51,\"eff\":62,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"p5UCvl3\",\"mor\":110,\"hap\":109.9982475338495,\"ene\":109.9982475338495,\"int\":64,\"cha\":64,\"exp\":319.0679999991034,\"cre\":75,\"eff\":65,\"sal\":1092,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qMpxKMG\",\"mor\":110,\"hap\":109.99978405695612,\"ene\":109.99978405695612,\"int\":93,\"cha\":81,\"exp\":275.06799999931184,\"cre\":53,\"eff\":62,\"sal\":1023,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mSRUW69\",\"mor\":110,\"hap\":109.99763843924615,\"ene\":109.99763843924615,\"int\":78,\"cha\":95,\"exp\":290.0679999992408,\"cre\":93,\"eff\":66,\"sal\":1197,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ef5CUrR\",\"mor\":110,\"hap\":109.99762568546213,\"ene\":109.99762568546213,\"int\":85,\"cha\":66,\"exp\":315.0679999991223,\"cre\":68,\"eff\":94,\"sal\":1215,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1EtDdoR\",\"mor\":110,\"hap\":109.99818533625054,\"ene\":109.99818533625054,\"int\":77,\"cha\":74,\"exp\":275.06799999931184,\"cre\":68,\"eff\":73,\"sal\":1032,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CrBkgbQ\",\"mor\":110,\"hap\":109.99842095571361,\"ene\":109.99842095571361,\"int\":66,\"cha\":78,\"exp\":275.06799999931184,\"cre\":92,\"eff\":82,\"sal\":1110,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RudRq5C\",\"mor\":110,\"hap\":109.99841299854407,\"ene\":109.99841299854407,\"int\":83,\"cha\":61,\"exp\":320.0679999990987,\"cre\":59,\"eff\":50,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NbnUaxo\",\"mor\":110,\"hap\":109.99956447978406,\"ene\":109.99956447978406,\"int\":55,\"cha\":92,\"exp\":313.0679999991318,\"cre\":82,\"eff\":76,\"sal\":1185,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LH5LecC\",\"mor\":110,\"hap\":109.99963299946864,\"ene\":109.99963299946864,\"int\":59,\"cha\":77,\"exp\":286.0679999992597,\"cre\":92,\"eff\":96,\"sal\":1161,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"pUy0o7K\",\"mor\":110,\"hap\":109.99821851146697,\"ene\":109.99821851146697,\"int\":70,\"cha\":61,\"exp\":300.0679999991934,\"cre\":62,\"eff\":79,\"sal\":1047,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qdUd13i\",\"mor\":110,\"hap\":109.99882496794069,\"ene\":109.99882496794069,\"int\":77,\"cha\":76,\"exp\":289.0679999992455,\"cre\":97,\"eff\":81,\"sal\":1191,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"O06zf4E\",\"mor\":110,\"hap\":109.99773640409923,\"ene\":109.99773640409923,\"int\":73,\"cha\":50,\"exp\":311.0679999991413,\"cre\":73,\"eff\":65,\"sal\":1047,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GPLiknf\",\"mor\":110,\"hap\":109.99869046673274,\"ene\":109.99869046673274,\"int\":55,\"cha\":63,\"exp\":323.06799999908446,\"cre\":94,\"eff\":66,\"sal\":1134,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"3zxWUM2\",\"mor\":110,\"hap\":109.99711250069362,\"ene\":109.99711250069362,\"int\":94,\"cha\":80,\"exp\":294.0679999992218,\"cre\":72,\"eff\":72,\"sal\":1167,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LLvkQ2t\",\"mor\":110,\"hap\":109.99996052338967,\"ene\":109.99996052338967,\"int\":91,\"cha\":72,\"exp\":299.06799999919815,\"cre\":65,\"eff\":52,\"sal\":1068,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UD4O4D9\",\"mor\":110,\"hap\":109.99922227765654,\"ene\":109.99922227765654,\"int\":91,\"cha\":88,\"exp\":284.0679999992692,\"cre\":83,\"eff\":83,\"sal\":1218,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LYUfhDv\",\"mor\":110,\"hap\":109.99880948197455,\"ene\":109.99880948197455,\"int\":98,\"cha\":76,\"exp\":313.0679999991318,\"cre\":100,\"eff\":87,\"sal\":1353,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"5lLsMq6\",\"mor\":110,\"hap\":109.99759213597963,\"ene\":109.99759213597963,\"int\":50,\"cha\":59,\"exp\":307.06799999916024,\"cre\":94,\"eff\":58,\"sal\":1035,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bDH2yHH\",\"mor\":110,\"hap\":109.9973250799612,\"ene\":109.9973250799612,\"int\":55,\"cha\":65,\"exp\":315.0679999991223,\"cre\":60,\"eff\":74,\"sal\":1038,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"q2l27QR\",\"mor\":110,\"hap\":109.99914253485935,\"ene\":109.99914253485935,\"int\":85,\"cha\":53,\"exp\":301.06799999918866,\"cre\":70,\"eff\":64,\"sal\":1050,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1BoaVvR\",\"mor\":110,\"hap\":109.99787186961743,\"ene\":109.99787186961743,\"int\":59,\"cha\":67,\"exp\":308.0679999991555,\"cre\":66,\"eff\":75,\"sal\":1056,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gK3tdtO\",\"mor\":110,\"hap\":109.9984124168334,\"ene\":109.9984124168334,\"int\":63,\"cha\":77,\"exp\":290.0679999992408,\"cre\":58,\"eff\":55,\"sal\":960,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GAGEpxq\",\"mor\":110,\"hap\":109.99725302330718,\"ene\":109.99725302330718,\"int\":87,\"cha\":72,\"exp\":295.0679999992171,\"cre\":95,\"eff\":92,\"sal\":1254,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8izfPpM\",\"mor\":110,\"hap\":109.99753897883328,\"ene\":109.99753897883328,\"int\":69,\"cha\":53,\"exp\":314.0679999991271,\"cre\":60,\"eff\":50,\"sal\":969,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hycT3V3\",\"mor\":110,\"hap\":109.9988196471325,\"ene\":109.9988196471325,\"int\":91,\"cha\":84,\"exp\":282.06799999927864,\"cre\":83,\"eff\":55,\"sal\":1116,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9d9TmdV\",\"mor\":110,\"hap\":109.99885865116597,\"ene\":109.99885865116597,\"int\":75,\"cha\":71,\"exp\":283.06499999927394,\"cre\":64,\"eff\":76,\"sal\":1038,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"p9K54iA\",\"mor\":110,\"hap\":109.99895939763776,\"ene\":109.99895939763776,\"int\":55,\"cha\":85,\"exp\":297.0649999992076,\"cre\":88,\"eff\":97,\"sal\":1197,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IWKig5i\",\"mor\":110,\"hap\":109.99892956336254,\"ene\":109.99892956336254,\"int\":95,\"cha\":77,\"exp\":277.06499999930236,\"cre\":63,\"eff\":93,\"sal\":1146,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7pLXQlX\",\"mor\":110,\"hap\":109.99929549355885,\"ene\":109.99929549355885,\"int\":66,\"cha\":87,\"exp\":304.06499999917446,\"cre\":90,\"eff\":57,\"sal\":1143,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"cJ8Krrp\",\"mor\":110,\"hap\":109.99936058718578,\"ene\":109.99936058718578,\"int\":95,\"cha\":82,\"exp\":298.0649999992029,\"cre\":79,\"eff\":68,\"sal\":1197,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EOv8GlN\",\"mor\":110,\"hap\":109.99821941970484,\"ene\":109.99821941970484,\"int\":94,\"cha\":66,\"exp\":294.0649999992218,\"cre\":97,\"eff\":89,\"sal\":1251,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tXtbiaM\",\"mor\":110,\"hap\":109.99823611331135,\"ene\":109.99823611331135,\"int\":94,\"cha\":89,\"exp\":296.0649999992124,\"cre\":86,\"eff\":94,\"sal\":1308,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"fWqKCmQ\",\"mor\":110,\"hap\":109.99908136192083,\"ene\":109.99908136192083,\"int\":83,\"cha\":82,\"exp\":288.06499999925023,\"cre\":69,\"eff\":94,\"sal\":1179,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HLtBII1\",\"mor\":110,\"hap\":109.99770426577308,\"ene\":109.99770426577308,\"int\":53,\"cha\":97,\"exp\":286.0649999992597,\"cre\":67,\"eff\":79,\"sal\":1077,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JWaBfDu\",\"mor\":110,\"hap\":109.99941338977744,\"ene\":109.99941338977744,\"int\":64,\"cha\":86,\"exp\":275.06499999931185,\"cre\":63,\"eff\":83,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tW0oBn8\",\"mor\":110,\"hap\":109.99926485099064,\"ene\":109.99926485099064,\"int\":94,\"cha\":62,\"exp\":310.06499999914604,\"cre\":84,\"eff\":95,\"sal\":1266,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WkxMhDl\",\"mor\":110,\"hap\":109.99911230712931,\"ene\":109.99911230712931,\"int\":90,\"cha\":84,\"exp\":322.0649999990892,\"cre\":58,\"eff\":54,\"sal\":1155,\"loc\":\"\",\"pos\":\"Operations\"}}],\"employeeProd\":{\"Operations\":3248518.444492114,\"Engineer\":628742.6749606509,\"Business\":123342.70014739287,\"Management\":275175.78692483634,\"Research & Development\":0,\"total\":4275779.606524994,\"Unassigned\":0},\"employeeJobs\":{\"Operations\":75,\"Engineer\":15,\"Business\":5,\"Management\":5,\"Research & Development\":0,\"Training\":0,\"Unassigned\":0,\"total\":100},\"loc\":\"Sector-12\",\"size\":100}},\"New Tokyo\":{\"ctor\":\"OfficeSpace\",\"data\":{\"minEne\":0,\"maxEne\":110,\"minHap\":0,\"maxHap\":110,\"maxMor\":110,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RgN8wvt\",\"mor\":110,\"hap\":109.99955586933336,\"ene\":109.99955586933336,\"int\":82,\"cha\":94.01627683950493,\"exp\":171.68027683930094,\"cre\":88,\"eff\":51.01627683950493,\"sal\":1227,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7HCpQ8z\",\"mor\":110,\"hap\":109.9983063284926,\"ene\":109.9983063284926,\"int\":81,\"cha\":57.01581114837046,\"exp\":147.67681114828022,\"cre\":64,\"eff\":60.01581114837046,\"sal\":996,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UcsiIKF\",\"mor\":110,\"hap\":109.99827408845583,\"ene\":109.99827408845583,\"int\":52,\"cha\":60.01756242334238,\"exp\":170.67556242314316,\"cre\":75,\"eff\":100.01756242334238,\"sal\":1140,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"K1S1bq4\",\"mor\":110,\"hap\":109.99980201864413,\"ene\":109.99980201864413,\"int\":58,\"cha\":78.00146668698032,\"exp\":147.64146668689023,\"cre\":80,\"eff\":66.00146668698032,\"sal\":1056,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oCPYm1X\",\"mor\":110,\"hap\":109.99914077897138,\"ene\":109.99914077897138,\"int\":50,\"cha\":51,\"exp\":173.63699999978675,\"cre\":64,\"eff\":60,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mZRuHEj\",\"mor\":110,\"hap\":109.9975132606504,\"ene\":109.9975132606504,\"int\":98,\"cha\":57,\"exp\":148.63699999990519,\"cre\":80,\"eff\":74,\"sal\":1140,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"jQbx43r\",\"mor\":110,\"hap\":109.99828537306267,\"ene\":109.99828537306267,\"int\":57,\"cha\":93,\"exp\":145.6369999999194,\"cre\":55,\"eff\":78,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9e1xbAw\",\"mor\":110,\"hap\":109.99959515510542,\"ene\":109.99959515510542,\"int\":54,\"cha\":58,\"exp\":138.63699999995256,\"cre\":72,\"eff\":52,\"sal\":891,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZK0p4Me\",\"mor\":110,\"hap\":109.99935755429466,\"ene\":109.99935755429466,\"int\":77,\"cha\":53,\"exp\":172.6369999997915,\"cre\":80,\"eff\":81,\"sal\":1158,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NcN4JBB\",\"mor\":110,\"hap\":109.99969851425303,\"ene\":109.99969851425303,\"int\":81,\"cha\":79,\"exp\":131.6369999999857,\"cre\":59,\"eff\":72,\"sal\":1035,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Fn4318L\",\"mor\":110,\"hap\":109.99784465232982,\"ene\":109.99784465232982,\"int\":71,\"cha\":70,\"exp\":130.63699999999045,\"cre\":97,\"eff\":63,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FTHh3D9\",\"mor\":110,\"hap\":109.99706461417483,\"ene\":109.99706461417483,\"int\":83,\"cha\":67,\"exp\":165.63699999982467,\"cre\":93,\"eff\":54,\"sal\":1155,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PuBqUEs\",\"mor\":110,\"hap\":109.99985913553394,\"ene\":109.99985913553394,\"int\":52,\"cha\":93,\"exp\":170.63699999980096,\"cre\":51,\"eff\":98,\"sal\":1161,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"duEACQB\",\"mor\":110,\"hap\":109.9993514148544,\"ene\":109.9993514148544,\"int\":67,\"cha\":78,\"exp\":139.63699999994782,\"cre\":51,\"eff\":93,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nLBRAVY\",\"mor\":110,\"hap\":109.99815836185705,\"ene\":109.99815836185705,\"int\":54,\"cha\":74,\"exp\":155.63699999987202,\"cre\":78,\"eff\":82,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ofv58zW\",\"mor\":110,\"hap\":109.99999373428972,\"ene\":109.99999373428972,\"int\":87,\"cha\":78,\"exp\":177.63699999976782,\"cre\":93,\"eff\":77,\"sal\":1305,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0tjvcfy\",\"mor\":110,\"hap\":109.99990514078405,\"ene\":109.99990514078405,\"int\":75,\"cha\":99,\"exp\":142.6369999999336,\"cre\":74,\"eff\":100,\"sal\":1239,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"S2whww4\",\"mor\":110,\"hap\":109.99902930848386,\"ene\":109.99902930848386,\"int\":75,\"cha\":98,\"exp\":138.63699999995256,\"cre\":81,\"eff\":63,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GJhU5fI\",\"mor\":110,\"hap\":109.99831735625602,\"ene\":109.99831735625602,\"int\":54,\"cha\":77,\"exp\":176.63699999977254,\"cre\":84,\"eff\":70,\"sal\":1152,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oZSr5H2\",\"mor\":110,\"hap\":109.99770791942306,\"ene\":109.99770791942306,\"int\":95,\"cha\":71,\"exp\":132.636999999981,\"cre\":59,\"eff\":55,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PBMcF9q\",\"mor\":110,\"hap\":109.99721947637637,\"ene\":109.99721947637637,\"int\":54,\"cha\":60,\"exp\":152.63699999988623,\"cre\":65,\"eff\":81,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"29yrJAH\",\"mor\":110,\"hap\":109.99722826320311,\"ene\":109.99722826320311,\"int\":80,\"cha\":89,\"exp\":142.6369999999336,\"cre\":79,\"eff\":94,\"sal\":1221,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Iak9Gbf\",\"mor\":110,\"hap\":109.99942210143321,\"ene\":109.99942210143321,\"int\":76,\"cha\":52,\"exp\":134.6369999999715,\"cre\":68,\"eff\":72,\"sal\":975,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"so018Lh\",\"mor\":110,\"hap\":109.9972317090806,\"ene\":109.9972317090806,\"int\":95,\"cha\":74,\"exp\":166.63699999981992,\"cre\":74,\"eff\":63,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XpGzvVJ\",\"mor\":110,\"hap\":109.99973143664555,\"ene\":109.99973143664555,\"int\":62,\"cha\":78,\"exp\":133.63699999997624,\"cre\":82,\"eff\":84,\"sal\":1086,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FVD0f8E\",\"mor\":110,\"hap\":109.99954315222098,\"ene\":109.99954315222098,\"int\":57,\"cha\":83,\"exp\":156.6369999998673,\"cre\":99,\"eff\":97,\"sal\":1245,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yD2XxKn\",\"mor\":110,\"hap\":109.99892494977186,\"ene\":109.99892494977186,\"int\":50,\"cha\":91,\"exp\":173.63699999978675,\"cre\":51,\"eff\":61,\"sal\":1047,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8fb7jcw\",\"mor\":110,\"hap\":109.99858256729665,\"ene\":109.99858256729665,\"int\":76,\"cha\":59,\"exp\":171.63699999979625,\"cre\":100,\"eff\":87,\"sal\":1248,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"j3E6fEH\",\"mor\":110,\"hap\":109.99888728287152,\"ene\":109.99888728287152,\"int\":50,\"cha\":70,\"exp\":159.6369999998531,\"cre\":75,\"eff\":52,\"sal\":987,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uAkanQt\",\"mor\":110,\"hap\":109.99764532125216,\"ene\":109.99764532125216,\"int\":71,\"cha\":98,\"exp\":148.63699999990519,\"cre\":67,\"eff\":83,\"sal\":1170,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rr0GuOT\",\"mor\":110,\"hap\":109.99786203492316,\"ene\":109.99786203492316,\"int\":83,\"cha\":56,\"exp\":161.6369999998436,\"cre\":50,\"eff\":75,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"QyDsYVp\",\"mor\":110,\"hap\":109.99911153025906,\"ene\":109.99911153025906,\"int\":96,\"cha\":65,\"exp\":145.6369999999194,\"cre\":59,\"eff\":75,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CPDgx3L\",\"mor\":110,\"hap\":109.99706569137749,\"ene\":109.99706569137749,\"int\":57,\"cha\":62,\"exp\":145.6369999999194,\"cre\":50,\"eff\":69,\"sal\":918,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"dMcUcUj\",\"mor\":110,\"hap\":109.99866128976029,\"ene\":109.99866128976029,\"int\":81,\"cha\":66,\"exp\":162.63699999983888,\"cre\":92,\"eff\":59,\"sal\":1149,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ccMwd9j\",\"mor\":110,\"hap\":109.99849432372756,\"ene\":109.99849432372756,\"int\":50,\"cha\":100,\"exp\":131.6369999999857,\"cre\":70,\"eff\":99,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"QgTnmsj\",\"mor\":110,\"hap\":109.99972082883536,\"ene\":109.99972082883536,\"int\":56,\"cha\":72,\"exp\":146.63699999991465,\"cre\":55,\"eff\":55,\"sal\":921,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DEkgsO0\",\"mor\":110,\"hap\":109.9973828841024,\"ene\":109.9973828841024,\"int\":75,\"cha\":92,\"exp\":137.63699999995728,\"cre\":100,\"eff\":51,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SxQtFDY\",\"mor\":110,\"hap\":109.99919103846827,\"ene\":109.99919103846827,\"int\":64,\"cha\":87,\"exp\":160.63699999984834,\"cre\":74,\"eff\":87,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gSpz0G1\",\"mor\":110,\"hap\":109.9983827775823,\"ene\":109.9983827775823,\"int\":93,\"cha\":55,\"exp\":157.63699999986255,\"cre\":85,\"eff\":58,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Lg4fwru\",\"mor\":110,\"hap\":109.99897580936063,\"ene\":109.99897580936063,\"int\":75,\"cha\":68,\"exp\":172.6369999997915,\"cre\":67,\"eff\":62,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SSlMWmD\",\"mor\":110,\"hap\":109.99919443748863,\"ene\":109.99919443748863,\"int\":51,\"cha\":51,\"exp\":131.6369999999857,\"cre\":53,\"eff\":58,\"sal\":801,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"o9zE2C3\",\"mor\":110,\"hap\":109.99955980460628,\"ene\":109.99955980460628,\"int\":95,\"cha\":51,\"exp\":127.63700000000294,\"cre\":66,\"eff\":96,\"sal\":1074,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AouXf4M\",\"mor\":110,\"hap\":109.99851224877963,\"ene\":109.99851224877963,\"int\":71,\"cha\":91,\"exp\":148.63699999990519,\"cre\":77,\"eff\":82,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hnRbpw9\",\"mor\":110,\"hap\":109.99959134715469,\"ene\":109.99959134715469,\"int\":100,\"cha\":60,\"exp\":169.6369999998057,\"cre\":97,\"eff\":97,\"sal\":1338,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xm7JJ5H\",\"mor\":110,\"hap\":109.99999630733525,\"ene\":109.99999630733525,\"int\":50,\"cha\":51,\"exp\":156.6369999998673,\"cre\":96,\"eff\":70,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"MUGT6wQ\",\"mor\":110,\"hap\":109.9973075601637,\"ene\":109.9973075601637,\"int\":59,\"cha\":97,\"exp\":173.63699999978675,\"cre\":61,\"eff\":76,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4DDPxkK\",\"mor\":110,\"hap\":109.9986345290817,\"ene\":109.9986345290817,\"int\":76,\"cha\":69,\"exp\":151.63699999989097,\"cre\":88,\"eff\":66,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"d3nStIZ\",\"mor\":110,\"hap\":109.99936313949944,\"ene\":109.99936313949944,\"int\":96,\"cha\":57,\"exp\":154.63699999987676,\"cre\":68,\"eff\":85,\"sal\":1149,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"7rg87fU\",\"mor\":110,\"hap\":109.99996580011008,\"ene\":109.99996580011008,\"int\":55,\"cha\":70,\"exp\":143.63699999992886,\"cre\":93,\"eff\":68,\"sal\":1056,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Qlwqb4o\",\"mor\":110,\"hap\":109.99939627729853,\"ene\":109.99939627729853,\"int\":71,\"cha\":90,\"exp\":140.63699999994307,\"cre\":87,\"eff\":65,\"sal\":1128,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BhxCim8\",\"mor\":110,\"hap\":109.99815629944435,\"ene\":109.99815629944435,\"int\":84,\"cha\":67,\"exp\":165.63699999982467,\"cre\":79,\"eff\":75,\"sal\":1179,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BVL4MLi\",\"mor\":110,\"hap\":109.99787393964311,\"ene\":109.99787393964311,\"int\":85,\"cha\":66,\"exp\":173.63699999978675,\"cre\":94,\"eff\":60,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IHbq6EK\",\"mor\":110,\"hap\":109.99916601510759,\"ene\":109.99916601510759,\"int\":71,\"cha\":96,\"exp\":129.6369999999952,\"cre\":61,\"eff\":95,\"sal\":1125,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4fugzIz\",\"mor\":110,\"hap\":109.9995225898314,\"ene\":109.9995225898314,\"int\":82,\"cha\":90,\"exp\":172.6369999997915,\"cre\":60,\"eff\":59,\"sal\":1158,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FiFY2Yh\",\"mor\":110,\"hap\":109.99937035744996,\"ene\":109.99937035744996,\"int\":79,\"cha\":51,\"exp\":139.63699999994782,\"cre\":64,\"eff\":56,\"sal\":936,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rMlemWp\",\"mor\":110,\"hap\":109.99980533955481,\"ene\":109.99980533955481,\"int\":66,\"cha\":99,\"exp\":148.63699999990519,\"cre\":66,\"eff\":66,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"U5Cm63B\",\"mor\":110,\"hap\":109.99824094465733,\"ene\":109.99824094465733,\"int\":93,\"cha\":51,\"exp\":145.6369999999194,\"cre\":70,\"eff\":74,\"sal\":1068,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"J417Uzz\",\"mor\":110,\"hap\":109.99992911977044,\"ene\":109.99992911977044,\"int\":98,\"cha\":50,\"exp\":154.63699999987676,\"cre\":50,\"eff\":56,\"sal\":993,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DcQP7ep\",\"mor\":110,\"hap\":109.99818605683919,\"ene\":109.99818605683919,\"int\":83,\"cha\":61,\"exp\":148.63699999990519,\"cre\":74,\"eff\":77,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"vjrdjBU\",\"mor\":110,\"hap\":109.99871178543214,\"ene\":109.99871178543214,\"int\":82,\"cha\":75,\"exp\":139.63699999994782,\"cre\":66,\"eff\":52,\"sal\":1011,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JzckcKI\",\"mor\":110,\"hap\":109.99988254660191,\"ene\":109.99988254660191,\"int\":71,\"cha\":89,\"exp\":134.6369999999715,\"cre\":89,\"eff\":100,\"sal\":1218,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nDBvWWr\",\"mor\":110,\"hap\":109.99949065720529,\"ene\":109.99949065720529,\"int\":57,\"cha\":98,\"exp\":138.63699999995256,\"cre\":81,\"eff\":56,\"sal\":1059,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2dt3FEe\",\"mor\":110,\"hap\":109.99944060415994,\"ene\":109.99944060415994,\"int\":51,\"cha\":84,\"exp\":160.63699999984834,\"cre\":63,\"eff\":62,\"sal\":1029,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"TIyLGnA\",\"mor\":110,\"hap\":109.99735286855658,\"ene\":109.99735286855658,\"int\":76,\"cha\":62,\"exp\":145.6369999999194,\"cre\":100,\"eff\":89,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"KulHwd3\",\"mor\":110,\"hap\":109.99751270291301,\"ene\":109.99751270291301,\"int\":61,\"cha\":73,\"exp\":135.63699999996678,\"cre\":89,\"eff\":89,\"sal\":1110,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FDwNGzr\",\"mor\":110,\"hap\":109.99907155513145,\"ene\":109.99907155513145,\"int\":96,\"cha\":62,\"exp\":177.63699999976782,\"cre\":95,\"eff\":80,\"sal\":1299,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"cZIbLpQ\",\"mor\":110,\"hap\":109.99767198509248,\"ene\":109.99767198509248,\"int\":56,\"cha\":79,\"exp\":168.63699999981046,\"cre\":63,\"eff\":50,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ri1cn47\",\"mor\":110,\"hap\":109.99865338344632,\"ene\":109.99865338344632,\"int\":62,\"cha\":56,\"exp\":173.63699999978675,\"cre\":62,\"eff\":62,\"sal\":1014,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rIVPv1j\",\"mor\":110,\"hap\":109.99811359524264,\"ene\":109.99811359524264,\"int\":64,\"cha\":57,\"exp\":160.63699999984834,\"cre\":95,\"eff\":87,\"sal\":1158,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LkGRHIn\",\"mor\":110,\"hap\":109.9985060954081,\"ene\":109.9985060954081,\"int\":83,\"cha\":51,\"exp\":167.63699999981517,\"cre\":88,\"eff\":89,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zIRAwss\",\"mor\":110,\"hap\":109.99940359086735,\"ene\":109.99940359086735,\"int\":88,\"cha\":78,\"exp\":157.63699999986255,\"cre\":56,\"eff\":63,\"sal\":1095,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"V0A8Upm\",\"mor\":110,\"hap\":109.99910085974317,\"ene\":109.99910085974317,\"int\":79,\"cha\":68,\"exp\":143.63699999992886,\"cre\":71,\"eff\":98,\"sal\":1146,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rAHqget\",\"mor\":110,\"hap\":109.99737320530537,\"ene\":109.99737320530537,\"int\":91,\"cha\":51,\"exp\":148.63699999990519,\"cre\":92,\"eff\":70,\"sal\":1125,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"TikNtfm\",\"mor\":110,\"hap\":109.99862162423065,\"ene\":109.99862162423065,\"int\":65,\"cha\":62,\"exp\":163.63699999983413,\"cre\":52,\"eff\":55,\"sal\":960,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YRpaTcx\",\"mor\":110,\"hap\":109.99853741261573,\"ene\":109.99853741261573,\"int\":97,\"cha\":68,\"exp\":176.63699999977254,\"cre\":75,\"eff\":56,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oOm009r\",\"mor\":110,\"hap\":109.9991710413032,\"ene\":109.9991710413032,\"int\":81,\"cha\":82,\"exp\":136.63699999996203,\"cre\":57,\"eff\":72,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DIRdf2G\",\"mor\":110,\"hap\":109.99817505114753,\"ene\":109.99817505114753,\"int\":60,\"cha\":80,\"exp\":147.63699999990993,\"cre\":77,\"eff\":82,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"c24i6dO\",\"mor\":110,\"hap\":109.99732563587882,\"ene\":109.99732563587882,\"int\":70,\"cha\":73,\"exp\":174.63699999978203,\"cre\":100,\"eff\":89,\"sal\":1287,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"So5WgdV\",\"mor\":110,\"hap\":109.99850227417146,\"ene\":109.99850227417146,\"int\":54,\"cha\":56,\"exp\":139.63699999994782,\"cre\":96,\"eff\":76,\"sal\":1032,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Bwu4Hhn\",\"mor\":110,\"hap\":109.99753135036399,\"ene\":109.99753135036399,\"int\":52,\"cha\":86,\"exp\":138.63699999995256,\"cre\":57,\"eff\":87,\"sal\":1029,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8rUwHlB\",\"mor\":110,\"hap\":109.9972911169299,\"ene\":109.9972911169299,\"int\":65,\"cha\":80,\"exp\":147.63699999990993,\"cre\":78,\"eff\":68,\"sal\":1083,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yuxpsr2\",\"mor\":110,\"hap\":109.9992155360694,\"ene\":109.9992155360694,\"int\":76,\"cha\":52,\"exp\":157.63699999986255,\"cre\":75,\"eff\":63,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DdRDkW4\",\"mor\":110,\"hap\":109.99754055197852,\"ene\":109.99754055197852,\"int\":79,\"cha\":77,\"exp\":147.63699999990993,\"cre\":70,\"eff\":83,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"jiTWWZy\",\"mor\":110,\"hap\":109.99785130730365,\"ene\":109.99785130730365,\"int\":85,\"cha\":77,\"exp\":130.63699999999045,\"cre\":85,\"eff\":87,\"sal\":1161,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Hw2QvH2\",\"mor\":110,\"hap\":109.99884981370987,\"ene\":109.99884981370987,\"int\":81,\"cha\":78,\"exp\":154.63699999987676,\"cre\":66,\"eff\":75,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2hF1GfC\",\"mor\":110,\"hap\":109.9971649693219,\"ene\":109.9971649693219,\"int\":81,\"cha\":97,\"exp\":140.63699999994307,\"cre\":54,\"eff\":73,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ifWuvgP\",\"mor\":110,\"hap\":109.9984928683792,\"ene\":109.9984928683792,\"int\":95,\"cha\":73,\"exp\":159.6369999998531,\"cre\":82,\"eff\":56,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"c0Wkwmk\",\"mor\":110,\"hap\":109.99958432931219,\"ene\":109.99958432931219,\"int\":90,\"cha\":53,\"exp\":165.63699999982467,\"cre\":61,\"eff\":62,\"sal\":1062,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"laS9vuw\",\"mor\":110,\"hap\":109.99902961130914,\"ene\":109.99902961130914,\"int\":67,\"cha\":57,\"exp\":158.6369999998578,\"cre\":52,\"eff\":53,\"sal\":930,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"W4evrSn\",\"mor\":110,\"hap\":109.99966330482405,\"ene\":109.99966330482405,\"int\":76,\"cha\":80,\"exp\":173.63699999978675,\"cre\":84,\"eff\":86,\"sal\":1266,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ogVu0LN\",\"mor\":110,\"hap\":109.99830497317814,\"ene\":109.99830497317814,\"int\":83,\"cha\":71,\"exp\":171.63699999979625,\"cre\":71,\"eff\":96,\"sal\":1245,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"D67fKXe\",\"mor\":110,\"hap\":109.99749138460803,\"ene\":109.99749138460803,\"int\":92,\"cha\":74,\"exp\":130.63699999999045,\"cre\":99,\"eff\":71,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"30ZXKmr\",\"mor\":110,\"hap\":109.99928502069062,\"ene\":109.99928502069062,\"int\":95,\"cha\":55,\"exp\":138.63699999995256,\"cre\":66,\"eff\":91,\"sal\":1104,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Wvhnhlz\",\"mor\":110,\"hap\":109.99991508478617,\"ene\":109.99991508478617,\"int\":65,\"cha\":78,\"exp\":174.63699999978203,\"cre\":82,\"eff\":87,\"sal\":1227,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8xYqxtP\",\"mor\":110,\"hap\":109.99877094054033,\"ene\":109.99877094054033,\"int\":64,\"cha\":54,\"exp\":133.63699999997624,\"cre\":87,\"eff\":79,\"sal\":1020,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Sp1zIdX\",\"mor\":110,\"hap\":109.9990119216376,\"ene\":109.9990119216376,\"int\":56,\"cha\":100,\"exp\":149.63699999990044,\"cre\":95,\"eff\":55,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RfTa5bO\",\"mor\":110,\"hap\":109.99890756168342,\"ene\":109.99890756168342,\"int\":88,\"cha\":59,\"exp\":131.6369999999857,\"cre\":81,\"eff\":59,\"sal\":1023,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ONNnWj6\",\"mor\":110,\"hap\":109.99851368828767,\"ene\":109.99851368828767,\"int\":50,\"cha\":50,\"exp\":144.63699999992414,\"cre\":71,\"eff\":55,\"sal\":879,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"EKDWt8n\",\"mor\":110,\"hap\":109.99995782574602,\"ene\":109.99995782574602,\"int\":77,\"cha\":95,\"exp\":139.63699999994782,\"cre\":85,\"eff\":70,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"iKqZYwm\",\"mor\":110,\"hap\":109.9995735764382,\"ene\":109.9995735764382,\"int\":90,\"cha\":87,\"exp\":130.63699999999045,\"cre\":95,\"eff\":83,\"sal\":1224,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oZj7nA5\",\"mor\":110,\"hap\":109.99871874759475,\"ene\":109.99871874759475,\"int\":51,\"cha\":84,\"exp\":143.63699999992886,\"cre\":64,\"eff\":90,\"sal\":1065,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"A6UsUBg\",\"mor\":110,\"hap\":109.9994219534287,\"ene\":109.9994219534287,\"int\":86,\"cha\":99,\"exp\":145.6369999999194,\"cre\":97,\"eff\":77,\"sal\":1281,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"t85nRes\",\"mor\":110,\"hap\":109.99758995783515,\"ene\":109.99758995783515,\"int\":95,\"cha\":87,\"exp\":130.63699999999045,\"cre\":62,\"eff\":79,\"sal\":1128,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"u9OYxud\",\"mor\":110,\"hap\":109.9977169354587,\"ene\":109.9977169354587,\"int\":59,\"cha\":88,\"exp\":155.63699999987202,\"cre\":83,\"eff\":59,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"c79rC9F\",\"mor\":110,\"hap\":109.9970187260914,\"ene\":109.9970187260914,\"int\":70,\"cha\":50,\"exp\":154.63699999987676,\"cre\":81,\"eff\":78,\"sal\":1068,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F2wkqji\",\"mor\":110,\"hap\":109.99834623738963,\"ene\":109.99834623738963,\"int\":65,\"cha\":93,\"exp\":149.63699999990044,\"cre\":70,\"eff\":59,\"sal\":1077,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Z9mkIFn\",\"mor\":110,\"hap\":109.99767098458656,\"ene\":109.99767098458656,\"int\":98,\"cha\":62,\"exp\":130.63699999999045,\"cre\":63,\"eff\":73,\"sal\":1047,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"5IKoi4c\",\"mor\":110,\"hap\":109.99731977895908,\"ene\":109.99731977895908,\"int\":87,\"cha\":80,\"exp\":170.63699999980096,\"cre\":82,\"eff\":61,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6wHlmKK\",\"mor\":110,\"hap\":109.99958561147966,\"ene\":109.99958561147966,\"int\":61,\"cha\":61,\"exp\":144.63699999992414,\"cre\":94,\"eff\":56,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6HgzIPW\",\"mor\":110,\"hap\":109.99935117519526,\"ene\":109.99935117519526,\"int\":82,\"cha\":63,\"exp\":164.63699999982938,\"cre\":69,\"eff\":50,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"987VM1z\",\"mor\":110,\"hap\":109.99805513896173,\"ene\":109.99805513896173,\"int\":79,\"cha\":73,\"exp\":164.63699999982938,\"cre\":75,\"eff\":63,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RWrDprM\",\"mor\":110,\"hap\":109.99864875155444,\"ene\":109.99864875155444,\"int\":89,\"cha\":72,\"exp\":168.63699999981046,\"cre\":52,\"eff\":88,\"sal\":1176,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WW2IOzQ\",\"mor\":110,\"hap\":109.99971790791864,\"ene\":109.99971790791864,\"int\":94,\"cha\":90,\"exp\":167.63699999981517,\"cre\":81,\"eff\":61,\"sal\":1248,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1iALzzh\",\"mor\":110,\"hap\":109.99922666443597,\"ene\":109.99922666443597,\"int\":61,\"cha\":77,\"exp\":142.6369999999336,\"cre\":69,\"eff\":99,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JbTpYw4\",\"mor\":110,\"hap\":109.9971799808852,\"ene\":109.9971799808852,\"int\":62,\"cha\":90,\"exp\":154.63699999987676,\"cre\":65,\"eff\":73,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Q0MchLi\",\"mor\":110,\"hap\":109.99961227182469,\"ene\":109.99961227182469,\"int\":94,\"cha\":66,\"exp\":152.63699999988623,\"cre\":86,\"eff\":90,\"sal\":1233,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"t6GZe3V\",\"mor\":110,\"hap\":109.9984506328995,\"ene\":109.9984506328995,\"int\":78,\"cha\":51,\"exp\":147.63699999990993,\"cre\":92,\"eff\":97,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0w2t0hB\",\"mor\":110,\"hap\":109.99880368902353,\"ene\":109.99880368902353,\"int\":53,\"cha\":90,\"exp\":164.63699999982938,\"cre\":74,\"eff\":67,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PEGGsvt\",\"mor\":110,\"hap\":109.99966706923352,\"ene\":109.99966706923352,\"int\":56,\"cha\":100,\"exp\":151.63699999989097,\"cre\":91,\"eff\":76,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Rs7brVS\",\"mor\":110,\"hap\":109.99783605952565,\"ene\":109.99783605952565,\"int\":84,\"cha\":94,\"exp\":142.6369999999336,\"cre\":89,\"eff\":78,\"sal\":1230,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sXxgb3l\",\"mor\":110,\"hap\":109.99794135112458,\"ene\":109.99794135112458,\"int\":54,\"cha\":67,\"exp\":160.63699999984834,\"cre\":71,\"eff\":92,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"a4bmHY1\",\"mor\":110,\"hap\":109.99928944753562,\"ene\":109.99928944753562,\"int\":85,\"cha\":86,\"exp\":162.63699999983888,\"cre\":77,\"eff\":54,\"sal\":1161,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uSWdXhp\",\"mor\":110,\"hap\":109.9975653625982,\"ene\":109.9975653625982,\"int\":70,\"cha\":65,\"exp\":164.63699999982938,\"cre\":79,\"eff\":66,\"sal\":1101,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"aZ5O6c8\",\"mor\":110,\"hap\":109.99937037158236,\"ene\":109.99937037158236,\"int\":88,\"cha\":96,\"exp\":141.63699999993835,\"cre\":78,\"eff\":62,\"sal\":1164,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2rlQYbj\",\"mor\":110,\"hap\":109.9975380576968,\"ene\":109.9975380576968,\"int\":75,\"cha\":70,\"exp\":137.63699999995728,\"cre\":58,\"eff\":83,\"sal\":1038,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"I60WTW3\",\"mor\":110,\"hap\":109.99812221327151,\"ene\":109.99812221327151,\"int\":81,\"cha\":81,\"exp\":127.63700000000294,\"cre\":53,\"eff\":74,\"sal\":1017,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"MzljUdS\",\"mor\":110,\"hap\":109.99778831108776,\"ene\":109.99778831108776,\"int\":59,\"cha\":66,\"exp\":160.63699999984834,\"cre\":58,\"eff\":86,\"sal\":1056,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zlONDpu\",\"mor\":110,\"hap\":109.99716132269272,\"ene\":109.99716132269272,\"int\":71,\"cha\":90,\"exp\":134.6369999999715,\"cre\":94,\"eff\":89,\"sal\":1203,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0ZLve3a\",\"mor\":110,\"hap\":109.99779212139453,\"ene\":109.99779212139453,\"int\":81,\"cha\":52,\"exp\":137.63699999995728,\"cre\":95,\"eff\":53,\"sal\":1023,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"uyVaX1d\",\"mor\":110,\"hap\":109.9995819517108,\"ene\":109.9995819517108,\"int\":76,\"cha\":52,\"exp\":151.63699999989097,\"cre\":50,\"eff\":92,\"sal\":1032,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xMd8RqN\",\"mor\":110,\"hap\":109.99926135956775,\"ene\":109.99926135956775,\"int\":55,\"cha\":77,\"exp\":138.63699999995256,\"cre\":75,\"eff\":60,\"sal\":984,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CIDKYqk\",\"mor\":110,\"hap\":109.99896434740006,\"ene\":109.99896434740006,\"int\":63,\"cha\":59,\"exp\":141.63699999993835,\"cre\":89,\"eff\":100,\"sal\":1125,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YlRrbks\",\"mor\":110,\"hap\":109.99739900498284,\"ene\":109.99739900498284,\"int\":59,\"cha\":81,\"exp\":177.63699999976782,\"cre\":84,\"eff\":80,\"sal\":1212,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gmTpjgM\",\"mor\":110,\"hap\":109.9976560912858,\"ene\":109.9976560912858,\"int\":86,\"cha\":58,\"exp\":163.63699999983413,\"cre\":65,\"eff\":97,\"sal\":1176,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XRlMY0w\",\"mor\":110,\"hap\":109.99962190701517,\"ene\":109.99962190701517,\"int\":69,\"cha\":91,\"exp\":143.63699999992886,\"cre\":57,\"eff\":69,\"sal\":1056,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PjCxPOC\",\"mor\":110,\"hap\":109.9995826955566,\"ene\":109.9995826955566,\"int\":57,\"cha\":81,\"exp\":130.63699999999045,\"cre\":98,\"eff\":62,\"sal\":1053,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F95BKHO\",\"mor\":110,\"hap\":109.99995421430252,\"ene\":109.99995421430252,\"int\":82,\"cha\":79,\"exp\":144.63699999992414,\"cre\":97,\"eff\":89,\"sal\":1242,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FsNEBJW\",\"mor\":110,\"hap\":109.99830851981017,\"ene\":109.99830851981017,\"int\":84,\"cha\":78,\"exp\":128.63699999999992,\"cre\":64,\"eff\":86,\"sal\":1089,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Kj67OI6\",\"mor\":110,\"hap\":109.99935388721649,\"ene\":109.99935388721649,\"int\":74,\"cha\":59,\"exp\":157.63699999986255,\"cre\":75,\"eff\":51,\"sal\":1017,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yzvpVps\",\"mor\":110,\"hap\":109.99997365279941,\"ene\":109.99997365279941,\"int\":92,\"cha\":62,\"exp\":147.63699999990993,\"cre\":67,\"eff\":97,\"sal\":1164,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Gjqjpcv\",\"mor\":110,\"hap\":109.99901164679981,\"ene\":109.99901164679981,\"int\":66,\"cha\":91,\"exp\":147.63699999990993,\"cre\":84,\"eff\":80,\"sal\":1173,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"D9NCRfL\",\"mor\":110,\"hap\":109.99769668380858,\"ene\":109.99769668380858,\"int\":87,\"cha\":52,\"exp\":147.63699999990993,\"cre\":82,\"eff\":57,\"sal\":1044,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GQWJZwV\",\"mor\":110,\"hap\":109.99871393707514,\"ene\":109.99871393707514,\"int\":88,\"cha\":60,\"exp\":148.63699999990519,\"cre\":68,\"eff\":54,\"sal\":1023,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oKymWYk\",\"mor\":110,\"hap\":109.99754649251243,\"ene\":109.99754649251243,\"int\":82,\"cha\":70,\"exp\":157.63699999986255,\"cre\":56,\"eff\":84,\"sal\":1116,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"g2h6VxV\",\"mor\":110,\"hap\":109.99794467689146,\"ene\":109.99794467689146,\"int\":93,\"cha\":72,\"exp\":136.63699999996203,\"cre\":100,\"eff\":53,\"sal\":1131,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"2A6Y4f9\",\"mor\":110,\"hap\":109.99853038814422,\"ene\":109.99853038814422,\"int\":84,\"cha\":61,\"exp\":129.6369999999952,\"cre\":93,\"eff\":84,\"sal\":1122,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YKKgFbN\",\"mor\":110,\"hap\":109.99811627921443,\"ene\":109.99811627921443,\"int\":62,\"cha\":76,\"exp\":166.63699999981992,\"cre\":81,\"eff\":50,\"sal\":1074,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F4emdS4\",\"mor\":110,\"hap\":109.9989474647559,\"ene\":109.9989474647559,\"int\":66,\"cha\":97,\"exp\":151.63699999989097,\"cre\":79,\"eff\":88,\"sal\":1212,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ST7Pr4l\",\"mor\":110,\"hap\":109.99980213825074,\"ene\":109.99980213825074,\"int\":87,\"cha\":55,\"exp\":131.6369999999857,\"cre\":73,\"eff\":63,\"sal\":996,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0pbne9x\",\"mor\":110,\"hap\":109.99747675539459,\"ene\":109.99747675539459,\"int\":65,\"cha\":68,\"exp\":153.6369999998815,\"cre\":87,\"eff\":70,\"sal\":1098,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"z7Q8J8t\",\"mor\":110,\"hap\":109.99940653754655,\"ene\":109.99940653754655,\"int\":52,\"cha\":74,\"exp\":141.63699999993835,\"cre\":99,\"eff\":82,\"sal\":1113,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6lfbP9q\",\"mor\":110,\"hap\":109.99913778510717,\"ene\":109.99913778510717,\"int\":51,\"cha\":62,\"exp\":144.63699999992414,\"cre\":93,\"eff\":62,\"sal\":1005,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IBpRkEn\",\"mor\":110,\"hap\":109.99856932008119,\"ene\":109.99856932008119,\"int\":51,\"cha\":59,\"exp\":148.63699999990519,\"cre\":58,\"eff\":100,\"sal\":1017,\"loc\":\"\",\"pos\":\"Management\"}}],\"employeeProd\":{\"Operations\":5106253.811227573,\"Engineer\":998147.5644071677,\"Business\":123614.64211101313,\"Management\":244089.37647694064,\"Research & Development\":0,\"total\":6472105.394222694,\"Training\":0,\"Unassigned\":0},\"employeeJobs\":{\"Operations\":120,\"Engineer\":23,\"Business\":5,\"Management\":5,\"Research & Development\":0,\"Training\":0,\"Unassigned\":0,\"total\":153},\"loc\":\"New Tokyo\",\"size\":153}},\"Ishima\":{\"ctor\":\"OfficeSpace\",\"data\":{\"minEne\":0,\"maxEne\":110,\"minHap\":0,\"maxHap\":110,\"maxMor\":110,\"employees\":[{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HpEmr6W\",\"mor\":110,\"hap\":109.99996387719449,\"ene\":109.99996387719449,\"int\":54,\"cha\":55.011568748073,\"exp\":138.6065687480257,\"cre\":86,\"eff\":71.011568748073,\"sal\":981,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"j9Cx12F\",\"mor\":110,\"hap\":109.99931742517336,\"ene\":109.99931742517336,\"int\":80,\"cha\":65.00911282942165,\"exp\":150.60111282931754,\"cre\":61,\"eff\":74.00911282942165,\"sal\":1059,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xSxAiw4\",\"mor\":110,\"hap\":109.99746885026957,\"ene\":109.99746885026957,\"int\":80,\"cha\":51.010986589562634,\"exp\":163.59998658939693,\"cre\":79,\"eff\":66.01098658956263,\"sal\":1086,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"81bEPb0\",\"mor\":110,\"hap\":109.99883877772088,\"ene\":109.99883877772088,\"int\":55,\"cha\":59,\"exp\":155.5739999998723,\"cre\":70,\"eff\":59,\"sal\":963,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nuFnjm9\",\"mor\":110,\"hap\":109.99707471597078,\"ene\":109.99707471597078,\"int\":66,\"cha\":80,\"exp\":171.57399999979654,\"cre\":68,\"eff\":71,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"3gtMyMX\",\"mor\":110,\"hap\":109.99946515935893,\"ene\":109.99946515935893,\"int\":89,\"cha\":71,\"exp\":176.57399999977284,\"cre\":70,\"eff\":56,\"sal\":1155,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"eRFx2TR\",\"mor\":110,\"hap\":109.99987649764098,\"ene\":109.99987649764098,\"int\":99,\"cha\":58.000462005008615,\"exp\":145.5744620049283,\"cre\":63,\"eff\":60.000462005008615,\"sal\":1044,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"OeEJaoC\",\"mor\":110,\"hap\":109.99955517969823,\"ene\":109.99955517969823,\"int\":61,\"cha\":75,\"exp\":129.5709999999955,\"cre\":90,\"eff\":74,\"sal\":1056,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Yj0EiNB\",\"mor\":110,\"hap\":109.99795126880021,\"ene\":109.99795126880021,\"int\":92,\"cha\":100,\"exp\":175.5709999997776,\"cre\":63,\"eff\":87,\"sal\":1320,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"I9WLSyb\",\"mor\":110,\"hap\":109.9980082605633,\"ene\":109.9980082605633,\"int\":92,\"cha\":87,\"exp\":166.57099999982023,\"cre\":64,\"eff\":70,\"sal\":1206,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mIP3R4K\",\"mor\":110,\"hap\":109.99945765414941,\"ene\":109.99945765414941,\"int\":65,\"cha\":57,\"exp\":128.57100000000023,\"cre\":87,\"eff\":91,\"sal\":1053,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AA0wGN2\",\"mor\":110,\"hap\":109.99987927563271,\"ene\":109.99987927563271,\"int\":75,\"cha\":71,\"exp\":174.57099999978234,\"cre\":79,\"eff\":57,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"joebk97\",\"mor\":110,\"hap\":109.9974271851428,\"ene\":109.9974271851428,\"int\":60,\"cha\":92,\"exp\":167.57099999981548,\"cre\":95,\"eff\":83,\"sal\":1260,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SCjgEHb\",\"mor\":110,\"hap\":109.99953690117785,\"ene\":109.99953690117785,\"int\":74,\"cha\":73,\"exp\":157.57099999986286,\"cre\":82,\"eff\":74,\"sal\":1149,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UYL0eGG\",\"mor\":110,\"hap\":109.99812131264251,\"ene\":109.99812131264251,\"int\":97,\"cha\":88,\"exp\":160.57099999984865,\"cre\":76,\"eff\":73,\"sal\":1251,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qIks6gA\",\"mor\":110,\"hap\":109.99951223004496,\"ene\":109.99951223004496,\"int\":74,\"cha\":84,\"exp\":153.57099999988182,\"cre\":58,\"eff\":57,\"sal\":1047,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IY8SSVf\",\"mor\":110,\"hap\":109.99953205589826,\"ene\":109.99953205589826,\"int\":87,\"cha\":80,\"exp\":132.5709999999813,\"cre\":80,\"eff\":68,\"sal\":1110,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"QaVL4d2\",\"mor\":110,\"hap\":109.99898098741645,\"ene\":109.99898098741645,\"int\":64,\"cha\":54,\"exp\":137.5709999999576,\"cre\":91,\"eff\":89,\"sal\":1074,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"6Tbki6H\",\"mor\":110,\"hap\":109.99989485897062,\"ene\":109.99989485897062,\"int\":84,\"cha\":54,\"exp\":130.57099999999076,\"cre\":52,\"eff\":92,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bV3y2He\",\"mor\":110,\"hap\":109.99771160208618,\"ene\":109.99771160208618,\"int\":69,\"cha\":71,\"exp\":133.57099999997655,\"cre\":56,\"eff\":81,\"sal\":999,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RXFk7qK\",\"mor\":110,\"hap\":109.99937650324742,\"ene\":109.99937650324742,\"int\":91,\"cha\":78,\"exp\":168.57099999981077,\"cre\":62,\"eff\":94,\"sal\":1248,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WRThcV1\",\"mor\":110,\"hap\":109.99718765843177,\"ene\":109.99718765843177,\"int\":53,\"cha\":77,\"exp\":172.5709999997918,\"cre\":65,\"eff\":84,\"sal\":1122,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"pU5LRFl\",\"mor\":110,\"hap\":109.99857027687032,\"ene\":109.99857027687032,\"int\":95,\"cha\":59,\"exp\":169.57099999980602,\"cre\":74,\"eff\":87,\"sal\":1221,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8BmneA5\",\"mor\":110,\"hap\":109.9988979728657,\"ene\":109.9988979728657,\"int\":91,\"cha\":99,\"exp\":168.57099999981077,\"cre\":55,\"eff\":66,\"sal\":1206,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xwUyjmt\",\"mor\":110,\"hap\":109.99931040373087,\"ene\":109.99931040373087,\"int\":85,\"cha\":95,\"exp\":132.5709999999813,\"cre\":92,\"eff\":69,\"sal\":1188,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RFU3Xx8\",\"mor\":110,\"hap\":109.99787628591017,\"ene\":109.99787628591017,\"int\":97,\"cha\":68,\"exp\":143.57099999992917,\"cre\":82,\"eff\":59,\"sal\":1116,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"9f0PGKs\",\"mor\":110,\"hap\":109.99721424188564,\"ene\":109.99721424188564,\"int\":84,\"cha\":99,\"exp\":143.57099999992917,\"cre\":64,\"eff\":75,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"593UgNl\",\"mor\":110,\"hap\":109.9994108577119,\"ene\":109.9994108577119,\"int\":96,\"cha\":97,\"exp\":171.57099999979656,\"cre\":72,\"eff\":91,\"sal\":1350,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DsXssXZ\",\"mor\":110,\"hap\":109.99918657801507,\"ene\":109.99918657801507,\"int\":76,\"cha\":77,\"exp\":141.57099999993866,\"cre\":66,\"eff\":67,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"D9AXFIE\",\"mor\":110,\"hap\":109.99996184859693,\"ene\":109.99996184859693,\"int\":72,\"cha\":72,\"exp\":169.57099999980602,\"cre\":94,\"eff\":88,\"sal\":1254,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"5GAHpuM\",\"mor\":110,\"hap\":109.99702497463636,\"ene\":109.99702497463636,\"int\":50,\"cha\":98,\"exp\":162.5709999998392,\"cre\":63,\"eff\":57,\"sal\":1059,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mHcB9T3\",\"mor\":110,\"hap\":109.99822624639914,\"ene\":109.99822624639914,\"int\":96,\"cha\":72,\"exp\":165.57099999982498,\"cre\":81,\"eff\":52,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"08CEP5l\",\"mor\":110,\"hap\":109.99732213691225,\"ene\":109.99732213691225,\"int\":75,\"cha\":78,\"exp\":177.57099999976813,\"cre\":73,\"eff\":84,\"sal\":1230,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0yoLsrg\",\"mor\":110,\"hap\":109.99868237410827,\"ene\":109.99868237410827,\"int\":90,\"cha\":79,\"exp\":164.5709999998297,\"cre\":78,\"eff\":57,\"sal\":1173,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"w6J4rnK\",\"mor\":110,\"hap\":109.99904428552796,\"ene\":109.99904428552796,\"int\":59,\"cha\":50,\"exp\":155.57099999987233,\"cre\":54,\"eff\":58,\"sal\":897,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wNMmhNk\",\"mor\":110,\"hap\":109.99812353569021,\"ene\":109.99812353569021,\"int\":66,\"cha\":65,\"exp\":161.5709999998439,\"cre\":66,\"eff\":82,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PW9lOG5\",\"mor\":110,\"hap\":109.99917021517196,\"ene\":109.99917021517196,\"int\":99,\"cha\":83,\"exp\":127.57100000000294,\"cre\":75,\"eff\":93,\"sal\":1200,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZNHhnNV\",\"mor\":110,\"hap\":109.99876696973075,\"ene\":109.99876696973075,\"int\":58,\"cha\":50,\"exp\":132.5709999999813,\"cre\":86,\"eff\":77,\"sal\":978,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"m5Hp4LB\",\"mor\":110,\"hap\":109.99844389260147,\"ene\":109.99844389260147,\"int\":68,\"cha\":98,\"exp\":152.57099999988654,\"cre\":51,\"eff\":89,\"sal\":1143,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4bAusSy\",\"mor\":110,\"hap\":109.99947259674448,\"ene\":109.99947259674448,\"int\":82,\"cha\":97,\"exp\":129.5709999999955,\"cre\":71,\"eff\":100,\"sal\":1206,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"TpY9chA\",\"mor\":110,\"hap\":109.99749105817897,\"ene\":109.99749105817897,\"int\":64,\"cha\":55,\"exp\":146.57099999991496,\"cre\":89,\"eff\":99,\"sal\":1128,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YI4DXMr\",\"mor\":110,\"hap\":109.9979135993934,\"ene\":109.9979135993934,\"int\":81,\"cha\":97,\"exp\":155.57099999987233,\"cre\":58,\"eff\":86,\"sal\":1200,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"J7rL2g6\",\"mor\":110,\"hap\":109.99757954561728,\"ene\":109.99757954561728,\"int\":98,\"cha\":83,\"exp\":175.5709999997776,\"cre\":69,\"eff\":61,\"sal\":1227,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JvrzeKY\",\"mor\":110,\"hap\":109.99942751312149,\"ene\":109.99942751312149,\"int\":69,\"cha\":87,\"exp\":129.5709999999955,\"cre\":75,\"eff\":61,\"sal\":1032,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LzUZmZs\",\"mor\":110,\"hap\":109.99815476484235,\"ene\":109.99815476484235,\"int\":83,\"cha\":54,\"exp\":127.57100000000294,\"cre\":68,\"eff\":68,\"sal\":969,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CmqbFqz\",\"mor\":110,\"hap\":109.99744263235408,\"ene\":109.99744263235408,\"int\":74,\"cha\":68,\"exp\":173.57099999978706,\"cre\":92,\"eff\":56,\"sal\":1158,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FTq8pvO\",\"mor\":110,\"hap\":109.99785677657614,\"ene\":109.99785677657614,\"int\":60,\"cha\":57,\"exp\":148.5709999999055,\"cre\":90,\"eff\":61,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bNMcneX\",\"mor\":110,\"hap\":109.9993904254319,\"ene\":109.9993904254319,\"int\":84,\"cha\":70,\"exp\":153.57099999988182,\"cre\":69,\"eff\":71,\"sal\":1110,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kWlswml\",\"mor\":110,\"hap\":109.99946223001051,\"ene\":109.99946223001051,\"int\":86,\"cha\":69,\"exp\":152.57099999988654,\"cre\":79,\"eff\":65,\"sal\":1122,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"wTuEag4\",\"mor\":110,\"hap\":109.99816781685632,\"ene\":109.99816781685632,\"int\":95,\"cha\":78,\"exp\":147.57099999991024,\"cre\":59,\"eff\":73,\"sal\":1125,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"8a0zrNd\",\"mor\":110,\"hap\":109.99909374731425,\"ene\":109.99909374731425,\"int\":55,\"cha\":96,\"exp\":176.57099999977285,\"cre\":76,\"eff\":63,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zzZ6vCz\",\"mor\":110,\"hap\":109.99873412189318,\"ene\":109.99873412189318,\"int\":87,\"cha\":64,\"exp\":135.57099999996709,\"cre\":87,\"eff\":99,\"sal\":1185,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yrmGryI\",\"mor\":110,\"hap\":109.99779951066103,\"ene\":109.99779951066103,\"int\":67,\"cha\":68,\"exp\":144.57099999992445,\"cre\":92,\"eff\":95,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"yAmouOU\",\"mor\":110,\"hap\":109.99892398919852,\"ene\":109.99892398919852,\"int\":51,\"cha\":91,\"exp\":163.57099999983444,\"cre\":59,\"eff\":95,\"sal\":1146,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FCID7sI\",\"mor\":110,\"hap\":109.99734407588846,\"ene\":109.99734407588846,\"int\":70,\"cha\":82,\"exp\":155.57099999987233,\"cre\":56,\"eff\":61,\"sal\":1041,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UdwTISc\",\"mor\":110,\"hap\":109.99872366932114,\"ene\":109.99872366932114,\"int\":68,\"cha\":85,\"exp\":143.57099999992917,\"cre\":88,\"eff\":85,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"lOCVF7r\",\"mor\":110,\"hap\":109.99730142388569,\"ene\":109.99730142388569,\"int\":67,\"cha\":85,\"exp\":164.5709999998297,\"cre\":96,\"eff\":65,\"sal\":1200,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DxmLZSc\",\"mor\":110,\"hap\":109.99949758505271,\"ene\":109.99949758505271,\"int\":89,\"cha\":73,\"exp\":142.57099999993392,\"cre\":72,\"eff\":60,\"sal\":1077,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"mnYCIUT\",\"mor\":110,\"hap\":109.99904916673113,\"ene\":109.99904916673113,\"int\":69,\"cha\":75,\"exp\":142.57099999993392,\"cre\":58,\"eff\":95,\"sal\":1086,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NQrNl5F\",\"mor\":110,\"hap\":109.99771174844507,\"ene\":109.99771174844507,\"int\":83,\"cha\":78,\"exp\":147.57099999991024,\"cre\":94,\"eff\":99,\"sal\":1272,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"u6knVys\",\"mor\":110,\"hap\":109.9989261632763,\"ene\":109.9989261632763,\"int\":86,\"cha\":76,\"exp\":168.57099999981077,\"cre\":77,\"eff\":73,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SI86IjZ\",\"mor\":110,\"hap\":109.99772658992886,\"ene\":109.99772658992886,\"int\":92,\"cha\":89,\"exp\":146.57099999991496,\"cre\":91,\"eff\":100,\"sal\":1323,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Ztwxj9W\",\"mor\":110,\"hap\":109.9981797329758,\"ene\":109.9981797329758,\"int\":50,\"cha\":73,\"exp\":133.57099999997655,\"cre\":91,\"eff\":65,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qT8ksEq\",\"mor\":110,\"hap\":109.9974578608304,\"ene\":109.9974578608304,\"int\":90,\"cha\":74,\"exp\":155.57099999987233,\"cre\":75,\"eff\":82,\"sal\":1197,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"5upy2rU\",\"mor\":110,\"hap\":109.99851532788597,\"ene\":109.99851532788597,\"int\":89,\"cha\":88,\"exp\":137.5709999999576,\"cre\":57,\"eff\":83,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ymuH6gh\",\"mor\":110,\"hap\":109.99839635675019,\"ene\":109.99839635675019,\"int\":97,\"cha\":80,\"exp\":152.57099999988654,\"cre\":65,\"eff\":75,\"sal\":1176,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xkvyv1b\",\"mor\":110,\"hap\":109.99887416830984,\"ene\":109.99887416830984,\"int\":83,\"cha\":52,\"exp\":165.57099999982498,\"cre\":82,\"eff\":58,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"VewVJw9\",\"mor\":110,\"hap\":109.99997640140549,\"ene\":109.99997640140549,\"int\":69,\"cha\":98,\"exp\":156.5709999998676,\"cre\":62,\"eff\":61,\"sal\":1107,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hivWVMd\",\"mor\":110,\"hap\":109.99962446169143,\"ene\":109.99962446169143,\"int\":69,\"cha\":60,\"exp\":177.57099999976813,\"cre\":80,\"eff\":71,\"sal\":1140,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"1Gxba6e\",\"mor\":110,\"hap\":109.99938309455996,\"ene\":109.99938309455996,\"int\":89,\"cha\":91,\"exp\":172.5709999997918,\"cre\":59,\"eff\":90,\"sal\":1272,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"N62S5Iy\",\"mor\":110,\"hap\":109.99956759849599,\"ene\":109.99956759849599,\"int\":71,\"cha\":55,\"exp\":177.57099999976813,\"cre\":99,\"eff\":78,\"sal\":1209,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kh7fwWR\",\"mor\":110,\"hap\":109.99721444668062,\"ene\":109.99721444668062,\"int\":85,\"cha\":53,\"exp\":170.57099999980127,\"cre\":51,\"eff\":89,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"sS9IVJ0\",\"mor\":110,\"hap\":109.99726505596178,\"ene\":109.99726505596178,\"int\":52,\"cha\":56,\"exp\":148.5709999999055,\"cre\":65,\"eff\":63,\"sal\":921,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"FJOzzro\",\"mor\":110,\"hap\":109.99802947237197,\"ene\":109.99802947237197,\"int\":58,\"cha\":77,\"exp\":130.57099999999076,\"cre\":71,\"eff\":59,\"sal\":954,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bOCYzaz\",\"mor\":110,\"hap\":109.99871417387808,\"ene\":109.99871417387808,\"int\":76,\"cha\":95,\"exp\":134.5709999999718,\"cre\":59,\"eff\":66,\"sal\":1059,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4B9bPTe\",\"mor\":110,\"hap\":109.99897653907465,\"ene\":109.99897653907465,\"int\":76,\"cha\":73,\"exp\":129.5709999999955,\"cre\":70,\"eff\":78,\"sal\":1047,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"UDKQtzT\",\"mor\":110,\"hap\":109.99799779535547,\"ene\":109.99799779535547,\"int\":93,\"cha\":100,\"exp\":145.5709999999197,\"cre\":55,\"eff\":51,\"sal\":1101,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bNYEFIf\",\"mor\":110,\"hap\":109.99901861109278,\"ene\":109.99901861109278,\"int\":57,\"cha\":93,\"exp\":155.57099999987233,\"cre\":87,\"eff\":86,\"sal\":1203,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"IZwYzqu\",\"mor\":110,\"hap\":109.99986448047298,\"ene\":109.99986448047298,\"int\":88,\"cha\":84,\"exp\":172.5709999997918,\"cre\":93,\"eff\":52,\"sal\":1236,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xXKxmug\",\"mor\":110,\"hap\":109.99798206792723,\"ene\":109.99798206792723,\"int\":56,\"cha\":60,\"exp\":137.5709999999576,\"cre\":89,\"eff\":87,\"sal\":1056,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"jCgcpkx\",\"mor\":110,\"hap\":109.99958314896524,\"ene\":109.99958314896524,\"int\":89,\"cha\":77,\"exp\":142.57099999993392,\"cre\":74,\"eff\":50,\"sal\":1065,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Yi2pBEC\",\"mor\":110,\"hap\":109.99888210356397,\"ene\":109.99888210356397,\"int\":84,\"cha\":82,\"exp\":129.5709999999955,\"cre\":73,\"eff\":98,\"sal\":1167,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Bvbijtv\",\"mor\":110,\"hap\":109.99777422112135,\"ene\":109.99777422112135,\"int\":58,\"cha\":75,\"exp\":137.5709999999576,\"cre\":100,\"eff\":53,\"sal\":1038,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"tnEe8xP\",\"mor\":110,\"hap\":109.99797614749701,\"ene\":109.99797614749701,\"int\":51,\"cha\":77,\"exp\":159.5709999998534,\"cre\":55,\"eff\":74,\"sal\":1017,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"0JVk9s8\",\"mor\":110,\"hap\":109.99941256733659,\"ene\":109.99941256733659,\"int\":75,\"cha\":76,\"exp\":145.5709999999197,\"cre\":88,\"eff\":64,\"sal\":1113,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hzCG0j4\",\"mor\":110,\"hap\":109.99818912910314,\"ene\":109.99818912910314,\"int\":78,\"cha\":59,\"exp\":135.57099999996709,\"cre\":61,\"eff\":53,\"sal\":927,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"OzZBBzZ\",\"mor\":110,\"hap\":109.99871023701736,\"ene\":109.99871023701736,\"int\":56,\"cha\":67,\"exp\":164.5709999998297,\"cre\":89,\"eff\":51,\"sal\":1050,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Uk57plD\",\"mor\":110,\"hap\":109.9992962781152,\"ene\":109.9992962781152,\"int\":83,\"cha\":63,\"exp\":130.57099999999076,\"cre\":94,\"eff\":86,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YmDvNeJ\",\"mor\":110,\"hap\":109.99980039631086,\"ene\":109.99980039631086,\"int\":50,\"cha\":85,\"exp\":148.5709999999055,\"cre\":100,\"eff\":60,\"sal\":1098,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"g6K3zLD\",\"mor\":110,\"hap\":109.99999122292273,\"ene\":109.99999122292273,\"int\":85,\"cha\":92,\"exp\":144.57099999992445,\"cre\":68,\"eff\":82,\"sal\":1182,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"qCtTPfT\",\"mor\":110,\"hap\":109.99917001570603,\"ene\":109.99917001570603,\"int\":60,\"cha\":68,\"exp\":158.57099999985812,\"cre\":83,\"eff\":51,\"sal\":1029,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"G5TWllo\",\"mor\":110,\"hap\":109.99994975508169,\"ene\":109.99994975508169,\"int\":87,\"cha\":97,\"exp\":142.57099999993392,\"cre\":94,\"eff\":56,\"sal\":1197,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"xTpP4s7\",\"mor\":110,\"hap\":109.99947374661865,\"ene\":109.99947374661865,\"int\":62,\"cha\":84,\"exp\":165.57099999982498,\"cre\":53,\"eff\":58,\"sal\":1035,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ggEKnu3\",\"mor\":110,\"hap\":109.99704223768438,\"ene\":109.99704223768438,\"int\":91,\"cha\":52,\"exp\":140.57099999994338,\"cre\":86,\"eff\":55,\"sal\":1041,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"23YE37E\",\"mor\":110,\"hap\":109.99978143744102,\"ene\":109.99978143744102,\"int\":50,\"cha\":72,\"exp\":174.57099999978234,\"cre\":98,\"eff\":80,\"sal\":1191,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SYvjLG0\",\"mor\":110,\"hap\":109.99941002170478,\"ene\":109.99941002170478,\"int\":86,\"cha\":79,\"exp\":174.57099999978234,\"cre\":77,\"eff\":75,\"sal\":1242,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"voyZ3iP\",\"mor\":110,\"hap\":109.99732540707237,\"ene\":109.99732540707237,\"int\":57,\"cha\":89,\"exp\":161.5709999998439,\"cre\":89,\"eff\":90,\"sal\":1227,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"OKlCW8o\",\"mor\":110,\"hap\":109.9980706273534,\"ene\":109.9980706273534,\"int\":64,\"cha\":87,\"exp\":132.5709999999813,\"cre\":57,\"eff\":56,\"sal\":957,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"BbtDClt\",\"mor\":110,\"hap\":109.99849240852222,\"ene\":109.99849240852222,\"int\":54,\"cha\":87,\"exp\":165.57099999982498,\"cre\":64,\"eff\":67,\"sal\":1080,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZBjOW4N\",\"mor\":110,\"hap\":109.99909835926343,\"ene\":109.99909835926343,\"int\":68,\"cha\":78,\"exp\":171.57099999979656,\"cre\":83,\"eff\":65,\"sal\":1164,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"nQvEmHQ\",\"mor\":110,\"hap\":109.99985935753782,\"ene\":109.99985935753782,\"int\":61,\"cha\":86,\"exp\":132.5709999999813,\"cre\":87,\"eff\":75,\"sal\":1092,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CVYsFZU\",\"mor\":110,\"hap\":109.9993490048919,\"ene\":109.9993490048919,\"int\":54,\"cha\":79,\"exp\":152.57099999988654,\"cre\":69,\"eff\":82,\"sal\":1077,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XDeZShz\",\"mor\":110,\"hap\":109.9990843164471,\"ene\":109.9990843164471,\"int\":86,\"cha\":62,\"exp\":140.57099999994338,\"cre\":59,\"eff\":67,\"sal\":1011,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"kMldjIV\",\"mor\":110,\"hap\":109.99744296122137,\"ene\":109.99744296122137,\"int\":67,\"cha\":91,\"exp\":135.57099999996709,\"cre\":70,\"eff\":93,\"sal\":1137,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"F700neD\",\"mor\":110,\"hap\":109.99749266198938,\"ene\":109.99749266198938,\"int\":94,\"cha\":53,\"exp\":165.57099999982498,\"cre\":50,\"eff\":55,\"sal\":1020,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"fyFWvMj\",\"mor\":110,\"hap\":109.99774704560787,\"ene\":109.99774704560787,\"int\":66,\"cha\":88,\"exp\":173.57099999978706,\"cre\":83,\"eff\":92,\"sal\":1275,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"zJBjvcG\",\"mor\":110,\"hap\":109.99971019819593,\"ene\":109.99971019819593,\"int\":95,\"cha\":53,\"exp\":128.57100000000023,\"cre\":74,\"eff\":50,\"sal\":969,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"gpmC3UN\",\"mor\":110,\"hap\":109.99743505753193,\"ene\":109.99743505753193,\"int\":90,\"cha\":95,\"exp\":131.57099999998601,\"cre\":79,\"eff\":82,\"sal\":1200,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"H2tmw4f\",\"mor\":110,\"hap\":109.99838749380238,\"ene\":109.99838749380238,\"int\":100,\"cha\":55,\"exp\":136.57099999996234,\"cre\":85,\"eff\":92,\"sal\":1173,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"JUeVZM0\",\"mor\":110,\"hap\":109.99979215072015,\"ene\":109.99979215072015,\"int\":77,\"cha\":90,\"exp\":127.57100000000294,\"cre\":70,\"eff\":76,\"sal\":1089,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"AQ6g3ob\",\"mor\":110,\"hap\":109.99971517285839,\"ene\":109.99971517285839,\"int\":74,\"cha\":89,\"exp\":158.57099999985812,\"cre\":81,\"eff\":99,\"sal\":1272,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Meap0XY\",\"mor\":110,\"hap\":109.9980202935936,\"ene\":109.9980202935936,\"int\":67,\"cha\":84,\"exp\":150.57099999989603,\"cre\":62,\"eff\":90,\"sal\":1128,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"c9vFGbj\",\"mor\":110,\"hap\":109.9972202855435,\"ene\":109.9972202855435,\"int\":59,\"cha\":60,\"exp\":133.57099999997655,\"cre\":99,\"eff\":66,\"sal\":1020,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Yc0RJNw\",\"mor\":110,\"hap\":109.99903317222777,\"ene\":109.99903317222777,\"int\":93,\"cha\":77,\"exp\":129.5709999999955,\"cre\":81,\"eff\":72,\"sal\":1125,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hNf0zKn\",\"mor\":110,\"hap\":109.99702854347764,\"ene\":109.99702854347764,\"int\":69,\"cha\":90,\"exp\":176.57099999977285,\"cre\":94,\"eff\":75,\"sal\":1281,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"NO7K0Rg\",\"mor\":110,\"hap\":109.99762427727329,\"ene\":109.99762427727329,\"int\":79,\"cha\":58,\"exp\":171.57099999979656,\"cre\":51,\"eff\":91,\"sal\":1119,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"C1f9KGw\",\"mor\":110,\"hap\":109.9980364095203,\"ene\":109.9980364095203,\"int\":71,\"cha\":54,\"exp\":170.57099999980127,\"cre\":54,\"eff\":83,\"sal\":1065,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"HATH3ng\",\"mor\":110,\"hap\":109.99900842585731,\"ene\":109.99900842585731,\"int\":63,\"cha\":51,\"exp\":169.57099999980602,\"cre\":50,\"eff\":52,\"sal\":924,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ctx1AKE\",\"mor\":110,\"hap\":109.99980390288648,\"ene\":109.99980390288648,\"int\":79,\"cha\":51,\"exp\":148.5709999999055,\"cre\":51,\"eff\":100,\"sal\":1056,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"bK7KC8A\",\"mor\":110,\"hap\":109.99771350587291,\"ene\":109.99771350587291,\"int\":59,\"cha\":84,\"exp\":140.57099999994338,\"cre\":99,\"eff\":58,\"sal\":1089,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"coMskib\",\"mor\":110,\"hap\":109.99915513383927,\"ene\":109.99915513383927,\"int\":89,\"cha\":58,\"exp\":145.5709999999197,\"cre\":63,\"eff\":63,\"sal\":1023,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"E1uP1SX\",\"mor\":110,\"hap\":109.99711994408467,\"ene\":109.99711994408467,\"int\":78,\"cha\":51,\"exp\":144.57099999992445,\"cre\":91,\"eff\":78,\"sal\":1095,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"P8b6j0A\",\"mor\":110,\"hap\":109.99796954526475,\"ene\":109.99796954526475,\"int\":80,\"cha\":58,\"exp\":151.57099999989128,\"cre\":80,\"eff\":88,\"sal\":1140,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ZfgHto6\",\"mor\":110,\"hap\":109.99756765335111,\"ene\":109.99756765335111,\"int\":55,\"cha\":61,\"exp\":167.57099999981548,\"cre\":55,\"eff\":84,\"sal\":1035,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GYBI8MJ\",\"mor\":110,\"hap\":109.99827891066612,\"ene\":109.99827891066612,\"int\":91,\"cha\":74,\"exp\":128.57100000000023,\"cre\":65,\"eff\":66,\"sal\":1041,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"vzwfOaH\",\"mor\":110,\"hap\":109.99844510859434,\"ene\":109.99844510859434,\"int\":99,\"cha\":82,\"exp\":147.57099999991024,\"cre\":72,\"eff\":62,\"sal\":1155,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Boppmzg\",\"mor\":110,\"hap\":109.9991059795961,\"ene\":109.9991059795961,\"int\":66,\"cha\":69,\"exp\":168.57099999981077,\"cre\":83,\"eff\":58,\"sal\":1101,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DSLCHIm\",\"mor\":110,\"hap\":109.99891410139446,\"ene\":109.99891410139446,\"int\":79,\"cha\":59,\"exp\":146.57099999991496,\"cre\":60,\"eff\":54,\"sal\":963,\"loc\":\"\",\"pos\":\"Engineer\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"DUDlRfA\",\"mor\":110,\"hap\":109.99745394963311,\"ene\":109.99745394963311,\"int\":69,\"cha\":90,\"exp\":161.5709999998439,\"cre\":74,\"eff\":78,\"sal\":1185,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"WKqsdjI\",\"mor\":110,\"hap\":109.99702531039188,\"ene\":109.99702531039188,\"int\":90,\"cha\":57,\"exp\":132.5709999999813,\"cre\":100,\"eff\":77,\"sal\":1137,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GhAHeRt\",\"mor\":110,\"hap\":109.99795632786316,\"ene\":109.99795632786316,\"int\":51,\"cha\":98,\"exp\":166.57099999982023,\"cre\":85,\"eff\":85,\"sal\":1224,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"cqJ5l8n\",\"mor\":110,\"hap\":109.99816106837147,\"ene\":109.99816106837147,\"int\":63,\"cha\":84,\"exp\":172.5709999997918,\"cre\":86,\"eff\":70,\"sal\":1194,\"loc\":\"\",\"pos\":\"Business\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"XycaRBD\",\"mor\":110,\"hap\":109.9975489879445,\"ene\":109.9975489879445,\"int\":60,\"cha\":74,\"exp\":169.57099999980602,\"cre\":74,\"eff\":53,\"sal\":1059,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"oxJ9vlu\",\"mor\":110,\"hap\":109.99729940633522,\"ene\":109.99729940633522,\"int\":86,\"cha\":53,\"exp\":168.57099999981077,\"cre\":87,\"eff\":62,\"sal\":1137,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"cGXsRNj\",\"mor\":110,\"hap\":109.99725769422858,\"ene\":109.99725769422858,\"int\":76,\"cha\":62,\"exp\":135.57099999996709,\"cre\":96,\"eff\":55,\"sal\":1041,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4NNIORn\",\"mor\":110,\"hap\":109.99877283217444,\"ene\":109.99877283217444,\"int\":66,\"cha\":85,\"exp\":127.57100000000294,\"cre\":91,\"eff\":95,\"sal\":1161,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"RSM758h\",\"mor\":110,\"hap\":109.99954619654918,\"ene\":109.99954619654918,\"int\":54,\"cha\":64,\"exp\":132.5709999999813,\"cre\":63,\"eff\":82,\"sal\":954,\"loc\":\"\",\"pos\":\"Management\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"hIaHOcj\",\"mor\":110,\"hap\":109.99995706243739,\"ene\":109.99995706243739,\"int\":52,\"cha\":52,\"exp\":136.57099999996234,\"cre\":62,\"eff\":97,\"sal\":966,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"37bzZn1\",\"mor\":110,\"hap\":109.9991864217296,\"ene\":109.9991864217296,\"int\":96,\"cha\":83,\"exp\":170.57099999980127,\"cre\":73,\"eff\":81,\"sal\":1278,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"ty7jnWg\",\"mor\":110,\"hap\":109.99761705094359,\"ene\":109.99761705094359,\"int\":83,\"cha\":52,\"exp\":165.57099999982498,\"cre\":100,\"eff\":55,\"sal\":1134,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"YtoZBIu\",\"mor\":110,\"hap\":109.99951523503013,\"ene\":109.99951523503013,\"int\":72,\"cha\":69,\"exp\":129.5709999999955,\"cre\":77,\"eff\":50,\"sal\":960,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"p9V8p4O\",\"mor\":110,\"hap\":109.99881191766352,\"ene\":109.99881191766352,\"int\":84,\"cha\":75,\"exp\":150.57099999989603,\"cre\":93,\"eff\":65,\"sal\":1170,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"I1y3piZ\",\"mor\":110,\"hap\":109.9988868989116,\"ene\":109.9988868989116,\"int\":95,\"cha\":77,\"exp\":137.5709999999576,\"cre\":64,\"eff\":67,\"sal\":1089,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"Qfbf1SN\",\"mor\":110,\"hap\":109.99815364839661,\"ene\":109.99815364839661,\"int\":87,\"cha\":89,\"exp\":127.57100000000294,\"cre\":63,\"eff\":51,\"sal\":1020,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4BZ0qDG\",\"mor\":110,\"hap\":109.99868307225479,\"ene\":109.99868307225479,\"int\":56,\"cha\":59,\"exp\":174.57099999978234,\"cre\":75,\"eff\":86,\"sal\":1119,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"PJqPzeE\",\"mor\":110,\"hap\":109.99722296404957,\"ene\":109.99722296404957,\"int\":71,\"cha\":68,\"exp\":176.57099999977285,\"cre\":88,\"eff\":65,\"sal\":1173,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"rMGminr\",\"mor\":110,\"hap\":109.99843808268704,\"ene\":109.99843808268704,\"int\":85,\"cha\":75,\"exp\":149.57099999990075,\"cre\":98,\"eff\":68,\"sal\":1194,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"LKUx78Y\",\"mor\":110,\"hap\":109.9976146410864,\"ene\":109.9976146410864,\"int\":77,\"cha\":87,\"exp\":152.57099999988654,\"cre\":70,\"eff\":96,\"sal\":1215,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"v1v8M1K\",\"mor\":110,\"hap\":109.99773333930065,\"ene\":109.99773333930065,\"int\":66,\"cha\":68,\"exp\":165.57099999982498,\"cre\":63,\"eff\":92,\"sal\":1131,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"SHVcF6W\",\"mor\":110,\"hap\":109.9985897986596,\"ene\":109.9985897986596,\"int\":54,\"cha\":53,\"exp\":163.57099999983444,\"cre\":57,\"eff\":85,\"sal\":1005,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"GK6T8Kz\",\"mor\":110,\"hap\":109.99727661548499,\"ene\":109.99727661548499,\"int\":83,\"cha\":75,\"exp\":169.57099999980602,\"cre\":63,\"eff\":67,\"sal\":1140,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"4yYzVWB\",\"mor\":110,\"hap\":109.99721096177012,\"ene\":109.99721096177012,\"int\":73,\"cha\":68,\"exp\":130.57099999999076,\"cre\":53,\"eff\":70,\"sal\":951,\"loc\":\"\",\"pos\":\"Operations\"}},{\"ctor\":\"Employee\",\"data\":{\"cyclesUntilRaise\":400,\"name\":\"CVx6oqM\",\"mor\":110,\"hap\":109.9997683821735,\"ene\":109.9997683821735,\"int\":55,\"cha\":73,\"exp\":164.5709999998297,\"cre\":78,\"eff\":62,\"sal\":1065,\"loc\":\"\",\"pos\":\"Operations\"}}],\"employeeProd\":{\"Operations\":5128007.778640486,\"Engineer\":1004621.7766711965,\"Business\":125546.47646764753,\"Management\":235716.21714228333,\"Research & Development\":0,\"total\":6493892.248921611,\"Training\":0,\"Unassigned\":0},\"employeeJobs\":{\"Operations\":120,\"Engineer\":23,\"Business\":5,\"Management\":5,\"Research & Development\":0,\"Training\":0,\"Unassigned\":0,\"total\":153},\"loc\":\"Ishima\",\"size\":153}},\"Volhaven\":0},\"lastCycleRevenue\":554497022255993860,\"lastCycleExpenses\":99190998466.30136,\"thisCycleRevenue\":0,\"thisCycleExpenses\":991916055601.125,\"warehouses\":{\"Aevum\":{\"ctor\":\"Warehouse\",\"data\":{\"level\":901,\"sizeUsed\":15855603.789988488,\"smartSupplyEnabled\":true,\"smartSupplyUseLeftovers\":{\"Water\":true,\"Energy\":true,\"Food\":true,\"Plants\":true,\"Metal\":true,\"Hardware\":true,\"Chemicals\":true,\"Drugs\":true,\"Robots\":true,\"AICores\":true,\"RealEstate\":true},\"smartSupplyStore\":9104092.3,\"loc\":\"Aevum\",\"size\":20407650,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":45520461.5,\"qlt\":0,\"dmd\":68.69118009064417,\"dmdR\":[65,85],\"cmp\":59.60007471684701,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":4552046.15,\"sll\":0,\"prd\":-4552046.15,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1297.4417188547447,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":45520461.5,\"qlt\":0,\"dmd\":88.72263218027867,\"dmdR\":[80,99],\"cmp\":72.0628834374683,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":4552046.15,\"sll\":0,\"prd\":-4552046.15,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2006.3296326330176,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":0,\"qlt\":10646.623662871983,\"dmd\":70.20273588056587,\"dmdR\":[70,90],\"cmp\":43.40697661073879,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":9104092.3,\"prd\":9104092.3,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":4424.408102235521,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":4261308002.8981886,\"maxsll\":9104092.3}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":62487521.99976975,\"qlt\":10646.623662871983,\"dmd\":22.182853943667173,\"dmdR\":[20,90],\"cmp\":41.111074452543065,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":9104092.3,\"prd\":9104092.3,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2108.1509898797876,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":1963910505.0644636,\"maxsll\":9104092.3}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":86.72934509831389,\"dmdR\":[80,90],\"cmp\":75.50054917579847,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":10797.82178636311,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":97.80879657089523,\"dmdR\":[80,99],\"cmp\":84.72043801489468,\"cmpR\":[80,99],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":88043.63547757549,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":95.5427694688772,\"dmdR\":[80,99],\"cmp\":80.54131454332848,\"cmpR\":[80,99],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7939.653014609642,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":2000000000,\"qlt\":0,\"dmd\":94.44681151820653,\"dmdR\":[5,99],\"cmp\":28.18429901250675,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":63862.05264227387,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}}}}},\"Chongqing\":{\"ctor\":\"Warehouse\",\"data\":{\"level\":894,\"sizeUsed\":13843412.470000006,\"smartSupplyEnabled\":true,\"smartSupplyUseLeftovers\":{\"Water\":true,\"Energy\":true,\"Food\":true,\"Plants\":true,\"Metal\":true,\"Hardware\":true,\"Chemicals\":true,\"Drugs\":true,\"Robots\":true,\"AICores\":true,\"RealEstate\":true},\"smartSupplyStore\":12811374.9,\"loc\":\"Chongqing\",\"size\":20249100,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":64056874.5,\"qlt\":0,\"dmd\":76.31641132470207,\"dmdR\":[65,85],\"cmp\":53.04587566266408,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":6405687.45,\"sll\":0,\"prd\":-6405687.45,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1449.3649837242388,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":64056874.5,\"qlt\":0,\"dmd\":95.66756604927801,\"dmdR\":[80,99],\"cmp\":84.67072820964366,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":6405687.45,\"sll\":0,\"prd\":-6405687.45,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2012.3556030811403,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":1.4901161193847656e-8,\"qlt\":15464.317572880605,\"dmd\":80.49046988755339,\"dmdR\":[70,90],\"cmp\":44.92739316784872,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":12811374.9,\"prd\":12811374.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5922.120121651186,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":8273904924.632358,\"maxsll\":12811374.9}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":1.341104507446289e-7,\"qlt\":15464.317572880605,\"dmd\":40.944654798603885,\"dmdR\":[20,90],\"cmp\":34.87839931036062,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":12811374.9,\"prd\":12811374.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2647.955335615636,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":5156454996.295722,\"maxsll\":12811374.9}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":84.45179102601904,\"dmdR\":[80,90],\"cmp\":91.78292266983242,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":6786.735151347511,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":83.14163333929775,\"dmdR\":[80,99],\"cmp\":81.0864744366002,\"cmpR\":[80,99],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":77751.98020552372,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":90.81952311199758,\"dmdR\":[80,99],\"cmp\":95.45673318144478,\"cmpR\":[80,99],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":11216.65566960653,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":2000000000,\"qlt\":0,\"dmd\":19.204551566395644,\"dmdR\":[5,99],\"cmp\":25.442785840558464,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":115013.44781693525,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}}}}},\"Sector-12\":{\"ctor\":\"Warehouse\",\"data\":{\"level\":891,\"sizeUsed\":13817931.220000003,\"smartSupplyEnabled\":true,\"smartSupplyUseLeftovers\":{\"Water\":true,\"Energy\":true,\"Food\":true,\"Plants\":true,\"Metal\":true,\"Hardware\":true,\"Chemicals\":true,\"Drugs\":true,\"Robots\":true,\"AICores\":true,\"RealEstate\":true},\"smartSupplyStore\":12726437.4,\"loc\":\"Sector-12\",\"size\":20181150,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":63632187,\"qlt\":0,\"dmd\":81.11317708518025,\"dmdR\":[65,85],\"cmp\":54.78652075174011,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":6363218.7,\"sll\":0,\"prd\":-6363218.7,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1693.3524692351689,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":63632187,\"qlt\":0,\"dmd\":85.08821338747708,\"dmdR\":[80,99],\"cmp\":94.64478497671477,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":6363218.7,\"sll\":0,\"prd\":-6363218.7,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1467.8231663478798,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":4.470348358154297e-8,\"qlt\":10459.984211850851,\"dmd\":87.26503418407803,\"dmdR\":[70,90],\"cmp\":57.717859182007565,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":12726437.4,\"prd\":12726437.4,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1680.03654200368,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":3451598086.471356,\"maxsll\":12726437.4}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":10459.984211850851,\"dmd\":22.125183685043144,\"dmdR\":[20,90],\"cmp\":37.40787978701996,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":12726437.4,\"prd\":12726437.4,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3268.604089045674,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":1684860486.909727,\"maxsll\":12726437.400000002}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":86.7995479936186,\"dmdR\":[80,90],\"cmp\":78.04334645557826,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":6710.736049396261,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":92.26429248587586,\"dmdR\":[80,99],\"cmp\":88.36043842109518,\"cmpR\":[80,99],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":54829.66618800074,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":96.92306651168086,\"dmdR\":[80,99],\"cmp\":85.23974597359062,\"cmpR\":[80,99],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5871.882048089295,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":2000000000,\"qlt\":0,\"dmd\":7.892604477952292,\"dmdR\":[5,99],\"cmp\":37.831511492132265,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":44271.53417617236,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}}}}},\"New Tokyo\":{\"ctor\":\"Warehouse\",\"data\":{\"level\":884,\"sizeUsed\":13758475.000000006,\"smartSupplyEnabled\":true,\"smartSupplyUseLeftovers\":{\"Water\":true,\"Energy\":true,\"Food\":true,\"Plants\":true,\"Metal\":true,\"Hardware\":true,\"Chemicals\":true,\"Drugs\":true,\"Robots\":true,\"AICores\":true,\"RealEstate\":true},\"smartSupplyStore\":12528250,\"loc\":\"New Tokyo\",\"size\":20022600,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":62641250,\"qlt\":0,\"dmd\":72.21667529709866,\"dmdR\":[65,85],\"cmp\":40,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":6264125,\"sll\":0,\"prd\":-6264124.95,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1430.590021849728,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":62641250,\"qlt\":0,\"dmd\":90.26330945301841,\"dmdR\":[80,99],\"cmp\":65.08557324579897,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":6264125,\"sll\":0,\"prd\":-6264124.95,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1952.5239915190953,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":1.341104507446289e-7,\"qlt\":14564.427251475488,\"dmd\":74.38211832679659,\"dmdR\":[70,90],\"cmp\":69.00129064932432,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":12528249.9,\"prd\":12528249.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2969.349665049337,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":4465145189.03056,\"maxsll\":12528249.9}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":1.4901161193847656e-8,\"qlt\":14564.427251475488,\"dmd\":59.69055443582506,\"dmdR\":[20,90],\"cmp\":31.853077627171682,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":12528249.9,\"prd\":12528249.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":4193.230063450012,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":4782665151.941864,\"maxsll\":12528249.9}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":89.18776480774302,\"dmdR\":[80,90],\"cmp\":86.51010138905245,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":7833.732029860368,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":90.4164469349998,\"dmdR\":[80,99],\"cmp\":84.43057710516644,\"cmpR\":[80,99],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":75158.42132308157,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":80.46011215960783,\"dmdR\":[80,99],\"cmp\":93.65098641321211,\"cmpR\":[80,99],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":8041.6141192786345,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":2000000000,\"qlt\":0,\"dmd\":6.229464816893699,\"dmdR\":[5,99],\"cmp\":70.49565727638368,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":55094.002875822254,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}}}}},\"Ishima\":{\"ctor\":\"Warehouse\",\"data\":{\"level\":884,\"sizeUsed\":13758475.000000002,\"smartSupplyEnabled\":true,\"smartSupplyUseLeftovers\":{\"Water\":true,\"Energy\":true,\"Food\":true,\"Plants\":true,\"Metal\":true,\"Hardware\":true,\"Chemicals\":true,\"Drugs\":true,\"Robots\":true,\"AICores\":true,\"RealEstate\":true},\"smartSupplyStore\":12528250,\"loc\":\"Ishima\",\"size\":20022600,\"materials\":{\"Water\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Water\",\"qty\":62641250,\"qlt\":0,\"dmd\":73.92281926510196,\"dmdR\":[65,85],\"cmp\":53.68782164761397,\"cmpR\":[40,60],\"mv\":0.2,\"mku\":6,\"buy\":6264125,\"sll\":0,\"prd\":-6264124.95,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1411.777181641072,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Energy\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Energy\",\"qty\":62641250,\"qlt\":0,\"dmd\":89.3767360586008,\"dmdR\":[80,99],\"cmp\":84.09670252550612,\"cmpR\":[65,95],\"mv\":0.2,\"mku\":6,\"buy\":6264125,\"sll\":0,\"prd\":-6264124.95,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":1887.9258344704292,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Food\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Food\",\"qty\":5.960464477539063e-8,\"qlt\":14636.415648549526,\"dmd\":85.29000439278146,\"dmdR\":[70,90],\"cmp\":37.441661321990765,\"cmpR\":[35,85],\"mv\":1,\"mku\":3,\"buy\":0,\"sll\":12528249.899999997,\"prd\":12528249.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":4852.730987216419,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":6895619044.278659,\"maxsll\":12528249.899999997}},\"Plants\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Plants\",\"qty\":0,\"qlt\":14636.415648549526,\"dmd\":54.973067296726356,\"dmdR\":[20,90],\"cmp\":31.93220856203139,\"cmpR\":[30,70],\"mv\":0.6,\"mku\":3.75,\"buy\":0,\"sll\":12528249.9,\"prd\":12528249.9,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":3936.3488679657285,\"sCost\":\"MP\",\"prdman\":[false,0],\"sllman\":[true,\"MAX\"],\"marketTa1\":false,\"marketTa2\":true,\"marketTa2Price\":4640947201.223454,\"maxsll\":12528249.900000002}},\"Metal\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Metal\",\"qty\":0,\"qlt\":0,\"dmd\":80,\"dmdR\":[75,85],\"cmp\":70,\"cmpR\":[60,80],\"mv\":1,\"mku\":6,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":2650,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Hardware\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Hardware\",\"qty\":0,\"qlt\":0,\"dmd\":87.28641401073573,\"dmdR\":[80,90],\"cmp\":94.83987447013499,\"cmpR\":[65,95],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":5987.100088360804,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Chemicals\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Chemicals\",\"qty\":0,\"qlt\":0,\"dmd\":55,\"dmdR\":[40,70],\"cmp\":60,\"cmpR\":[40,80],\"mv\":1.2,\"mku\":2,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":9000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Drugs\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Drugs\",\"qty\":0,\"qlt\":0,\"dmd\":60,\"dmdR\":[45,75],\"cmp\":70,\"cmpR\":[40,99],\"mv\":1.6,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":40000,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"Robots\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Robots\",\"qty\":0,\"qlt\":0,\"dmd\":93.68219243920687,\"dmdR\":[80,99],\"cmp\":90.87973552832007,\"cmpR\":[80,99],\"mv\":0.5,\"mku\":1,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":65474.30317364196,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"AICores\":{\"ctor\":\"Material\",\"data\":{\"name\":\"AI Cores\",\"qty\":0,\"qlt\":0,\"dmd\":90.52149791927043,\"dmdR\":[80,99],\"cmp\":82.72058230512523,\"cmpR\":[80,99],\"mv\":0.8,\"mku\":0.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":24107.02356519033,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}},\"RealEstate\":{\"ctor\":\"Material\",\"data\":{\"name\":\"Real Estate\",\"qty\":2000000000,\"qlt\":0,\"dmd\":9.000702333121136,\"dmdR\":[5,99],\"cmp\":58.778140608731555,\"cmpR\":[25,75],\"mv\":1.5,\"mku\":1.5,\"buy\":0,\"sll\":0,\"prd\":0,\"imp\":0,\"exp\":[],\"totalExp\":0,\"bCost\":66360.25682965927,\"sCost\":0,\"prdman\":[false,0],\"sllman\":[false,0],\"marketTa1\":false,\"marketTa2\":false,\"marketTa2Price\":0,\"maxsll\":0}}}}},\"Volhaven\":0}}}],\"funds\":1e+300,\"revenue\":554497022255993860,\"expenses\":99190998466.30136,\"fundingRound\":0,\"public\":true,\"totalShares\":1200000000,\"numShares\":1122000000,\"shareSalesUntilPriceUpdate\":1000000,\"shareSaleCooldown\":0,\"issueNewSharesCooldown\":0,\"dividendPercentage\":99,\"dividendTaxPercentage\":35,\"issuedShares\":0,\"sharePrice\":7.199221491794899e+221,\"storedCycles\":9,\"avgProfit\":554496923064995400,\"state\":{\"ctor\":\"CorporationState\",\"data\":{\"state\":2}},\"unlockUpgrades\":[1,1,1,1,1,1,1,1,1],\"upgrades\":[1500,1500,1500,514,1500,1500,1500,1500,1500,1500],\"upgradeMultipliers\":[46,151,2.5,3.57,151,151,151,151,16,76]}},\"bladeburner\":{\"ctor\":\"Bladeburner\",\"data\":{\"numHosp\":0,\"moneyLost\":0,\"rank\":51449188018.0216,\"maxRank\":51449188018.0216,\"skillPoints\":25856,\"totalSkillPoints\":17149729339,\"teamSize\":0,\"sleeveSize\":0,\"teamLost\":0,\"hpLost\":0,\"storedCycles\":3,\"randomEventCounter\":485,\"actionTimeToComplete\":0,\"actionTimeCurrent\":0,\"actionTimeOverflow\":30459,\"action\":{\"ctor\":\"ActionIdentifier\",\"data\":{\"name\":\"\",\"type\":1}},\"cities\":{\"Aevum\":{\"ctor\":\"City\",\"data\":{\"name\":\"Aevum\",\"pop\":14124056126,\"popEst\":1743235959.967783,\"comms\":57,\"chaos\":34.645617765412396}},\"Chongqing\":{\"ctor\":\"City\",\"data\":{\"name\":\"Chongqing\",\"pop\":30982324749,\"popEst\":1585580419.4928288,\"comms\":47,\"chaos\":200.7358874363394}},\"Sector-12\":{\"ctor\":\"City\",\"data\":{\"name\":\"Sector-12\",\"pop\":10859548160,\"popEst\":2355342375,\"comms\":5,\"chaos\":0}},\"New Tokyo\":{\"ctor\":\"City\",\"data\":{\"name\":\"New Tokyo\",\"pop\":17863223635,\"popEst\":682896993.2927843,\"comms\":37,\"chaos\":2969.407270930385}},\"Ishima\":{\"ctor\":\"City\",\"data\":{\"name\":\"Ishima\",\"pop\":14164044328,\"popEst\":1213903833.821415,\"comms\":106,\"chaos\":36.864954273047054}},\"Volhaven\":{\"ctor\":\"City\",\"data\":{\"name\":\"Volhaven\",\"pop\":15052256545,\"popEst\":1564623355.5887809,\"comms\":128,\"chaos\":209.5911482480645}}},\"city\":\"Sector-12\",\"skills\":{\"Cyber's Edge\":25417,\"Hyperdrive\":30500,\"Cloak\":69318,\"Short-Circuit\":36310,\"Digital Observer\":36310,\"Tracer\":36310,\"Reaper\":36310,\"Evasive System\":36309,\"Hands of Midas\":30500,\"Blade's Intuition\":36309,\"Overclock\":90,\"Datamancer\":76248},\"skillMultipliers\":{\"successChanceAll\":1090.27,\"successChanceStealth\":3813.49,\"successChanceKill\":1998.05,\"successChanceContract\":1453.4,\"successChanceOperation\":1453.4,\"successChanceEstimate\":3813.4,\"actionTime\":0.09999999999999998,\"effHack\":1,\"effStr\":727.2,\"effDef\":727.2,\"effDex\":1056883.392,\"effAgi\":1056883.392,\"effCha\":1,\"effInt\":1,\"stamina\":509.34,\"money\":3051,\"expGain\":3051},\"staminaBonus\":0,\"maxStamina\":5412711753999789,\"stamina\":5412711753999789,\"contracts\":{\"Tracking\":{\"ctor\":\"Contract\",\"data\":{\"name\":\"Tracking\",\"level\":135,\"maxLevel\":135,\"autoLevel\":true,\"baseDifficulty\":122.25081421275509,\"difficultyFac\":1.02,\"rewardFac\":1.041,\"successes\":9356,\"failures\":0,\"rankGain\":0.3,\"rankLoss\":0,\"hpLoss\":0.5,\"hpLost\":0,\"isStealth\":true,\"isKill\":false,\"count\":4436.915557444469,\"weights\":{\"hack\":0,\"str\":0.05,\"def\":0.05,\"dex\":0.35,\"agi\":0.35,\"cha\":0.1,\"int\":0.05},\"decays\":{\"hack\":0,\"str\":0.91,\"def\":0.91,\"dex\":0.91,\"agi\":0.91,\"cha\":0.9,\"int\":1},\"teamCount\":0}},\"Bounty Hunter\":{\"ctor\":\"Contract\",\"data\":{\"name\":\"Bounty Hunter\",\"level\":134,\"maxLevel\":134,\"autoLevel\":true,\"baseDifficulty\":245.58061223840858,\"difficultyFac\":1.04,\"rewardFac\":1.085,\"successes\":9291,\"failures\":0,\"rankGain\":0.9,\"rankLoss\":0,\"hpLoss\":1,\"hpLost\":0,\"isStealth\":false,\"isKill\":true,\"count\":4440.289724111476,\"weights\":{\"hack\":0,\"str\":0.15,\"def\":0.15,\"dex\":0.25,\"agi\":0.25,\"cha\":0.1,\"int\":0.1},\"decays\":{\"hack\":0,\"str\":0.91,\"def\":0.91,\"dex\":0.91,\"agi\":0.91,\"cha\":0.8,\"int\":0.9},\"teamCount\":0}},\"Retirement\":{\"ctor\":\"Contract\",\"data\":{\"name\":\"Retirement\",\"level\":135,\"maxLevel\":135,\"autoLevel\":true,\"baseDifficulty\":184.61982050171443,\"difficultyFac\":1.03,\"rewardFac\":1.065,\"successes\":9338,\"failures\":0,\"rankGain\":0.6,\"rankLoss\":0,\"hpLoss\":1,\"hpLost\":0,\"isStealth\":false,\"isKill\":true,\"count\":4437.448682444892,\"weights\":{\"hack\":0,\"str\":0.2,\"def\":0.2,\"dex\":0.2,\"agi\":0.2,\"cha\":0.1,\"int\":0.1},\"decays\":{\"hack\":0,\"str\":0.91,\"def\":0.91,\"dex\":0.91,\"agi\":0.91,\"cha\":0.8,\"int\":0.9},\"teamCount\":0}}},\"operations\":{\"Investigation\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Investigation\",\"level\":126,\"maxLevel\":126,\"autoLevel\":true,\"baseDifficulty\":392.5450479254956,\"difficultyFac\":1.03,\"rewardFac\":1.07,\"successes\":8173,\"failures\":0,\"rankGain\":2.2,\"rankLoss\":0.2,\"hpLoss\":0,\"hpLost\":0,\"isStealth\":true,\"isKill\":false,\"count\":3414.618890780187,\"weights\":{\"hack\":0.25,\"str\":0.05,\"def\":0.05,\"dex\":0.2,\"agi\":0.1,\"cha\":0.25,\"int\":0.1},\"decays\":{\"hack\":0.85,\"str\":0.9,\"def\":0.9,\"dex\":0.9,\"agi\":0.9,\"cha\":0.7,\"int\":0.9},\"teamCount\":0,\"reqdRank\":25}},\"Undercover Operation\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Undercover Operation\",\"level\":134,\"maxLevel\":134,\"autoLevel\":true,\"baseDifficulty\":491.90612711891697,\"difficultyFac\":1.04,\"rewardFac\":1.09,\"successes\":9174,\"failures\":0,\"rankGain\":4.4,\"rankLoss\":0.4,\"hpLoss\":2,\"hpLost\":0,\"isStealth\":true,\"isKill\":false,\"count\":2400.066599113085,\"weights\":{\"hack\":0.2,\"str\":0.05,\"def\":0.05,\"dex\":0.2,\"agi\":0.2,\"cha\":0.2,\"int\":0.1},\"decays\":{\"hack\":0.8,\"str\":0.9,\"def\":0.9,\"dex\":0.9,\"agi\":0.9,\"cha\":0.7,\"int\":0.9},\"teamCount\":0,\"reqdRank\":100}},\"Sting Operation\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Sting Operation\",\"level\":117,\"maxLevel\":117,\"autoLevel\":true,\"baseDifficulty\":622.0253518101006,\"difficultyFac\":1.04,\"rewardFac\":1.095,\"successes\":6971,\"failures\":0,\"rankGain\":5.5,\"rankLoss\":0.5,\"hpLoss\":2.5,\"hpLost\":0,\"isStealth\":true,\"isKill\":false,\"count\":4133.586182449771,\"weights\":{\"hack\":0.25,\"str\":0.05,\"def\":0.05,\"dex\":0.25,\"agi\":0.1,\"cha\":0.2,\"int\":0.1},\"decays\":{\"hack\":0.8,\"str\":0.85,\"def\":0.85,\"dex\":0.85,\"agi\":0.85,\"cha\":0.7,\"int\":0.9},\"teamCount\":0,\"reqdRank\":500}},\"Raid\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Raid\",\"level\":13,\"maxLevel\":13,\"autoLevel\":true,\"baseDifficulty\":736.4014868508443,\"difficultyFac\":1.045,\"rewardFac\":1.1,\"successes\":107,\"failures\":0,\"rankGain\":55,\"rankLoss\":2.5,\"hpLoss\":50,\"hpLost\":0,\"isStealth\":false,\"isKill\":true,\"count\":10941.77201578302,\"weights\":{\"hack\":0.1,\"str\":0.2,\"def\":0.2,\"dex\":0.2,\"agi\":0.2,\"cha\":0,\"int\":0.1},\"decays\":{\"hack\":0.7,\"str\":0.8,\"def\":0.8,\"dex\":0.8,\"agi\":0.8,\"cha\":0,\"int\":0.9},\"teamCount\":0,\"reqdRank\":3000}},\"Stealth Retirement Operation\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Stealth Retirement Operation\",\"level\":105,\"maxLevel\":105,\"autoLevel\":true,\"baseDifficulty\":996.9930073256157,\"difficultyFac\":1.05,\"rewardFac\":1.11,\"successes\":5698,\"failures\":0,\"rankGain\":22,\"rankLoss\":2,\"hpLoss\":10,\"hpLost\":0,\"isStealth\":true,\"isKill\":true,\"count\":3803.6057657833103,\"weights\":{\"hack\":0.1,\"str\":0.1,\"def\":0.1,\"dex\":0.3,\"agi\":0.3,\"cha\":0,\"int\":0.1},\"decays\":{\"hack\":0.7,\"str\":0.8,\"def\":0.8,\"dex\":0.8,\"agi\":0.8,\"cha\":0,\"int\":0.9},\"teamCount\":0,\"reqdRank\":20000}},\"Assassination\":{\"ctor\":\"Operation\",\"data\":{\"name\":\"Assassination\",\"level\":109,\"maxLevel\":109,\"autoLevel\":true,\"baseDifficulty\":1497.3957592377294,\"difficultyFac\":1.06,\"rewardFac\":1.14,\"successes\":6123,\"failures\":0,\"rankGain\":44,\"rankLoss\":4,\"hpLoss\":5,\"hpLost\":0,\"isStealth\":true,\"isKill\":true,\"count\":3393.987432450313,\"weights\":{\"hack\":0.1,\"str\":0.1,\"def\":0.1,\"dex\":0.3,\"agi\":0.3,\"cha\":0,\"int\":0.1},\"decays\":{\"hack\":0.6,\"str\":0.8,\"def\":0.8,\"dex\":0.8,\"agi\":0.8,\"cha\":0,\"int\":0.8},\"teamCount\":0,\"reqdRank\":50000}}},\"blackops\":{},\"logging\":{\"general\":true,\"contracts\":true,\"ops\":true,\"blackops\":true,\"events\":true},\"automateEnabled\":false,\"automateActionHigh\":{\"ctor\":\"ActionIdentifier\",\"data\":{\"name\":\"\",\"type\":1}},\"automateThreshHigh\":0,\"automateActionLow\":{\"ctor\":\"ActionIdentifier\",\"data\":{\"name\":\"\",\"type\":1}},\"automateThreshLow\":0,\"consoleHistory\":[],\"consoleLogs\":[\"[8/19 15:59:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 15:59:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 15:59:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 15:59:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 15:59:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 15:59:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 15:59:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:00:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:00:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:00:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:00:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:00:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:00:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:00:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:00:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:01:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:01:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:01:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:01:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:01:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:01:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:01:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:01:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:02:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:02:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:02:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:02:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:02:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:02:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:02:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:02:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:03:09] Intelligence indicates that the Synthoid population of Volhaven just changed significantly\",\"[8/19 16:03:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:03:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:03:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:03:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:03:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:03:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:03:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:03:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:04:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:04:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:04:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:04:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:04:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:04:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:04:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:04:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:05:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:05:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:05:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:05:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:05:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:05:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:05:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:05:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:06:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:06:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:06:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:06:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:06:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:06:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:06:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:06:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:07:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:07:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:07:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:07:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:07:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:07:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:07:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:07:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:08:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:08:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:08:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:08:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:08:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:08:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:08:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:08:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:09:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:09:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:09:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:09:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:09:43] Tensions between Synthoids and humans lead to riots in Aevum! Chaos increased\",\"[8/19 16:09:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:09:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:09:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:09:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:10:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:10:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:10:22] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:10:31] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:10:46] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:10:50] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:10:50] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:10:55] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:11:14] Sleeve: Infiltrate the synthoid communities.\",\"[8/19 16:11:16] Sleeve: Diplomacy completed. Chaos levels in the current city fell by 4.79%\",\"[8/19 16:11:22] Sleeve: Infiltrate the synthoid communities.\"]}},\"bladeburner_max_stamina_mult\":1.3825350000000003,\"bladeburner_stamina_gain_mult\":1.3337792748000001,\"bladeburner_analysis_mult\":1.7413357500000004,\"bladeburner_success_chance_mult\":2.1843081219208114,\"sleeves\":[{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":88,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379728455.0398,\"strength_exp\":164587062388.96872,\"defense_exp\":164570012835.95593,\"dexterity_exp\":164554023220.1768,\"agility_exp\":164560842212.95236,\"charisma_exp\":332896508549.50336,\"intelligence_exp\":7720.927777328906,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":158.5751570996483,\"hacking_speed_mult\":71.54539207485361,\"hacking_money_mult\":97102.50562962051,\"hacking_grow_mult\":3.0625,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":51000,\"earningsForSleeves\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Diplomacy\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":3,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":89,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379682333.0394,\"strength_exp\":164586920822.1976,\"defense_exp\":164569871269.1848,\"dexterity_exp\":164553917015.51166,\"agility_exp\":164560736008.28723,\"charisma_exp\":332896462765.66266,\"intelligence_exp\":7962.271238792595,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":99.91989590694763,\"hacking_speed_mult\":49.242788655101805,\"hacking_money_mult\":20206.637635226503,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":32000,\"earningsForSleeves\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Diplomacy\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":3,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":31,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379602039.8265,\"strength_exp\":164586741360.69305,\"defense_exp\":164569691807.68027,\"dexterity_exp\":164553737767.0319,\"agility_exp\":164560556759.80746,\"charisma_exp\":332896383061.14746,\"intelligence_exp\":839.6083610848051,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":249.79973976736906,\"hacking_speed_mult\":98.48557731020361,\"hacking_money_mult\":80826.55054090601,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":6000,\"earningsForSleeves\":{\"hack\":0,\"str\":100663.71251958731,\"def\":100663.71251958731,\"dex\":100663.71251958731,\"agi\":164537079691.1517,\"cha\":50331.856259793654,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":0,\"str\":100663.71251958731,\"def\":100663.71251958731,\"dex\":100663.71251958731,\"agi\":164537079691.1517,\"cha\":50331.856259793654,\"int\":0,\"money\":786253859498.9294},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Diplomacy\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":3,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":26,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379482093.3882,\"strength_exp\":164586485233.95334,\"defense_exp\":164569435680.94055,\"dexterity_exp\":164553444976.36832,\"agility_exp\":164560263969.1439,\"charisma_exp\":332896263994.1385,\"intelligence_exp\":663.0411006253005,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":249.79973976736906,\"hacking_speed_mult\":98.48557731020361,\"hacking_money_mult\":67355.45878408833,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"This will generate additional contracts and operations\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":8000,\"earningsForSleeves\":{\"hack\":0,\"str\":58130.577171308825,\"def\":58130.577171308825,\"dex\":164530629593.89807,\"agi\":96884.29528551549,\"cha\":38753.71811420588,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":0,\"str\":58130.577171308825,\"def\":58130.577171308825,\"dex\":164530629593.89807,\"agi\":96884.29528551549,\"cha\":38753.71811420588,\"int\":0,\"money\":1654649243812.7317},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Infiltrate synthoids\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":3,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":36,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379372343.4935,\"strength_exp\":164586261226.60977,\"defense_exp\":164569211673.597,\"dexterity_exp\":164553258224.68396,\"agility_exp\":164560077217.45953,\"charisma_exp\":332896155048.91364,\"intelligence_exp\":1089.4495275902977,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":227.09067251579006,\"hacking_speed_mult\":93.79578791447959,\"hacking_money_mult\":48111.04198863454,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"This will generate additional contracts and operations\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":1000,\"earningsForSleeves\":{\"hack\":191304.3858436712,\"str\":148677.38614563216,\"def\":164556453048.42252,\"dex\":148677.38614563216,\"agi\":148677.38614563216,\"cha\":0,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":191304.3858436712,\"str\":148677.38614563216,\"def\":164556453048.42252,\"dex\":148677.38614563216,\"agi\":148677.38614563216,\"cha\":0,\"int\":0,\"money\":-916740000},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Infiltrate synthoids\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":1,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":75,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379236243.39105,\"strength_exp\":164585994637.98865,\"defense_exp\":164568945084.97586,\"dexterity_exp\":164552953480.96585,\"agility_exp\":164559772473.74142,\"charisma_exp\":332896019946.6768,\"intelligence_exp\":4917.470211628685,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":249.79973976736906,\"hacking_speed_mult\":98.48557731020361,\"hacking_money_mult\":67355.45878408833,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"This will generate additional contracts and operations\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":37000,\"earningsForSleeves\":{\"hack\":193368.44669341296,\"str\":164575280941.78427,\"def\":1710915.9756532356,\"dex\":7945000.911870281,\"agi\":7945000.911870281,\"cha\":2541996.818915245,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":193368.44669341296,\"str\":164575280941.78427,\"def\":1710915.9756532356,\"dex\":7945000.911870281,\"agi\":7945000.911870281,\"cha\":2541996.818915245,\"int\":0,\"money\":84097896344917.12},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Infiltrate synthoids\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":1,\"sync\":100,\"queuedAugmentations\":[]}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":139,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379091518.25525,\"strength_exp\":164585722463.38556,\"defense_exp\":164568672910.37277,\"dexterity_exp\":164552720100.53394,\"agility_exp\":164559539093.3095,\"charisma_exp\":332895876282.64404,\"intelligence_exp\":40201.1818144843,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":152.8169682804307,\"hacking_speed_mult\":65.77309589825359,\"hacking_money_mult\":19982.05474604517,\"hacking_grow_mult\":1.75,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"This will generate additional contracts and operations\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":32000,\"earningsForSleeves\":{\"hack\":220953.3617445444,\"str\":19777029.945804674,\"def\":19777029.945804674,\"dex\":33458389.67445756,\"agi\":33458389.67445756,\"cha\":332900802534.8113,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":220953.3617445444,\"str\":19777029.945804674,\"def\":19777029.945804674,\"dex\":33458389.67445756,\"agi\":33458389.67445756,\"cha\":332900802534.8113,\"int\":0,\"money\":11896580754489466},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Infiltrate synthoids\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":2,\"sync\":100}},{\"ctor\":\"Sleeve\",\"data\":{\"hacking\":3549,\"strength\":142003,\"defense\":77137,\"dexterity\":10386,\"agility\":36315,\"charisma\":3350,\"intelligence\":112,\"hp\":7723,\"max_hp\":7723,\"hacking_exp\":335379154597.9483,\"strength_exp\":164585878681.52457,\"defense_exp\":164568829128.51178,\"dexterity_exp\":164552837311.47702,\"agility_exp\":164559656304.2526,\"charisma_exp\":332895938899.8462,\"intelligence_exp\":16677.31333893105,\"hacking_mult\":9.112586092031341,\"strength_mult\":226.67793725432472,\"defense_mult\":123.13369431099117,\"dexterity_mult\":16.57967639328,\"agility_mult\":57.97089647999998,\"charisma_mult\":5.162200243200001,\"hacking_exp_mult\":4.568343933037501,\"strength_exp_mult\":2.3669415000000003,\"defense_exp_mult\":2.3669415000000003,\"dexterity_exp_mult\":2.3669415000000003,\"agility_exp_mult\":2.3669415000000003,\"charisma_exp_mult\":4.534849519200002,\"hacking_chance_mult\":10.702957613906253,\"hacking_speed_mult\":7.494943724676265,\"hacking_money_mult\":102.6193312144,\"hacking_grow_mult\":1,\"company_rep_mult\":13.51007252595,\"faction_rep_mult\":2.04493575,\"crime_money_mult\":1.0777,\"crime_success_mult\":1.0777,\"work_money_mult\":2.34564,\"hacknet_node_money_mult\":1,\"hacknet_node_purchase_cost_mult\":1,\"hacknet_node_ram_cost_mult\":1,\"hacknet_node_core_cost_mult\":1,\"hacknet_node_level_cost_mult\":1,\"bladeburner_max_stamina_mult\":1,\"bladeburner_stamina_gain_mult\":1,\"bladeburner_analysis_mult\":1,\"bladeburner_success_chance_mult\":1,\"augmentations\":[{\"name\":\"Synthetic Heart\",\"level\":1},{\"name\":\"Synfibril Muscle\",\"level\":1},{\"name\":\"NEMEAN Subdermal Weave\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V3 Upgrade\",\"level\":1},{\"name\":\"QLink\",\"level\":1},{\"name\":\"Augmented Targeting III\",\"level\":1},{\"name\":\"Combat Rib III\",\"level\":1},{\"name\":\"Graphene Bone Lacings\",\"level\":1},{\"name\":\"SPTN-97 Gene Modification\",\"level\":1},{\"name\":\"Augmented Targeting I\",\"level\":1},{\"name\":\"Augmented Targeting II\",\"level\":1},{\"name\":\"Wired Reflexes\",\"level\":1},{\"name\":\"Speech Processor Implant\",\"level\":1},{\"name\":\"Neuralstimulator\",\"level\":1},{\"name\":\"Graphene Bionic Spine Upgrade\",\"level\":1},{\"name\":\"Graphene Bionic Legs Upgrade\",\"level\":1},{\"name\":\"Embedded Netburner Module\",\"level\":1},{\"name\":\"Embedded Netburner Module Core Implant\",\"level\":1},{\"name\":\"Embedded Netburner Module Core V2 Upgrade\",\"level\":1},{\"name\":\"PC Direct-Neural Interface\",\"level\":1},{\"name\":\"PC Direct-Neural Interface Optimization Submodule\",\"level\":1},{\"name\":\"ADR-V1 Pheromone Gene\",\"level\":1},{\"name\":\"CordiARC Fusion Reactor\",\"level\":1},{\"name\":\"Enhanced Social Interaction Implant\",\"level\":1},{\"name\":\"Nuoptimal Nootropic Injector Implant\",\"level\":1},{\"name\":\"Speech Enhancement\",\"level\":1},{\"name\":\"FocusWire\",\"level\":1},{\"name\":\"ADR-V2 Pheromone Gene\",\"level\":1},{\"name\":\"SmartJaw\",\"level\":1},{\"name\":\"Combat Rib I\",\"level\":1},{\"name\":\"Combat Rib II\",\"level\":1},{\"name\":\"Nanofiber Weave\",\"level\":1},{\"name\":\"Bionic Spine\",\"level\":1},{\"name\":\"Bionic Legs\",\"level\":1},{\"name\":\"HyperSight Corneal Implant\",\"level\":1},{\"name\":\"Neotra\",\"level\":1},{\"name\":\"Neurotrainer III\",\"level\":1},{\"name\":\"Power Recirculation Core\",\"level\":1},{\"name\":\"Xanipher\",\"level\":1},{\"name\":\"Hydroflame Left Arm\",\"level\":1},{\"name\":\"Neuronal Densification\",\"level\":1},{\"name\":\"nextSENS Gene Modification\",\"level\":1},{\"name\":\"OmniTek InfoLoad\",\"level\":1},{\"name\":\"Photosynthetic Cells\",\"level\":1},{\"name\":\"Artificial Bio-neural Network Implant\",\"level\":1},{\"name\":\"Enhanced Myelin Sheathing\",\"level\":1},{\"name\":\"PC Direct-Neural Interface NeuroNet Injector\",\"level\":1},{\"name\":\"Neurotrainer I\",\"level\":1},{\"name\":\"PCMatrix\",\"level\":1},{\"name\":\"Social Negotiation Assistant (S.N.A)\",\"level\":1}],\"city\":\"Sector-12\",\"className\":\"\",\"crimeType\":\"\",\"currentTask\":6,\"currentTaskLocation\":\"This will generate additional contracts and operations\",\"currentTaskMaxTime\":60000,\"currentTaskTime\":27000,\"earningsForSleeves\":{\"hack\":335380551488.10394,\"str\":10448399.21281444,\"def\":10448399.21281444,\"dex\":11024027.44597184,\"agi\":11024027.44597184,\"cha\":5509455.214568937,\"int\":0,\"money\":0},\"earningsForPlayer\":{\"hack\":335380551488.10394,\"str\":10448399.21281444,\"def\":10448399.21281444,\"dex\":11024027.44597184,\"agi\":11024027.44597184,\"cha\":5509455.214568937,\"int\":0,\"money\":1256624337411877},\"earningsForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"factionWorkType\":2,\"gainRatesForTask\":{\"hack\":0,\"str\":0,\"def\":0,\"dex\":0,\"agi\":0,\"cha\":0,\"int\":0,\"money\":0},\"gymStatType\":\"\",\"bbAction\":\"Infiltrate synthoids\",\"bbContract\":\"------\",\"logs\":[],\"memory\":100,\"shock\":100,\"storedCycles\":2,\"sync\":100}}],\"sleevesFromCovenant\":5,\"bitNodeN\":11,\"entropy\":0,\"lastUpdate\":1660939883295,\"lastSave\":1660939881817,\"totalPlaytime\":19855084400,\"playtimeSinceLastAug\":575308400,\"playtimeSinceLastBitnode\":743807800,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":259407128473.36453,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":1.9433410984617936e+21,\"crime\":0,\"gang\":0,\"hacking\":788673142844547300,\"hacknet\":1178305264937987300,\"hacknet_expenses\":-2.4465671610235907e+26,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":13219180112609538,\"stock\":13629634132500670,\"total\":-2.446547715547542e+26,\"work\":0,\"servers\":0,\"other\":-307600000,\"augmentations\":-7615935600}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":281908279893.06506,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":-1.5095476318090264e+98,\"crime\":0,\"gang\":0,\"hacking\":789877632459981800,\"hacknet\":1178402945760811000,\"hacknet_expenses\":-2.3006196219841844e+31,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":13018962352609564,\"stock\":13639901060823398,\"total\":-8.978924333921077e+299,\"work\":2345379.158139825,\"servers\":-14523182891368333000,\"other\":-1236200000,\"augmentations\":-8.978924333921077e+299}},\"scriptProdSinceLastAug\":802302835028288300,\"exploits\":[\"N00dles\",\"EditSaveFile\",\"YoureNotMeantToAccessThis\",\"PrototypeTampering\",\"TimeCompression\",\"TrueRecursion\"],\"achievements\":[{\"ID\":\"CYBERSEC\",\"unlockedOn\":1642198554797},{\"ID\":\"NITESEC\",\"unlockedOn\":1642198554810},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1642198554813},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1642198554816},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1642198554819},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1642198554823},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1642198554826},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1642198554830},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1642198554834},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1642198554837},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1642198554840},{\"ID\":\"NS2\",\"unlockedOn\":1642198554843},{\"ID\":\"FROZE\",\"unlockedOn\":1642198554847},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1642198554849},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1642198554853},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1642198554855},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1642198554858},{\"ID\":\"DONATION\",\"unlockedOn\":1642198554862},{\"ID\":\"TOR\",\"unlockedOn\":1642198554865},{\"ID\":\"4S\",\"unlockedOn\":1642198554867},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1642198794816},{\"ID\":\"SF1.1\",\"unlockedOn\":1642199274811},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1642199274820},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1642738642559},{\"ID\":\"TRAVEL\",\"unlockedOn\":1642962148551},{\"ID\":\"N00DLES\",\"unlockedOn\":1643223570990},{\"ID\":\"DISCOUNT\",\"unlockedOn\":1643342251031},{\"ID\":\"WORKOUT\",\"unlockedOn\":1643342310977},{\"ID\":\"HOSPITALIZED\",\"unlockedOn\":1643343810986},{\"ID\":\"GANG\",\"unlockedOn\":1643492387763},{\"ID\":\"FULL_GANG\",\"unlockedOn\":1643637407795},{\"ID\":\"GANG_MEMBER_POWER\",\"unlockedOn\":1643638067757},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1643783614558},{\"ID\":\"SF2.1\",\"unlockedOn\":1643950774572},{\"ID\":\"CORPORATION\",\"unlockedOn\":1644029434551},{\"ID\":\"EDITSAVEFILE\",\"unlockedOn\":1644548478251},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1644616585324},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1644631058379},{\"ID\":\"MONEY_1Q\",\"unlockedOn\":1644894384975},{\"ID\":\"SF3.1\",\"unlockedOn\":1644978324968},{\"ID\":\"MAX_RAM\",\"unlockedOn\":1645322321671},{\"ID\":\"CORPORATION_REAL_ESTATE\",\"unlockedOn\":1645480601873},{\"ID\":\"CORPORATION_BRIBE\",\"unlockedOn\":1645636901815},{\"ID\":\"SF4.1\",\"unlockedOn\":1645668283454},{\"ID\":\"QUEUE_40\",\"unlockedOn\":1646158366608},{\"ID\":\"DEVMENU\",\"unlockedOn\":1646194895641},{\"ID\":\"NEUROFLUX_255\",\"unlockedOn\":1646235482188},{\"ID\":\"FAST_BN\",\"unlockedOn\":1646236682177},{\"ID\":\"SF5.1\",\"unlockedOn\":1647623945870},{\"ID\":\"CHALLENGE_BN6\",\"unlockedOn\":1647803738825},{\"ID\":\"INDECISIVE\",\"unlockedOn\":1647807388849},{\"ID\":\"SF6.1\",\"unlockedOn\":1647831088850},{\"ID\":\"BLADEBURNER_DIVISION\",\"unlockedOn\":1647914608833},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1647950068818},{\"ID\":\"ILLUMINATI\",\"unlockedOn\":1647967048840},{\"ID\":\"COMBAT_3000\",\"unlockedOn\":1647986668822},{\"ID\":\"BLADEBURNER_OVERCLOCK\",\"unlockedOn\":1648061008822},{\"ID\":\"HACKING_100000\",\"unlockedOn\":1648315289227},{\"ID\":\"SF12.1\",\"unlockedOn\":1648350149229},{\"ID\":\"SF7.1\",\"unlockedOn\":1648725699031},{\"ID\":\"CORPORATION_PROD_1000\",\"unlockedOn\":1649103101793},{\"ID\":\"CORPORATION_EMPLOYEE_3000\",\"unlockedOn\":1650171954872},{\"ID\":\"BLADEBURNER_UNSPENT_100000\",\"unlockedOn\":1650463333880},{\"ID\":\"PROTOTYPETAMPERING\",\"unlockedOn\":1653058666403},{\"ID\":\"CHALLENGE_BN8\",\"unlockedOn\":1653415061852},{\"ID\":\"SF8.1\",\"unlockedOn\":1653415138628},{\"ID\":\"FIRST_HACKNET_SERVER\",\"unlockedOn\":1653415258647},{\"ID\":\"ALL_HACKNET_SERVER\",\"unlockedOn\":1653415498651},{\"ID\":\"MAX_HACKNET_SERVER\",\"unlockedOn\":1653415558665},{\"ID\":\"HACKNET_SERVER_1B\",\"unlockedOn\":1653458098650},{\"ID\":\"MAX_CACHE\",\"unlockedOn\":1653458098652},{\"ID\":\"SF9.1\",\"unlockedOn\":1653856225450},{\"ID\":\"SF10.1\",\"unlockedOn\":1654280365445},{\"ID\":\"GANG_TERRITORY\",\"unlockedOn\":1654755265458},{\"ID\":\"INSTALL_100\",\"unlockedOn\":1654781545441},{\"ID\":\"SF11.1\",\"unlockedOn\":1654813765454},{\"ID\":\"CHALLENGE_BN13\",\"unlockedOn\":1656351915207},{\"ID\":\"MONEY_M1B\",\"unlockedOn\":1656450920003},{\"ID\":\"CHALLENGE_BN2\",\"unlockedOn\":1657165386230},{\"ID\":\"TIMECOMPRESSION\",\"unlockedOn\":1657565599322},{\"ID\":\"INTELLIGENCE_255\",\"unlockedOn\":1657669551035},{\"ID\":\"CHALLENGE_BN3\",\"unlockedOn\":1657857782381},{\"ID\":\"CHALLENGE_BN1\",\"unlockedOn\":1658073000860},{\"ID\":\"CHALLENGE_BN7\",\"unlockedOn\":1658291625068},{\"ID\":\"CHALLENGE_BN9\",\"unlockedOn\":1658379520876},{\"ID\":\"SLEEVE_8\",\"unlockedOn\":1659238246805},{\"ID\":\"RUNNING_SCRIPTS_1000\",\"unlockedOn\":1659557469326},{\"ID\":\"KARMA_1000000\",\"unlockedOn\":1659592269366},{\"ID\":\"CHALLENGE_BN12\",\"unlockedOn\":1660165898532},{\"ID\":\"STOCK_1q\",\"unlockedOn\":1660601730104}],\"terminalCommandHistory\":[\"home\",\"anal avmnite-02h\",\"home\",\"anal I.I.I.I\",\"home\",\"anal run4theh111z\",\"home\",\"bribe\",\"buy\",\"bribe\",\"buy\",\"ps\",\"run /bin/bladeJoiner.js\",\"run /bin/hashBlade.js\",\"run /bin/bladeSkills.js\",\"run /scripts/localHack.js iron-gym\",\"install\",\"run /bin/faqChurn.js --faction 'Sector-12' --work ops --goal 2500\",\"run /bin/stonks.js\",\"run /bin/faqChurn.js --faction 'Sector-12' --work ops --goal 10000\",\"ps\",\"tail 2559\",\"run /bin/hashBlade.js\",\"run /bin/bladeSkills.js\",\"install\",\"run /bin/hashBlade.js\",\"run /bin/bladeSkills.js\",\"jobs\",\"anal fulcrumassets\",\"home\",\"run /bin/stonks.js\",\"bribe\",\"buy\",\"run /sbin/bank.js --amount 1e300\",\"install\",\"run /bin/hashBlade.js\",\"run /bin/bladeSkills.js\",\"run /bin/faqChurn.js --faction Illuminati --work ops --goal 1e16\",\"run /bin/stonks.js\",\"tail 3651\",\"nano /bin/corpOfficeBuilder.js\",\"nano /bin/corpBuilder.js\",\"run /bin/hashBod.js\",\"nano /bin/init.js\",\"ls\",\"ls /lib\",\"nano /lib/utils.js\",\"nano /tmp/test.js\",\"run /tmp/test.js n00dles\",\"run /tmp/test.js fulcrumassets\"],\"identifier\":\"10ba7f5ef0e5c2\",\"factionWorkType\":\"Faction Field Work\",\"committingCrimeThruSingFn\":false,\"singFnCrimeWorkerScript\":null}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":8,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"55.5.4.2\",\"isConnectedTo\":true,\"maxRam\":1073741824,\"messages\":[\"hackers-starting-handbook.lit\",\"icarus.msg\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\",\"FTPCrack.exe\",\"relaySMTP.exe\",\"BruteSSH.exe\",\"Formulas.exe\",\"ServerProfiler.exe\",\"DeepscanV1.exe\",\"AutoLink.exe\",\"DeepscanV2.exe\",\"HTTPWorm.exe\",\"SQLInject.exe\"],\"ramUsed\":858993494.5500001,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/pwn.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":575308.4100095899,\"pid\":2,\"ramUsage\":5.15,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///757ec01d-83b3-4981-8407-37f982094168\",\"moduleSequenceNumber\":973},{\"filename\":\"/bin/pwn.js\",\"url\":\"blob:file:///5b406a6b-7003-4068-a8c8-bc38a290f28f\",\"moduleSequenceNumber\":1041}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/faqJoin.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":575308.4100095899,\"pid\":3,\"ramUsage\":7.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/faqJoin.js\",\"url\":\"blob:file:///7922edf8-c129-437f-be39-17bfbdd82f19\",\"moduleSequenceNumber\":1042}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/displayKarma.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":575308.4100095899,\"pid\":9,\"ramUsage\":1.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/displayKarma.js\",\"url\":\"blob:file:///c00e38dc-41e3-4a2c-98de-10c51dce1a88\",\"moduleSequenceNumber\":1048}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",357913931],\"dataMap\":{},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":3.523301047820545e+22,\"onlineMoneyMade\":0,\"onlineRunningTime\":575306.4100095903,\"pid\":35,\"ramUsage\":2.4,\"server\":\"home\",\"threads\":357913931,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///8f9b898f-59a0-4e30-979f-42f71bcbd536\",\"moduleSequenceNumber\":1092}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/bladeSkills.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":575102.6100096378,\"pid\":897,\"ramUsage\":16.5,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/bladeSkills.js\",\"url\":\"blob:file:///32cb74f3-6351-4b05-89d4-084b5859db04\",\"moduleSequenceNumber\":1389}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"--faction\",\"Illuminati\",\"--work\",\"ops\",\"--goal\",10000000000000000],\"dataMap\":{},\"filename\":\"/bin/faqChurn.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":574502.0100097776,\"pid\":3435,\"ramUsage\":6.1,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/faqChurn.js\",\"url\":\"blob:file:///413b2b56-b231-4b7a-9654-74fa44ccedad\",\"moduleSequenceNumber\":308}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/stonks.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":13629692348559820,\"onlineRunningTime\":574451.2100097894,\"pid\":3651,\"ramUsage\":17.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/stonks.js\",\"url\":\"blob:file:///14b591e5-9b80-4516-91de-fb09375295c2\",\"moduleSequenceNumber\":1696}]}},{\"ctor\":\"RunningScript\",\"data\":{\"args\":[],\"dataMap\":{},\"filename\":\"/bin/hashBod.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":0,\"onlineMoneyMade\":0,\"onlineRunningTime\":242284.41000512676,\"pid\":1422050,\"ramUsage\":5.6,\"server\":\"home\",\"threads\":1,\"dependencies\":[{\"filename\":\"/bin/hashBod.js\",\"url\":\"blob:file:///56d3896b-2a79-45ac-9793-2e7fca39a3c4\",\"moduleSequenceNumber\":1648737}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"function scan(ns, parent, server, list) {\\n\\tconst CHILDREN = ns.scan(server);\\n\\tfor (let child of CHILDREN) {\\n\\t\\tif (parent == child) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tlist.push(child);\\n\\n\\t\\tscan(ns, server, child, list);\\n\\t}\\n}\\n\\nexport function list_servers(ns) {\\n\\tconst list = [];\\n\\tscan(ns, '', 'home', list);\\n\\treturn list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help) {\\n\\t\\tns.tprint(\\\"This script lists all servers on which you can run scripts.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()}`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()}`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst SERVERS = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n\\tfor (const SERVER of SERVERS) {\\n\\t\\tconst USED = ns.getServerUsedRam(SERVER);\\n\\t\\tconst MAXRAM = ns.getServerMaxRam(SERVER);\\n\\t\\tns.tprint(SERVER + \\\":open:\\\" + (MAXRAM - USED));\\n\\t}\\n}\",\"filename\":\"known-servers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"known-servers.js\",\"url\":\"blob:file:///a1b4ad44-9bfd-4719-9e1f-109bcf8d879a\"}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":9756,\"_hash\":\"ff9ee47b362bb44d4412104f4f78885ba1acd748d86fe010c149155bbca45423\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export function getPortToolCount(ns) {\\n\\tconst TOOLS = [\\\"BruteSSH.exe\\\", \\\"FTPCrack.exe\\\", \\\"relaySMTP.exe\\\", \\\"HTTPWorm.exe\\\", \\\"SQLInject.exe\\\"];\\n\\tlet count = 0;\\n\\tfor (let tool of TOOLS) {\\n\\t\\tif (ns.fileExists(tool)) {\\n\\t\\t\\tns.tprint(tool + \\\" has been found\\\");\\n\\t\\t\\tcount += 1;\\n\\t\\t} else {\\n\\t\\t\\tns.tprint(tool + \\\" not found\\\");\\n\\t\\t}\\n\\t}\\n\\n\\tns.tprint(\\\"Found \\\" + count + \\\" port opening tools\\\");\\n\\treturn count;\\n}\\n\\nexport function canOpen(ns, target) {\\n\\tif (getPortToolCount(ns) >= ns.getServerNumPortsRequired(target)) {\\n\\t\\treturn true;\\n\\t} else {\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nexport function openPorts(ns, server) {\\n\\tif (ns.fileExists(\\\"BruteSSH.exe\\\")) {\\n\\t\\tns.brutessh(server);\\n\\t}\\n\\tif (ns.fileExists(\\\"FTPCrack.exe\\\")) {\\n\\t\\tns.ftpcrack(server);\\n\\t}\\n\\tif (ns.fileExists(\\\"relaySMTP.exe\\\")) {\\n\\t\\tns.relaysmtp(server);\\n\\t}\\n\\tif (ns.fileExists(\\\"HTTPWorm.exe\\\")) {\\n\\t\\tns.httpworm(server);\\n\\t}\\n\\tif (ns.fileExists(\\\"SQLInject.exe\\\")) {\\n\\t\\tns.sqlinject(server);\\n\\t}\\n\\treturn;\\n}\\n\\nexport function openServer(ns, target) {\\n\\tif (canOpen(ns, target)) {\\n\\t\\topenPorts(ns, target);\\n\\t\\tns.nuke(target);\\n\\t} else {\\n\\t\\tns.tprint(\\\"No can open \\\" + target);\\n\\t}\\n\\treturn;\\n}\\n\\n/**\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\\"help\\\", false]]);\\n\\tif (args.help) {\\n\\t\\tns.tprint(\\\"This script attempts to root a target server.\\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()}`);\\n\\t\\tns.tprint(\\\"Example:\\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()}`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst target = ns.args[0];\\n\\topenServer(ns, target);\\n}\",\"filename\":\"open.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"open.js\",\"url\":\"blob:file:///0e5fa0c9-2ca6-4749-8e43-17e3066b223a\"}],\"dependents\":[],\"ramUsage\":2.1,\"server\":\"home\",\"moduleSequenceNumber\":9757,\"_hash\":\"18c7464b7aac5841f5b2acd5e750cac9f1a51745ba9fb6d63123c9ac0aae4be8\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getHackScript, getServerPrefix } from 'import.js';\\nlet hackablePorts;\\n\\n/* Searches for servers that are hackable,\\n * cracks them if you don't have root access,\\n * installs a hack script, and instructs them to\\n * HACK THEMSELVES\\n */\\nexport const main = async function (ns) {\\n    do {\\n        findHackablePorts(ns);\\n        await findServer(ns, 'home', 'home', hackServer);\\n        await ns.sleep(10 * 1000);\\n    } while (true);\\n}\\n\\nasync function findServer(ns, startServer, targetServer, func) {\\n    let servers = ns.scan(targetServer, true).filter((server) => server !== startServer && !server.includes(getServerPrefix()) && !server.includes('hacknet-node'));\\n    for (const server of servers) {\\n        const success = await func.call(this, ns, server);\\n        if (success) {\\n            await findServer(ns, targetServer, server, func);\\n        }\\n    }\\n}\\n\\nasync function hackServer(ns, server) {\\n    if (!crackServer(ns, server)) {\\n        return false;\\n    }\\n\\n    let script = getHackScript();\\n    await ns.scp(script, server);\\n    if (!ns.isRunning(script, server)) {\\n        ns.killall(server);\\n        let scriptRam = ns.getScriptRam(script);\\n        let serverRam = ns.getServerMaxRam(server);\\n        let threads = Math.floor(serverRam / scriptRam);\\n        if (threads > 0) {\\n            ns.print(`Starting ${threads} processes on ${server}`);\\n            ns.exec(script, server, threads, server, threads);\\n        }\\n    }\\n    return true;\\n}\\n\\nfunction crackServer(ns, server) {\\n    if (ns.hasRootAccess(server)) {\\n        return true;\\n    }\\n\\n    if (ns.fileExists('BruteSSH.exe')) {\\n        ns.brutessh(server);\\n    }\\n    if (ns.fileExists('FTPCrack.exe')) {\\n        ns.ftpcrack(server);\\n    }\\n    if (ns.fileExists('relaySMTP.exe')) {\\n        ns.relaysmtp(server);\\n    }\\n    if (ns.fileExists('HTTPWorm.exe')) {\\n        ns.httpworm(server);\\n    }\\n    if (ns.fileExists('SQLInject.exe')) {\\n        ns.sqlinject(server);\\n    }\\n    if (ns.getServerRequiredHackingLevel(server) > ns.getHackingLevel() ||\\n        ns.getServerNumPortsRequired(server) > hackablePorts) {\\n        return false;\\n    } else {\\n        ns.nuke(server);\\n        ns.tprint(`New Server Cracked: ${server}!`);\\n        return true;\\n    }\\n}\\n\\nexport function findHackablePorts(ns) {\\n    let hackPorts = 0;\\n    if (ns.fileExists('BruteSSH.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('FTPCrack.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('relaySMTP.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('HTTPWorm.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('SQLInject.exe')) {\\n        hackPorts += 1;\\n    }\\n    hackablePorts = hackPorts;\\n}\",\"filename\":\"/bin/pwn.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///87dc76d3-9c7b-4b52-92f9-e73ce2216260\",\"moduleSequenceNumber\":9770},{\"filename\":\"/bin/pwn.js\",\"url\":\"blob:file:///251310fc-a79b-4a47-8ee3-ed68a3264e37\",\"moduleSequenceNumber\":9837}],\"dependents\":[],\"ramUsage\":5.15,\"server\":\"home\",\"moduleSequenceNumber\":9837,\"_hash\":\"f0240c721cd5a1d6f5a15101cebc1b3786547715d356f8d4fe1dccc6bd1019a2\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getFolder, getServerPrefix } from 'import.js';\\nlet maxValueServers;\\n\\n/* Identify servers worth more than $10 Billion,\\n * deploy the hack script and attack those servers\\n * using all purchased servers.\\n */\\nexport async function main(ns) {\\n    maxValueServers = {\\n        zero: [],\\n        million: [],\\n        billion: [],\\n        trillion: []\\n    };\\n    findServer(ns, 'home', 'home', checkValue);\\n    ns.run(`/${getFolder()}/remoteHack.js`, 1, highest(ns).join(','));\\n}\\n\\nfunction findServer(ns, startServer, targetServer, func) {\\n    let servers = ns.scan(targetServer, true).filter((server) => server !== startServer && !server.includes(getServerPrefix));\\n    if (!ns.hasRootAccess(targetServer)) { return false; }\\n    servers.forEach((server) => {\\n        func.call(this, ns, server);\\n        if (ns.hasRootAccess(server)) {\\n            findServer(ns, targetServer, server, func);\\n        }\\n    });\\n}\\n\\nfunction checkValue(ns, server) {\\n    if (!ns.hasRootAccess(server)) {\\n        return;\\n    }\\n    let serverMoney = ns.getServerMaxMoney(server);\\n    if (serverMoney > 1e12) {\\n        maxValueServers.trillion.push(server);\\n    } else if (serverMoney > 1e9) {\\n        maxValueServers.billion.push(server);\\n    } else if (serverMoney > 0) {\\n        maxValueServers.million.push(server);\\n    } else {\\n        maxValueServers.zero.push(server);\\n    }\\n}\\n\\nfunction highest(ns) {\\n    if (maxValueServers.trillion.length > 0) {\\n        return maxValueServers.trillion;\\n    }\\n    if (maxValueServers.billion.length > 0) {\\n        return maxValueServers.billion;\\n    }\\n    if (maxValueServers.million.length > 0) {\\n        return maxValueServers.million;\\n    }\\n}\",\"filename\":\"/scripts/autoRemoteHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///78228d1d-8ccf-4313-bb1f-fef7d86a7f6c\",\"moduleSequenceNumber\":64148},{\"filename\":\"/scripts/autoRemoteHack.js\",\"url\":\"blob:file:///ff362fae-035d-45eb-85b5-ecf0112071ef\",\"moduleSequenceNumber\":64235}],\"dependents\":[],\"ramUsage\":2.95,\"server\":\"home\",\"moduleSequenceNumber\":9759,\"_hash\":\"0a44f15d5c808191719bdc1a774692b405faf03d995467120b769bf80fcccaa2\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getFolder, getServerPrefix } from 'import.js';\\nimport { serverHackStatus, serverReport } from '/scripts/serverStatus.js';\\n\\n/*\\n * This is a dashboard that outputs the status\\n * of your entire server network.\\n */\\nexport async function main(ns) {\\n    findServer(ns, 'home', 'home', 1);\\n}\\n\\nfunction findServer(ns, startServer, targetServer, i) {\\n    let servers = ns.scan(targetServer, true)\\n        .filter((server) => server !== startServer && !server.includes(getServerPrefix()));\\n    servers.forEach((server) => {\\n        ns.tprint(`😹${'>'.repeat(i)}`);\\n        serverReport(ns, server);\\n        if (serverHackStatus(ns, server) !== \\\"🔐\\\") {\\n            findServer(ns, targetServer, server, i + 1);\\n        }\\n    });\\n}\\n\",\"filename\":\"/scripts/dashboard.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/scripts/serverStatus.js\",\"url\":\"blob:file:///2a4fd083-60bb-47a4-832b-69cf98fd66e8\",\"moduleSequenceNumber\":567},{\"filename\":\"import.js\",\"url\":\"blob:file:///b5a5e654-580c-413c-8c2e-6c55317af758\",\"moduleSequenceNumber\":572},{\"filename\":\"/scripts/dashboard.js\",\"url\":\"blob:file:///a64e4190-97c1-4c41-8d4a-82dba4b1e9d8\",\"moduleSequenceNumber\":3038}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9760,\"_hash\":\"220e6bc01c4c625d7a960dc7a5284658e52b1df2dd9281487a64407abd3a9d5f\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7cc7c8e6-2b0b-4025-ad56-4073f12c786b\",\"moduleSequenceNumber\":9924}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":9924,\"_hash\":\"e7a82cc721932419c47eb52b39b72ad40f1e4654a5bf227061e24250e346d9fd\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getFolder } from 'import.js';\\n/* Run various scripts easily and from one interface\\n */\\nexport async function main(ns) {\\n  const command = ns.args[0];\\n  const commandArgs = ns.args.slice(1);\\n  await runCommand(ns, command, commandArgs);\\n}\\n\\nasync function runCommand(ns, command, commandArgs) {\\n  switch (command) {\\n    case 'autoHack':\\n    case 'autoRemoteHack':\\n    case 'dashboard':\\n    case 'factionManager':\\n    case 'gangManager':\\n    case 'hacknetManager':\\n    case 'hacknetNodeManager':\\n    case 'hacknetUpgradeManager':\\n    case 'purchaseServers':\\n    case 'stockManager':\\n      ns.run(`/${getFolder()}/${command}.js`);\\n      break;\\n    case 'localGrow':\\n    case 'localHack':\\n      ns.run(`/${getFolder()}/${command}.js`, 1, commandArgs[0]);\\n      break;\\n    case 'sudo autohack':\\n    case 'sudo autoHack':\\n      await runCommand(ns, 'autoHack');\\n      await runCommand(ns, 'autoRemoteHack');\\n      break;\\n    case 'autohack':\\n      await runCommand(ns, 'autoHack');\\n      break;\\n    case 'serverhack':\\n    case 'serverHack':\\n      await runCommand(ns, 'autoRemoteHack');\\n      break;\\n    case 'dash':\\n    case 'status':\\n      await runCommand(ns, 'dashboard');\\n      break;\\n    case 'buyServer':\\n    case 'purchaseServer':\\n    case 'buyServers':\\n      await runCommand(ns, 'purchaseServers');\\n      break;\\n    default:\\n      ns.tprint(`Oh no! ${command} isn't a valid command. Try: dashboard, autoHack, autoRemoteHack, or hacknetManager.`);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [\\n    'autoHack',\\n    'autoRemoteHack',\\n    'dashboard',\\n    'factionManager',\\n    'gangManager',\\n    'hacknetManager',\\n    'localGrow',\\n    'localHack',\\n    'purchaseServer',\\n    'stockManager',\\n    ...data.servers\\n  ];\\n}\",\"filename\":\"/scripts/hax.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///a878ade8-9d95-4b39-8d9a-9c5eb3eae264\",\"moduleSequenceNumber\":420825},{\"filename\":\"/scripts/hax.js\",\"url\":\"blob:file:///10a5a508-43d2-4119-a4da-3389ccdc6b10\",\"moduleSequenceNumber\":421142}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9762,\"_hash\":\"5550ce84c18885a1959f70b91ba661d4c29ef3ced94232a4bf3b61ff9c398d14\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getServerPrefix } from 'import.js';\\n\\nlet maxServers;\\nlet servers;\\n\\n/*\\n * Purchases the best server available with the\\n * user's current money. If the server limit is\\n * reached, replaces the worst server. Repeatable.\\n */\\nexport async function main(ns) {\\n    // Default Values\\n    maxServers = ns.getPurchasedServerLimit();\\n    servers = ns.getPurchasedServers(true);\\n    serverInfo(ns);\\n    await buyServers(ns);\\n}\\n\\nfunction serverInfo(ns) {\\n    ns.tprint(`You have ${servers.length}/${maxServers} servers`);\\n    Object.entries(groupServers(ns)).map((ramServers) => {\\n        ns.tprint(`${ramServers[0]}GB: ${ramServers[1]}`);\\n    });\\n}\\n\\nfunction groupServers(ns) {\\n    let groupedServers = {};\\n    servers.forEach((server) => {\\n        let ram = ns.getServerRam(server)[0];\\n        groupedServers[ram] = groupedServers[ram] || [];\\n        groupedServers[ram].push(server);\\n    });\\n    return groupedServers;\\n}\\n\\nasync function buyServers(ns) {\\n    let ram = ns.getPurchasedServerMaxRam();\\n    let shopServer = true;\\n    while (shopServer) {\\n        let myMoney = ns.getServerMoneyAvailable('home');\\n        let serverCost = ns.getPurchasedServerCost(ram);\\n        while (serverCost > myMoney && ram > 2) {\\n            ram = ram / 2;\\n            serverCost = ns.getPurchasedServerCost(ram);\\n        }\\n        shopServer = await ns.prompt(`Would you like to buy a ${ram}GB server for ${ns.nFormat(serverCost, \\\"$0.00a\\\")}`);\\n        if (shopServer) { shopServer = buyServer(ns, ram); }\\n    }\\n}\\n\\nfunction buyServer(ns, ram) {\\n    if (servers.length == maxServers) {\\n        let success = removeWeakestServer(ns, ram);\\n        if (!success) { return false; }\\n    }\\n    let server = ns.purchaseServer(`${getServerPrefix()}-${ram}GB`, ram);\\n    servers.push(server);\\n    ns.tprint(`Purchased ${server}: ${ram}GB`);\\n    return true;\\n}\\n\\nfunction removeWeakestServer(ns, newRam) {\\n    let groupedServers = groupServers(ns);\\n    let min = Math.min(...Object.keys(groupedServers));\\n    if (min >= newRam) {\\n        ns.tprint(`Your smallest server has ${min}GB RAM and you wanted to purchase ${newRam}GB server`);\\n        return false;\\n    }\\n    let smallest_server = groupedServers[min][0];\\n    ns.killall(smallest_server);\\n    let result = ns.deleteServer(smallest_server);\\n    servers = ns.getPurchasedServers(true);\\n    return true;\\n}\\n\",\"filename\":\"/scripts/purchaseServers.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///8cb5a7fc-0608-4f95-8bd1-077f59838112\",\"moduleSequenceNumber\":64148},{\"filename\":\"/scripts/purchaseServers.js\",\"url\":\"blob:file:///202487dc-e471-47ac-a65b-c6408fba6772\",\"moduleSequenceNumber\":64234}],\"dependents\":[],\"ramUsage\":9.4,\"server\":\"home\",\"moduleSequenceNumber\":9763,\"_hash\":\"5da036a3b110ce5ba41fc38c559945a5158b30a3bd797235912d4fd1e8ec5c79\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getHackScript } from 'import.js';\\n\\n/* Deploys the hack script to all purchased servers\\n * Differs from autoRemoteHack because you can specify\\n * the target\\n * args[0] - list of servers\\n * args[1] - alternate Hackscript (default from import)\\n */\\nexport async function main(ns) {\\n  let myServers = ns.getPurchasedServers();\\n  let targetServers = ns.args[0].split(',');\\n  let hackScript = ns.args[1] || getHackScript();\\n  let scriptRam = ns.getScriptRam(hackScript);\\n  for (const [index, server] of myServers.entries()) {\\n    ns.killall(server);\\n    let serverRam = ns.getServerRam(server)[0];\\n    let threads = Math.floor(serverRam / scriptRam);\\n    let serverIndex = index % targetServers.length;\\n    let targetServer = targetServers[serverIndex];\\n    ns.print(`${server} is hacking ${targetServer} with ${threads} threads.`);\\n    await ns.scp(hackScript, server);\\n    if (threads > 0) {\\n      ns.exec(hackScript, server, threads, targetServer, threads);\\n    }\\n  }\\n}\\n\",\"filename\":\"/scripts/remoteHack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///2283e407-7748-4070-b267-656db3da537a\",\"moduleSequenceNumber\":64148},{\"filename\":\"/scripts/remoteHack.js\",\"url\":\"blob:file:///cb32dd52-7371-4367-a291-75eced971862\",\"moduleSequenceNumber\":64236}],\"dependents\":[],\"ramUsage\":6.45,\"server\":\"home\",\"moduleSequenceNumber\":9764,\"_hash\":\"8bb243a76c83c30301e9e187586e47c1d3c77ee5c47a1662ccebc8b13dde20dc\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"let hackPorts = 0;\\n\\n/*\\n * Utility functions that report serverStatus\\n * and Hackability \\n */\\nexport async function main(ns) {\\n  let server = ns.args[0];\\n  serverReport(ns, server);\\n}\\n\\nexport function serverReport(ns, server) {\\n  let serverLock = serverHackStatus(ns, server);\\n  ns.tprint(`${serverLock} ${server}`);\\n  if (serverLock == \\\"🔓\\\") {\\n    ns.tprint(`🛡️${Math.round(ns.getServerSecurityLevel(server))}/${ns.getServerMinSecurityLevel(server)}`);\\n    ns.tprint(`💸${ns.nFormat(ns.getServerMoneyAvailable(server), \\\"$0.000a\\\")}/${ns.nFormat(ns.getServerMaxMoney(server), \\\"$0.000a\\\")}`);\\n  } else {\\n    ns.tprint(`Hack Level: ${ns.getServerRequiredHackingLevel(server)}`);\\n    ns.tprint(`Ports: ${ns.getServerNumPortsRequired(server)}`);\\n  }\\n  ns.tprint('-----------');\\n}\\n\\nexport function serverHackStatus(ns, server) {\\n  if (ns.hasRootAccess(server)) {\\n    return \\\"🔓\\\";\\n  }\\n  if (ns.getServerRequiredHackingLevel(server) > ns.getHackingLevel() ||\\n    ns.getServerNumPortsRequired(server) > hackablePorts) {\\n    return \\\"🔐\\\";\\n  }\\n  return \\\"🔒\\\";\\n}\\n\\nexport function hackablePorts(ns) {\\n  if (hackPorts > 0) {\\n    return hackPorts;\\n  }\\n  if (ns.fileExists('BruteSSH.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('FTPCrack.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('relaySMTP.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('HTTPWorm.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('SQLInject.exe')) {\\n    hackPorts += 1;\\n  }\\n  return hackPorts;\\n}\\n\",\"filename\":\"/scripts/serverStatus.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/scripts/serverStatus.js\",\"url\":\"blob:file:///b6624d87-9afa-4c8e-8af7-f378a2294b6a\",\"moduleSequenceNumber\":421141}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":9765,\"_hash\":\"85510f85ecc586dbae588ff794c8d87cf14b69b3a5b73818d4898853274ec57a\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerRequiredHackingLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerNumPortsRequired\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const SCRIPT = '/scripts/localHack.js';\\nconst HACKSCRIPT = '/scripts/hack.js';\\nconst HOME = 'home';\\nconst RESERVERAM = 0.2; // RAM in GB to reserve for running other commands, scripts\\n\\nexport function autocomplete(data, args) {\\n\\treturn [...data.servers];\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst target = ns.args[0];\\n\\tif (typeof target === 'undefined') {\\n\\t\\tns.tprint(`Usage: run ${SCRIPT} TARGET`);\\n\\t\\tns.tprint(`Example: run ${SCRIPT} iron-gym`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tif (ns.scriptRunning(HACKSCRIPT, HOME)) {\\n\\t\\tns.scriptKill(HACKSCRIPT, HOME);\\n\\t\\tns.tprint(`Killed running instance of ${HACKSCRIPT}`);\\n\\t}\\n\\n\\tconst freeRam = ns.getServerMaxRam(HOME) - ns.getServerUsedRam(HOME);\\n\\tconst threadRam = ns.getScriptRam(HACKSCRIPT);\\n\\n\\tconst usableRam = Math.floor((1.0 - RESERVERAM) * freeRam);\\n\\tconst threads = Math.floor(usableRam / threadRam);\\n\\n\\tif (threads === 0) {\\n\\t\\tns.print(`Insufficient RAM for hack threads`);\\n\\t\\tns.exit();\\n\\t}\\n\\tns.exec(HACKSCRIPT, HOME, threads, target, threads);\\n}\",\"filename\":\"/scripts/localHack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/localHack.js\",\"url\":\"blob:file:///2c2d3f4a-6390-4ff6-93b2-88704ab480f7\",\"moduleSequenceNumber\":9923}],\"dependents\":[],\"ramUsage\":5.1,\"server\":\"home\",\"moduleSequenceNumber\":9923,\"_hash\":\"408257f0255fa86e47f07f5935a1a94d266c7f26fed07dcfe9debf7864db79c3\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scriptKill\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const ATTRIBUTES = ['hack', 'str', 'def', 'dex', 'agi', 'cha'];\\nconst TASKS = [`Train Hacking`, `Ethical Hacking`, `Money Laundering`, `Cyberterrorism`];\\nconst TICK = 10 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n  ns.disableLog('sleep');\\n  ns.tail();\\n\\n  if (! ns.gang.inGang()) {\\n    if (! ns.gang.createGang(`NiteSec`)) { ns.exit(); }\\n  }\\n\\n  while (true) {\\n    recruitment(ns);\\n    ascension(ns);\\n    tasks(ns);\\n    await ns.sleep(TICK);\\n  }\\n}\\n\\nfunction recruitment(ns) {\\n  if (!canRecruit(ns)) { return false; }\\n  let name = getRecruitName();\\n  return (recruit(ns, name) && setTask(ns, name, `Train Hacking`));\\n}\\nfunction canRecruit(ns) { return ns.gang.canRecruitMember(); }\\nfunction getRecruitName() { return Math.random().toString(16).substring(2, 8); }\\nfunction recruit(ns, name) { return ns.gang.recruitMember(name); }\\nfunction setTask(ns, name, task) { return ns.gang.setMemberTask(name, task); }\\n\\n\\nfunction ascension(ns) {\\n  for (let member of getGangData(ns)) {\\n    let ascendResult = ns.gang.getAscensionResult(member.name);\\n    if (typeof ascendResult === 'undefined') { continue; }\\n\\n    let activeAttribute = getActiveAttribute(member, ascendResult);\\n    ns.print(`${member.name}.${activeAttribute.name}: ${activeAttribute.ascGain - ascendGainTarget(activeAttribute)}`);\\n    if (activeAttribute.ascGain > ascendGainTarget(activeAttribute)) {\\n      ns.gang.ascendMember(member.name);\\n      ns.toast(`Ascended ${member.name}`);\\n    }\\n  }\\n}\\nfunction getActiveAttribute(member, ascendResult) {\\n  let attrSnaps = [];\\n  for (let attribute of ATTRIBUTES) {\\n    let expString = `${attribute}_exp`;\\n    let baseMultString = `${attribute}_mult`;\\n    let ascMultString = `${attribute}_asc_mult`;\\n    attrSnaps.push(\\n      {\\n        'name': attribute,\\n        'rank': member[attribute],\\n        'xp': member[expString],\\n        'baseMult': member[baseMultString],\\n        'ascMult': member[ascMultString],\\n        'ascResult': ascendResult[attribute],\\n        'ascGain': member[ascMultString] * (ascendResult[attribute] - 1),\\n      }\\n    );\\n  }\\n  return attrSnaps.sort((a, b) => b.xp - a.xp)[0];\\n}\\nfunction ascendGainTarget(attributeData) { return (Math.log10(attributeData.ascMult) > 1) ? Math.log10(attributeData.ascMult) : 1; }\\n\\nfunction tasks(ns) {\\n  let gangData = getGangData(ns);\\n  let trainees = gangData.filter(hasLowAscensionMultiplier);\\n  trainees.forEach((trainee) => { setTask(ns, trainee.name, `Train Hacking`) });\\n  let workers = gangData.filter(hasHighAscensionMultiplier).sort((a, b) => b.hack_asc_mult - a.hack_asc_mult);\\n  let topWorker = workers.shift();\\n  setTask(ns, topWorker.name, `Ethical Hacking`);\\n  let aproposWorkerTask = getWorkerTask(ns);\\n  workers.forEach((worker) => {\\n    setTask(ns, worker.name, aproposWorkerTask);\\n  });\\n}\\n\\nfunction getWorkerTask(ns) {\\n  if (ns.getFactionRep(`NiteSec`) < 2500000) { return `Cyberterrorism`; }\\n  return `Money Laundering`;\\n}\\n\\nfunction getGangData(ns) {\\n  let data = [];\\n  ns.gang.getMemberNames().forEach((name) => {\\n    data.push(ns.gang.getMemberInformation(name));\\n  });\\n  return data;\\n}\\nfunction hasLowAscensionMultiplier(element) { return element.hack_asc_mult < 100.0; }\\nfunction hasHighAscensionMultiplier(element) { return element.hack_asc_mult >= 100.0; }\",\"filename\":\"/bin/gangManager.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/scripts/gangManager.js\",\"url\":\"blob:file:///e45f43df-7303-422c-9738-23ee4cebac6f\",\"moduleSequenceNumber\":25595}],\"dependents\":[],\"ramUsage\":18.6,\"server\":\"home\",\"moduleSequenceNumber\":9767,\"_hash\":\"7198fd8c5c6dbc14ee78acd8ae241fbdeaa030332b9c07dec2bbc3647615c1e5\",\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.createGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"singularity.getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const TICK = 10 * 1000; // seconds in millis\\nconst BUYTHRESH = 0.55; // 55% or better growth forecast to buy\\nconst LOSSTHRESH = -0.0123; // 5% loss triggers sell\\nconst ROITHRESH = 0.035; // 25% or better profit\\nconst CASHFLOOR = 10e6; // have 10.000m to do other stuff with\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// ensure access to necessary APIs\\n\\tif (!haveAPIAccess(ns)) {\\n\\t\\tns.tprint(`Not haz API accesses`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tawait stockManager(ns);\\n}\\n\\nfunction haveAPIAccess(ns) { return (haveTIXAccess(ns) && have4SDataAccess(ns)); }\\nfunction haveTIXAccess(ns) { return ns.stock.getSymbols; }\\nfunction have4SDataAccess(ns) { return ns.stock.getForecast; }\\n\\nasync function stockManager(ns, funding) {\\n\\tconst symbols = ns.stock.getSymbols();\\n\\twhile (true) {\\n\\t\\t// dump everything\\n\\t\\tlet marketData = getMarketData(ns, symbols);\\n\\t\\t//ns.print(marketData.sort((a, b) => b.earnings - a.earnings));\\n\\n\\t\\t// look at what else is available for purchase\\n\\t\\tlet noHoldings = marketData.filter(haveNoShares);\\n\\t\\t//ns.print(noHoldings.filter(haveNegativeForecast).sort((a, b) => b.forecast - a.forecast));\\n\\t\\tlet projectedWinners = noHoldings.filter(havePositiveForecast);\\n\\t\\tbuyStocks(ns, projectedWinners);\\n\\n\\t\\t// look at what we have for wheat, chaff\\n\\t\\tlet myHoldings = marketData.filter(haveShares);\\n\\t\\t//ns.print(myHoldings.sort((a, b) => b.earnings - a.earnings));\\n\\t\\t//let projectedLosers = myHoldings.filter(haveNegativeForecast);\\n\\t\\t//sellStocks(ns, projectedLosers);\\n\\t\\t//let actualLosers = myHoldings.filter(haveSufficientLosses);\\n\\t\\t//sellStocks(ns, actualLosers);\\n\\t\\tlet breadWinners = myHoldings.filter(haveSufficientROI);\\n\\t\\t//ns.print(breadWinners);\\n\\t\\tsellStocks(ns, breadWinners);\\n\\n\\t\\t/*\\n\\t\\tns.tprintf(`\\\\n=========================== HOLDINGS ============================\\\\n`);\\n\\t\\tns.tprint(myHoldings);\\n\\t\\tns.tprint(`=========================== TO BUY ==========================`);\\n\\t\\tns.tprint(stuffToBuy);\\n\\t\\tns.tprint(`=========================== TO SELL ==========================`);\\n\\t\\tns.tprint(stuffToSell);\\n\\t\\t*/\\n\\n\\t\\tawait ns.sleep(TICK);\\n\\t}\\n}\\n\\nfunction sellStocks(ns, marketData) {\\n\\tfor (let symbolData of marketData) {\\n\\t\\tsellStock(ns, symbolData);\\n\\t}\\n}\\n\\nfunction sellStock(ns, symbolData) {\\n\\tlet symbol = symbolData.symbol;\\n\\tlet shares = symbolData.shares;\\n\\tns.stock.sell(symbol, shares);\\n}\\n\\nfunction buyStocks(ns, marketData) {\\n\\tfor (let symbolData of marketData) {\\n\\t\\tbuyStock(ns, symbolData);\\n\\t}\\n}\\n\\nfunction buyStock(ns, symbolData) {\\n\\tlet symbol = symbolData.symbol;\\n\\tlet availableFunds = myMoney(ns) - CASHFLOOR;\\n\\tif (availableFunds < 0) { return; }\\n\\tlet maxShares = ns.stock.getMaxShares(symbol);\\n\\tlet sharesAfforded = availableFunds / ns.stock.getPrice(symbol);\\n\\tlet sharesToBuy = sharesAfforded > 0.25 * maxShares ? 0.25 * maxShares : sharesAfforded;\\n\\tns.stock.buy(symbol, sharesToBuy);\\n}\\n\\nfunction haveNoShares(symbolData, symbolIndex, marketData) { return symbolData.shares < 1; }\\nfunction haveShares(symbolData, symbolIndex, marketData) { return symbolData.shares > 0; }\\nfunction havePositiveForecast(symbolData, symbolIndex, marketData) { return symbolData.forecast > BUYTHRESH; }\\nfunction haveNegativeForecast(symbolData, symbolIndex, marketData) { return symbolData.forecast < 0.45; }\\nfunction havePositiveGrowth(symbolData, symbolIndex, marketData) { return symbolData.earnings > 0; }\\nfunction haveSufficientROI(symbolData, symbolIndex, marketData) { return symbolData.earnings > ROITHRESH; }\\nfunction haveSufficientLosses(symbolData, symbolIndex, marketData) { return symbolData.earnings < LOSSTHRESH; }\\n\\nfunction getMarketData(ns, symbols) {\\n\\tlet marketData = [];\\n\\tfor (let symbol of symbols) { marketData.push(getSymbolData(ns, symbol)); }\\n\\treturn marketData;\\n}\\n\\nfunction getSymbolData(ns, symbol) {\\n\\tlet position = ns.stock.getPosition(symbol);\\n\\tlet shares = position[0];\\n\\tlet average = position[1];\\n\\tlet currentAverage = ns.stock.getPrice(symbol);\\n\\tlet earnings = (currentAverage - average) / average;\\n\\tlet forecast = ns.stock.getForecast(symbol);\\n\\tlet symbolData = {\\n\\t\\t'symbol': symbol,\\n\\t\\t'shares': shares,\\n\\t\\t'average': average,\\n\\t\\t'currentAverage': currentAverage,\\n\\t\\t'earnings': earnings,\\n\\t\\t'forecast': forecast,\\n\\t};\\n\\treturn symbolData;\\n}\\n\\nfunction myMoney(ns) {\\n\\treturn ns.getServerMoneyAvailable(`home`);\\n}\",\"filename\":\"/bin/stockManager.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/stockManager.js\",\"url\":\"blob:file:///813350fb-ba61-4a27-8a1e-3e788ea0883a\",\"moduleSequenceNumber\":122708}],\"dependents\":[],\"ramUsage\":17.2,\"server\":\"home\",\"moduleSequenceNumber\":9768,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const FACTIONS = [\\n\\t\\\"Illuminati\\\",\\n\\t\\\"Daedalus\\\",\\n\\t\\\"The Covenant\\\",\\n\\t\\\"ECorp\\\",\\n\\t\\\"MegaCorp\\\",\\n\\t\\\"Bachman & Associates\\\",\\n\\t\\\"Blade Industries\\\",\\n\\t\\\"NWO\\\",\\n\\t\\\"Clarke Incorporated\\\",\\n\\t\\\"OmniTek Incorporated\\\",\\n\\t\\\"Four Sigma\\\",\\n\\t\\\"KuaiGong International\\\",\\n\\t\\\"Fulcrum Secret Technologies\\\",\\n\\t\\\"BitRunners\\\",\\n\\t\\\"The Black Hand\\\",\\n\\t\\\"NiteSec\\\",\\n\\t\\\"Aevum\\\",\\n\\t\\\"Chongqing\\\",\\n\\t\\\"Ishima\\\",\\n\\t\\\"New Tokyo\\\",\\n\\t\\\"Sector-12\\\",\\n\\t\\\"Volhaven\\\",\\n\\t\\\"Speakers for the Dead\\\",\\n\\t\\\"The Dark Army\\\",\\n\\t\\\"The Syndicate\\\",\\n\\t\\\"Silhouette\\\",\\n\\t\\\"Tetrads\\\",\\n\\t\\\"Slum Snakes\\\",\\n\\t\\\"Netburners\\\",\\n\\t\\\"Tian Di Hui\\\",\\n\\t\\\"CyberSec\\\",\\n\\t\\\"Bladeburners\\\",\\n\\t\\\"Church of the Machine God\\\",\\n];\\nconst WORK = `Hacking Contracts`;\\nconst TICK = 60 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\n\\twhile(NNNN) {\\n\\t\\tjoinFactions(ns);\\n\\t\\tlet\\n\\t}\\n\\tfor (let faction of FACTIONS) {\\n\\t\\tlet maxRep = getAugmentationData(ns, faction).sort((a, b) => b.rep - a.rep)[0].rep;\\n\\t\\twhile (ns.getFactionRep(faction) < maxRep) {\\n\\t\\t\\tns.workForFaction(faction, WORK, false);\\n\\t\\t\\tawait ns.sleep(TICK);\\n\\t\\t}\\n\\t\\tns.stopAction();\\n\\t\\tns.tprint(`Sufficient Rep: ${faction}`);\\n\\t}\\n}\\n\\nconst function joinFactions(ns) {\\n\\tlet factions = ns.checkFactionInvitations();\\n\\tfactions.forEach(faction => ns.joinFaction(faction));\\n\\treturn factions;\\n}\\n\\nconst function getAugmentationData(ns, faction) {\\n\\tlet augmentationData = [];\\n\\tfor (let augmentation of ns.getAugmentationsFromFaction(faction)) {\\n\\t\\taugmentationData.push({\\n\\t\\t\\t'name': augmentation,\\n\\t\\t\\t'price': ns.getAugmentationPrice(augmentation),\\n\\t\\t\\t'rep': ns.getAugmentationRepReq(augmentation),\\n\\t\\t});\\n\\t}\\n\\treturn augmentationData;\\n}\\n\\nconst function getFactionData(ns, faction) {\\n\\n}\\n\\nconst function getAllFactions() { return FACTIONS; }\",\"filename\":\"/wip/facMan.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/scripts/factionManager.js\",\"url\":\"blob:file:///b4f8a4e8-83c9-4659-aa57-3c8adc265258\",\"moduleSequenceNumber\":2272}],\"dependents\":[],\"ramUsage\":241.6,\"server\":\"home\",\"moduleSequenceNumber\":9769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":16},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":48},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":16},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":80},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":40},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":40}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"let config = {\\n    folder: 'scripts',\\n    rootUrl: 'https://raw.githubusercontent.com/FlyingJ/bitburner-scripts/main/',\\n    serverPrefix: 'j4ys3rv',\\n};\\n/*\\n* This will import all files listed in importFiles.\\n*/\\nexport async function main(ns) {\\n    let filesImported = await importFiles(ns);\\n    ns.tprint('='.repeat(20));\\n    if (filesImported) {\\n        ns.tprint('Hey! Thank you for downloading the BitBurner Scripts.');\\n        ns.tprint(`You've installed these in the ${getFolder()} directory.`);\\n        ns.tprint(\\n            `A good place to start is running \\\\`run /${getFolder()}/hax.js\\\\``\\n        );\\n    } else {\\n        ns.tprint(\\n            'You had some issues downloading files, please reach out to the repo maintainer or check your config.'\\n        );\\n    }\\n}\\n\\nasync function importFiles(ns) {\\n    let files = [\\n        'autoHack.js',\\n        'autoRemoteHack.js',\\n        'dashboard.js',\\n        'gangManager.js',\\n        'hack.js',\\n        'hacknetManager.js',\\n        'hacknetNodeManager.js',\\n        'hacknetUpgradeManager.js',\\n        'hax.js',\\n        'localHack.js',\\n        'purchaseServers.js',\\n        'remoteHack.js',\\n        'serverStatus.js',\\n        'stockManager.js',\\n    ];\\n    let filesImported = true;\\n    for (let file of files) {\\n        let remoteFileName = `${getRootUrl()}scripts/${file}`;\\n        let result = await ns.wget(remoteFileName, `/${getFolder()}/${file}`);\\n        filesImported = filesImported && result;\\n        ns.tprint(`File: ${file}: ${result ? '✔️' : '❌'}`);\\n    }\\n    return filesImported;\\n}\\n\\nexport function getFolder() { return config.folder; }\\nexport function getRootUrl() { return config.rootUrl; }\\nexport function getServerPrefix() { return config.serverPrefix; }\\n\\nexport function getHackScript() { return `/${getFolder()}/hack.js`; }\\nexport function getHacknetUpgradeScript() { return `/${getFolder()}/deployUpgrades.js`; }\",\"filename\":\"import.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"import.js\",\"url\":\"blob:file:///3e023008-1d8c-492e-8d1d-b47b189d524e\",\"moduleSequenceNumber\":80570}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const TICK = 1250;\\nconst MAXWAIT = 3600 * 12; // 12 hours in seconds\\nconst BASEMAXNODEEARNINGS = 9171;\\nconst PARTS = ['Level', 'Ram', 'Core', 'Cache'];\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog('getServerMoneyAvailable');\\n\\tns.disableLog('sleep');\\n\\n\\tawait deployHacknet(ns);\\n\\n\\tns.print('Finished deploying hacknet');\\n}\\n\\n\\nasync function deployHacknet(ns) {\\n\\tlet options = getAllOptions(ns);\\n\\tlet option = leastCostlyOption(options);\\n\\tdo {\\n\\t\\tawait purchase(ns, option);\\n\\t\\toptions = getAllOptions(ns);\\n\\t\\toption = leastCostlyOption(options);\\n\\t} while (purchasesAvailable(option));\\n}\\n\\nfunction getAllOptions(ns) {\\n\\tlet options = [];\\n\\t// get upgrades\\n\\tfor (let nodeIndex = 0; nodeIndex < ns.hacknet.numNodes(); nodeIndex += 1) {\\n\\t\\toptions = options.concat(getPerNodeOptions(ns, nodeIndex));\\n\\t}\\n\\t// get next node\\n\\toptions = options.concat(\\n\\t\\t{\\n\\t\\t\\t'nodeIndex': undefined,\\n\\t\\t\\t'part': 'Node',\\n\\t\\t\\t'cost': cost(ns, undefined, 'Node')\\n\\t\\t});\\n\\treturn options;\\n}\\nfunction getPerNodeOptions(ns, nodeIndex) {\\n\\tlet options = [];\\n\\tfor (let part of PARTS) {\\n\\t\\tlet option = {\\n\\t\\t\\t'nodeIndex': nodeIndex,\\n\\t\\t\\t'part': part,\\n\\t\\t\\t'cost': cost(ns, nodeIndex, part)\\n\\t\\t};\\n\\t\\toptions.push(option);\\n\\t}\\n\\treturn options;\\n}\\nfunction cost(ns, nodeIndex, part) {\\n\\tif (part === 'Node') {\\n\\t\\treturn getNodeCost(ns);\\n\\t}\\n\\tlet costFunction = `get${part}UpgradeCost`;\\n\\treturn ns.hacknet[costFunction](nodeIndex, 1);\\n}\\nfunction getNodeCost(ns) {\\n\\t// make sure not to buy more nodes when unable to recoup the expense\\n\\t// in a reasonable amount of time\\n\\t//let cost = ns.hacknet.getPurchaseNodeCost();\\n\\t//const maxEarnings = BASEMAXNODEEARNINGS * hacknetMultProd(ns);\\n\\t//if (canRecoup(ns, cost, maxEarnings)) { return cost; }\\n\\treturn (ns.hacknet.numNodes() <= ns.hacknet.maxNumNodes()) ? ns.hacknet.getPurchaseNodeCost() : Infinity;\\n}\\n//function hacknetMultProd(ns) { return ns.getHacknetMultipliers().production; }\\n//function canRecoup(ns, cost, maxEarnings) { return breakEvenTime(cost, maxEarnings) < MAXWAIT ? true : false; }\\n//function breakEvenTime(cost, earnings) { return cost / earnings; }\\n\\nfunction leastCostlyOption(options) { return options.sort((a, b) => a.cost - b.cost)[0]; }\\nfunction purchasesAvailable(option) { return isFinite(option.cost); }\\n\\nasync function purchase(ns, option) {\\n\\tlet index = option.nodeIndex;\\n\\tlet part = option.part;\\n\\tlet cost = option.cost;\\n\\n\\twhile (cost > myMoney(ns)) { await ns.sleep(TICK); }\\n\\n\\tif (part === 'Node') {\\n\\t\\tns.print(`Purchase hacknet-node-${ns.hacknet.purchaseNode()}`);\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlet upgradeFunction = `upgrade${part}`;\\n\\tns.print(`Purchase ${part} for hacknet-node-${index} at cost of $${cost}`);\\n\\treturn ns.hacknet[upgradeFunction](index, 1);\\n}\\n\\nfunction myMoney(ns) { return ns.getServerMoneyAvailable('home'); }\",\"filename\":\"/bin/hacknetBuilder.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/hacknetBuilder.js\",\"url\":\"blob:file:///457d4f1c-7c18-4b40-af46-4749bc6259b2\",\"moduleSequenceNumber\":9843}],\"dependents\":[],\"ramUsage\":5.7,\"server\":\"home\",\"moduleSequenceNumber\":9843,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\t// show classname to use\\n\\t\\tlet className = boxes.find(x => getProps(x)?.player).className;\\n\\t\\tns.tprintf(`INFO className: ${className}`);\\n\\n\\t\\t// get some bonuses\\n\\t\\t//props.player.money = props.player.money * 1111;\\n\\t\\t//props.player.hacking_exp = props.player.hacking_exp * 1111;\\n\\n\\t\\t// open the dev menu\\n\\t\\tprops.router.toDevMenu();\\n\\n\\t\\t//props.player.karma = props.player.karma * 1000;\\n\\t}\\n}\",\"filename\":\"/sbin/openDevMenu.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"dev.js\",\"url\":\"blob:file:///78b873b9-9475-4c3a-8c99-ce88c2f630ff\",\"moduleSequenceNumber\":497}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t//let element = eval(`document`).querySelectorAll(`div[id='unclickable']`);\\n\\t//ns.tprint(Object.keys(element));\\n\\n\\tconst uc = document.getElementById(\\\"unclickable\\\");\\n\\n\\tlet evt = new MouseEvent(\\\"click\\\", {\\n\\t\\tbubbles: true,\\n\\t\\tcancelable: true,\\n\\t\\tview: window,\\n\\t});\\n\\n\\tuc.dispatchEvent(evt);\\n\\t/*\\n\\telements.forEach(element => {\\n\\t\\t\\telement.dispatchEvent(\\n\\t\\t\\tnew MouseEvent(`click`, {\\n\\t\\t\\t\\tview: window,\\n\\t\\t\\t\\tbubbles: true,\\n\\t\\t\\t\\tcancelable: true,\\n\\t\\t\\t\\tbuttons: 1,\\n\\t\\t\\t})\\n\\t\\t)\\n\\t}\\n\\t*/\\n}\",\"filename\":\"/sbin/unclickable.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/unclickable.js\",\"url\":\"blob:file:///4b4a521b-d163-43c1-82e4-a7e9a4a41abc\",\"moduleSequenceNumber\":236340}],\"dependents\":[],\"ramUsage\":51.6,\"server\":\"home\",\"moduleSequenceNumber\":9773,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"dom\",\"name\":\"document\",\"cost\":25},{\"type\":\"dom\",\"name\":\"window\",\"cost\":25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet flags = ns.flags([\\n\\t\\t['amount', 1e100],\\n\\t])\\n\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\tprops['player']['money'] += flags.amount;\\n\\t\\tif (props['player']['corporation']) {\\n\\t\\t\\tprops['player']['corporation']['funds'] += flags.amount;\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"/sbin/bank.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/sbin/bank.js\",\"url\":\"blob:file:///5c06147b-0c63-4363-aa31-1c356c97876b\",\"moduleSequenceNumber\":9840}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9840,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const stuff = 100;\\nexport const things = [\\n\\t'thing1',\\n\\t'thing2',\\n];\",\"filename\":\"/lib/constants.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9775,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export const UNLOCKS = [\\n  `Export`,\\n  `Smart Supply`,\\n  `Market Research - Demand`,\\n  `Market Data - Competition`,\\n  `VeChain`,\\n  `Shady Accounting`,\\n  `Government Partnership`,\\n  `Warehouse API`,\\n  `Office API`,\\n];\\n\\nexport const UPGRADES = [\\n  `Smart Factories`,\\n  `Wilson Analytics`,\\n  `Neural Accelerators`,\\n  `Project Insight`,\\n  `Smart Storage`,\\n  `Nuoptimal Nootropic Injector Implants`,\\n  `FocusWires`,\\n  `DreamSense`,\\n  `Speech Processor Implants`,\\n  `ABC SalesBots`,\\n];\\n\\nexport const INDUSTRIES = [\\n  `Agriculture`,\\n  `Chemical`,\\n  `Computer`,\\n  `Energy`,\\n  `Fishing`,\\n  `Food`,\\n  `Healthcare`,\\n  `Mining`,\\n  `Pharmaceutical`,\\n  `RealEstate`,\\n  `Robotics`,\\n  `Software`,\\n  `Tobacco`,\\n  `utilities`,\\n];\\n\\nexport const CITIES = [\\n  `Aevum`,\\n  `Chongqing`,\\n  `New Tokyo`,\\n  `Ishima`,\\n  `Sector-12`,\\n  `Volhaven`,\\n];\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n  class Upgrade {\\n    constructor(name) { this.name = name; }\\n    buy() { return ns.corporation.levelUpgrade(this.name); }\\n    cost() { return ns.corporation.getUpgradeLevelCost(this.name); }\\n  }\\n  \\n  class AllUpgrades {\\n    constructor() {\\n      this.upgrades = [];\\n      this.MAXSPEND = 1e75;\\n      UPGRADES.forEach((name) => {\\n        this.upgrades.push(new Upgrade(name));\\n      });\\n    }\\n    buy() {}\\n  }\\n\\n  class Unlock {\\n    constructor(name) { this.name = name; }\\n    buy() { return ns.corporation.unlockUpgrade(this.name); }\\n    cost() { return ns.corporation.getUnlockUpgradeCost(this.name); }\\n    purchased() { return ns.corporation.hasUnlockUpgrade(this.name); }\\n  }\\n\\n  class AllUnlocks {\\n    constructor() {\\n      this.unlocks = [];\\n      UNLOCKS.forEach( (name) => {\\n        this.unlocks.push(new Unlock(name));\\n      });\\n    }\\n    buy() {}\\n  }\\n  await manageCorporation(ns);\\n}\\n\\nasync function manageCorporation(ns) {\\n  UNLOCKS.forEach((unlock) => {\\n    if (!haveUnlock(ns, unlock) && ns.getPlayer()['money'] > ns.corporation.getUnlockUpgradeCost(unlock)) {\\n      getUnlock(ns, unlock);\\n    }\\n  });\\n  UPGRADES.forEach((upgrade) => {\\n    while (ns.corporation.getUpgradeLevelCost(upgrade) < MAXSPEND) { ns.corporation.levelUpgrade(upgrade); }\\n  });\\n}\\n\\nasync function haveUnlock(ns, unlock) { return ns.corporation.hasUnlockUpgrade(unlock); }\\nasync function getUnlock(ns, unlock) {\\n  // void functions are so fun with regard to result checking\\n  ns.corporation.unlockUpgrade(unlock);\\n  // return something useful, e.g., whether the purchase succeeded\\n  return haveUnlock(ns, unlock);\\n}\",\"filename\":\"/wip/corpMan.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corporationManager.js\",\"url\":\"blob:file:///7ba09e7f-570e-44ff-b7d6-433160ac0c12\",\"moduleSequenceNumber\":245750}],\"dependents\":[],\"ramUsage\":1024.5,\"server\":\"home\",\"moduleSequenceNumber\":9776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { getFolder, getServerPrefix } from 'import.js';\\n\\nconst TICK = 3 * 1000;\\n\\nlet maxServers;\\nlet servers;\\n\\n/*\\n * Purchases the best server available with the\\n * user's current money. If the server limit is\\n * reached, replaces the worst server. Repeatable.\\n */\\nexport async function main(ns) {\\n    class Server {\\n        constructor() {\\n            // NNNN\\n        }\\n    }\\n    class AllServers {\\n        constructor() {\\n            this.hostnamePrefix = getServerPrefix();\\n            this.servers = [];\\n        }\\n\\n    }\\n    // Default Values\\n    maxServers = ns.getPurchasedServerLimit();\\n    servers = ns.getPurchasedServers(true);\\n    serverInfo(ns);\\n    await buyServers(ns);\\n}\\n\\nfunction serverInfo(ns) {\\n    ns.tprint(`You have ${servers.length}/${maxServers} servers`);\\n    Object.entries(groupServers(ns)).map((ramServers) => {\\n        ns.tprint(`${ramServers[0]}GB: ${ramServers[1]}`);\\n    });\\n}\\n\\nfunction groupServers(ns) {\\n    let groupedServers = {};\\n    servers.forEach((server) => {\\n        let ram = ns.getServerRam(server)[0];\\n        groupedServers[ram] = groupedServers[ram] || [];\\n        groupedServers[ram].push(server);\\n    });\\n    return groupedServers;\\n}\\n\\nasync function buyServers(ns) {\\n    let ram = ns.getPurchasedServerMaxRam();\\n    let myMoney = ns.getServerMoneyAvailable('home');\\n    let cost = ns.getPurchasedServerCost(ram);\\n    let belowServerLimit = true;\\n    while (belowServerLimit) {\\n        while (cost > myMoney) { ns.sleep(TICK); }\\n        belowServerLimit = buyServer(ns, ram);\\n    }\\n}\\n\\nfunction buyServer(ns, ram) {\\n    if (servers.length == maxServers) {\\n        let success = removeWeakestServer(ns, ram);\\n        if (!success) { return false; }\\n    }\\n    let server = ns.purchaseServer(`${getServerPrefix()}-${ram}GB`, ram);\\n    servers.push(server);\\n    ns.tprint(`Purchased ${server}: ${ram}GB`);\\n    return true;\\n}\\n\\nfunction removeWeakestServer(ns, newRam) {\\n    let groupedServers = groupServers(ns);\\n    let min = Math.min(...Object.keys(groupedServers));\\n    if (min >= newRam) {\\n        ns.tprint(`Your smallest server has ${min}GB RAM and you wanted to purchase ${newRam}GB server`);\\n        return false;\\n    }\\n    let smallest_server = groupedServers[min][0];\\n    ns.killall(smallest_server);\\n    let result = ns.deleteServer(smallest_server);\\n    servers = ns.getPurchasedServers(true);\\n    return true;\\n}\\n\\n\\n// ================================================================================================= //\\n// ================================================================================================= //\\n// ================================================================================================= //\\n// ================================================================================================= //\\n// ================================================================================================= //\\nlet maxValueServers;\\nlet serverValue = 0;\\n\\n/* Identify servers worth more than $10 Billion,\\n * deploy the hack script and attack those servers\\n * using all purchased servers.\\n */\\nexport async function main(ns) {\\n    maxValueServers = {\\n        zero: [],\\n        million: [],\\n        billion: [],\\n        trillion: []\\n    };\\n    findServer(ns, 'home', 'home', checkValue);\\n    ns.run(`/${getFolder()}/remoteHack.js`, 1, highest(ns).join(','));\\n}\\n\\nfunction findServer(ns, startServer, targetServer, func) {\\n    let servers = ns.scan(targetServer, true).filter((server) => server !== startServer && !server.includes(getServerPrefix));\\n    if (!ns.hasRootAccess(targetServer)) { return false; }\\n    servers.forEach((server) => {\\n        func.call(this, ns, server);\\n        if (ns.hasRootAccess(server)) {\\n            findServer(ns, targetServer, server, func);\\n        }\\n    });\\n}\\n\\nfunction checkValue(ns, server) {\\n    if (!ns.hasRootAccess(server)) {\\n        return;\\n    }\\n    let serverMoney = ns.getServerMaxMoney(server);\\n    if (serverMoney > 1e12) {\\n        maxValueServers.trillion.push(server);\\n    } else if (serverMoney > 1e9) {\\n        maxValueServers.billion.push(server);\\n    } else if (serverMoney > 0) {\\n        maxValueServers.million.push(server);\\n    } else {\\n        maxValueServers.zero.push(server);\\n    }\\n}\\n\\nfunction highest(ns) {\\n    if (maxValueServers.trillion.length > 0) {\\n        return maxValueServers.trillion;\\n    }\\n    if (maxValueServers.billion.length > 0) {\\n        return maxValueServers.billion;\\n    }\\n    if (maxValueServers.million.length > 0) {\\n        return maxValueServers.million;\\n    }\\n}\\n\\n\\n\\n\\n\\n\\ngetPurchasedServerCost(ram)\\tGet cost of purchasing a server.\\ngetPurchasedServerLimit()\\tReturns the maximum number of servers you can purchase.\\ngetPurchasedServerMaxRam()\\tReturns the maximum RAM that a purchased server can have.\\ngetPurchasedServers()\\tReturns an array with the hostnames of all of the servers you have purchased.\\n\\ndeleteServer(host)\\tDelete a purchased server.\\n\\nexec(script, host, numThreads, args)\\tStart another script on any server.\\n\\ngetScriptRam(script, host)\\tGet the ram cost of a script.\\ngetServer(host)\\tReturns a server object for the given server. Defaults to the running script's server if host is not specified.\",\"filename\":\"/wip/farmBuilder.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.4,\"server\":\"home\",\"moduleSequenceNumber\":9777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\t// show classname to use\\n\\t\\tlet className = boxes.find(x => getProps(x)?.player).className;\\n\\t\\tns.tprintf(`INFO className: ${className}`);\\n\\n\\t\\t// get some bonuses\\n\\t\\t//props.player.money = props.player.money * 1111;\\n\\t\\t//props.player.hacking_exp = props.player.hacking_exp * 1111;\\n\\n\\t\\t// open the dev menu\\n\\t\\t//props.router.toDevMenu();\\n\\n\\t\\t//props.player.karma = props.player.karma * 1000;\\n\\t}\\n}\",\"filename\":\"/sbin/findProperties.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/findProperties.js\",\"url\":\"blob:file:///9aaebec9-8b70-4845-9eaa-c3c454ecfcf1\",\"moduleSequenceNumber\":453357}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst TICK = 10 * 1000;    // sleep millis\\n\\n\\tclass Program {\\n\\t\\tconstructor(name) { this.name = name; }\\n\\t\\tbuy() { return this.purchased() ? this.purchased() : ns.purchaseProgram(this.name); }\\n\\t\\tcost() { return ns.getDarkwebProgramCost(this.name); }\\n\\t\\tpurchased() { return (this.cost() === 0) ? true : false; }\\n\\t}\\n\\n\\tclass Tor {\\n\\t\\tconstructor() { this.name = 'tor'; }\\n\\t\\tbuy() { return ns.purchaseTor(); }\\n\\t}\\n\\n\\tclass AllPrograms {\\n\\t\\tconstructor() {\\n\\t\\t\\tthis.programs = [];\\n\\t\\t\\tfor (let name of ns.getDarkwebPrograms()) { this.programs.push(new Program(name)); }\\n\\t\\t}\\n\\t\\tasync buy() {\\n\\t\\t\\tfor (let program of this.programs.sort((a, b) => a.cost() - b.cost())) {\\n\\t\\t\\t\\twhile (!program.buy()) { await ns.sleep(TICK); }\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tns.disableLog('sleep');\\n\\tns.clearLog();\\n\\n\\tlet tor = new Tor();\\n\\twhile (!tor.buy()) { await ns.sleep(TICK); }\\n\\n\\tlet programs = new AllPrograms();\\n\\tawait programs.buy();\\n}\",\"filename\":\"/bin/homeTor.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/homeTor.js\",\"url\":\"blob:file:///9d75c2a4-f51a-455e-bdb2-2657d28e0be8\",\"moduleSequenceNumber\":9839}],\"dependents\":[],\"ramUsage\":9.1,\"server\":\"home\",\"moduleSequenceNumber\":9839,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"singularity.getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"singularity.getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"// poor man's api reference\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tfunction list(obj, indent) {\\n\\t\\tfor (const key in obj) {\\n\\t\\t\\tns.tprintf(\\\"%s\\\", \\\"    \\\".repeat(indent) + key + \\\": \\\" + typeof obj[key]);\\n\\t\\t\\tif (typeof obj[key] == \\\"object\\\")\\n\\t\\t\\t\\tlist(obj[key], indent + 1);\\n\\t\\t}\\n\\t}\\n\\n\\t//list(ns, 0);\\n\\tlet n = 1;\\n\\tlist(Object.getPrototypeOf(n), 0);\\n}\",\"filename\":\"/sbin/apiref.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/apiref.js\",\"url\":\"blob:file:///5af0be85-3a44-49a9-83de-f7422084a895\",\"moduleSequenceNumber\":1554426}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9780,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst TICK = 3 * 1000;    // sleep millis\\n\\tconst overclockLevelMax = 90;\\n\\n\\tclass BladeSkillLevel {\\n\\t\\tconstructor(name) {\\n\\t\\t\\tthis.name = name;\\n\\t\\t}\\n\\t\\tbuy() {\\n\\t\\t\\treturn ns.bladeburner.upgradeSkill(this.name);\\n\\t\\t}\\n\\t\\tcost() {\\n\\t\\t\\tif (this.name === 'Overclock' && this.level() >= overclockLevelMax) { return Infinity; }\\n\\t\\t\\treturn ns.bladeburner.getSkillUpgradeCost(this.name);\\n\\t\\t}\\n\\t\\tlevel() { return ns.bladeburner.getSkillLevel(this.name); }\\n\\t}\\n\\tclass AllBladeSkillLevels {\\n\\t\\tconstructor() {\\n\\t\\t\\tthis.levels = [];\\n\\t\\t\\tfor (let name of ns.bladeburner.getSkillNames()) { this.levels.push(new BladeSkillLevel(name)); }\\n\\t\\t}\\n\\t\\tasync buy() {\\n\\t\\t\\twhile (true) {\\n\\t\\t\\t\\tlet level = this.levels.sort((a, b) => a.cost() - b.cost())[0];\\n\\t\\t\\t\\twhile (!level.buy()) { await ns.sleep(TICK); }\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tns.disableLog('sleep');\\n\\n\\tlet bladeSkillLevels = new AllBladeSkillLevels();\\n\\tawait bladeSkillLevels.buy();\\n}\",\"filename\":\"/bin/bladeSkills.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/bladeSkills.js\",\"url\":\"blob:file:///3deb788a-a7bc-4f88-8c58-799e3f7fbe78\",\"moduleSequenceNumber\":10641}],\"dependents\":[],\"ramUsage\":16.5,\"server\":\"home\",\"moduleSequenceNumber\":10641,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"bladeburner.upgradeSkill\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getSkillUpgradeCost\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getSkillLevel\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getSkillNames\",\"cost\":0.4},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n\\tclass Action {\\n\\t\\tconstructor(type, name) {\\n\\t\\t\\tthis.type = type;\\n\\t\\t\\tthis.name = name;\\n\\t\\t}\\n\\t\\tchances() {\\n\\t\\t\\tlet chances = ns.bladeburner.getActionEstimatedSuccessChance(this.type, this.name);\\n\\t\\t\\tlet high = chances[1];\\n\\t\\t\\tlet low = chances[0];\\n\\t\\t\\tlet spread = high - low;\\n\\t\\t\\tlet mean = spread / 2;\\n\\t\\t\\treturn {\\n\\t\\t\\t\\t'low': low,\\n\\t\\t\\t\\t'high': high,\\n\\t\\t\\t\\t'mean': mean,\\n\\t\\t\\t\\t'spread': spread,\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\tlevel() { return ns.bladeburner.getActionCurrentLevel(this.type, this.name); }\\n\\t\\tremaining() { return ns.bladeburner.getActionCountRemaining(this.type, this.name); }\\n\\t\\trepGain() { return ns.bladeburner.getActionRepGain(this.type, this.name, this.level()); }\\n\\t\\tstart() { return ns.bladeburner.startAction(this.type, this.name); }\\n\\t\\tstop() { return ns.bladeburner.stopBladeburnerAction(); }\\n\\t\\ttime() { return ns.bladeburner.getActionTime(this.type, this.name); }\\n\\t}\\n\\n}\\n\\n/*\\n\\ngetBonusTime()\\tGet bladeburner bonus time.\\ngetCity()\\tGet current city.\\nswitchCity(name)\\tTravel to another city in bladeburner.\\ngetCityChaos(name)\\tGet chaos of a city.\\ngetCityCommunities(name)\\tGet number of communities in a city.\\ngetCityEstimatedPopulation(name)\\tGet estimated population in city.\\n\\ngetCurrentAction()\\tGet current action.\\n\\ngetActionAutolevel(type, name)\\tGet whether an action is set to autolevel.\\n\\ngetActionMaxLevel(type, name)\\tGet the maximum level of an action.\\ngetActionRepGain(type, name, level)\\tGet the reputation gain of an action.\\ngetActionTime(type, name)\\tGet the time to complete an action.\\n\\nsetActionAutolevel(type, name, autoLevel)\\tSet an action autolevel.\\nsetActionLevel(type, name, level)\\tSet the level of an action.\\n\\ngetGeneralActionNames()\\tList all general actions.\\ngetContractNames()\\tList all contracts.\\ngetOperationNames()\\tList all operations.\\ngetBlackOpNames()\\tList all black ops.\\ngetBlackOpRank(name)\\tGet black op required rank.\\ngetRank()\\tGet player bladeburner rank.\\n\\ngetStamina()\\tGet bladeburner stamina.\\ngetTeamSize(type, name)\\tGet team size.\\n\\nsetTeamSize(type, name, size)\\tSet team size.\\n\\njoinBladeburnerDivision()\\tJoin the bladeburner division.\\njoinBladeburnerFaction()\\tJoin the bladeburner faction.\\ngetSkillLevel(name)\\tGet skill level.\\ngetSkillNames()\\tList all skills.\\ngetSkillPoints()\\tGet bladeburner skill points.\\ngetSkillUpgradeCost(name)\\tGet cost to upgrade skill.\\nupgradeSkill(name)\\tUpgrade skill.\\n\\n*/\",\"filename\":\"/wip/bladeActionManager.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":27.6,\"server\":\"home\",\"moduleSequenceNumber\":9782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"bladeburner.getActionEstimatedSuccessChance\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getActionCurrentLevel\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getActionCountRemaining\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.getActionRepGain\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.startAction\",\"cost\":4},{\"type\":\"fn\",\"name\":\"bladeburner.stopBladeburnerAction\",\"cost\":2},{\"type\":\"fn\",\"name\":\"bladeburner.getActionTime\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"class Node {\\n\\tconstructor(id) {\\n\\t\\tthis.id = id;\\n\\t\\tthis.core = {\\n\\t\\t\\tbuy(n=1) { return ns.hacknet.upgradeCore(this.id, n); }\\n\\t\\t\\tcost(n=1) { return ns.hacknet.getCoreUpgradeCost(this.id, n); }\\n\\t\\t};\\n\\t\\tthis.level = {\\n\\t\\t\\tbuy(n=1) { return ns.hacknet.upgradeLevel(this.id, n); }\\n\\t\\t\\tcost(n=1) { return ns.hacknet.getLevelUpgradeCost(this.id, n); }\\n\\t\\t}\\n\\t\\tthis.ram = {\\n\\t\\t\\tbuy(n=1) { return ns.hacknet.upgradeRam(this.id, n); }\\n\\t\\t\\tcost(n=1) { return ns.hacknet.getRamUpgradeCost(this.id, n); }\\n\\t\\t}\\n\\t}\\n\\tstats() { return ns.hacknet.getNodeStats(this.id); }\\n}\\n\\nclass Hacknet {\\n\\tconstructor() {\\n\\t\\tthis.nodes = [];\\n\\t\\tthis.servers = [];\\n\\t}\\n\\tbuyNode() { this.nodes.push(new Node(ns.hacknet.purchaseNode())); }\\n\\tbuyNodes() { }\\n\\tbuyServer() { }\\n\\tbuyServers() { ns.print(`Hacknet server functionality coming soon!`); }\\n\\tnodeCost() { return ns.hacknet.getPurchaseNodeCost(); }\\n}\\n\\n/*\\ngetCacheUpgradeCost(index, n)\\tCalculate the cost of upgrading hacknet node cache.\\nupgradeCache(index, n)\\t        Upgrade the cache of a hacknet node.\\n\\ngetCoreUpgradeCost(index, n)\\tCalculate the cost of upgrading hacknet node cores.\\nupgradeCore(index, n)\\t        Upgrade the core of a hacknet node.\\n\\ngetLevelUpgradeCost(index, n)\\tCalculate the cost of upgrading hacknet node levels.\\nupgradeLevel(index, n)\\t        Upgrade the level of a hacknet node.\\n\\ngetRamUpgradeCost(index, n)\\t    Calculate the cost of upgrading hacknet node RAM.\\nupgradeRam(index, n)\\t        Upgrade the RAM of a hacknet node.\\n\\n\\ngetHashUpgradeLevel(upgName)\\tGet the level of a hash upgrade.\\nhashCapacity()\\t                Get the maximum number of hashes you can store.\\nhashCost(upgName)\\t            Get the cost of a hash upgrade.\\ngetHashUpgrades()\\t            Get the list of hash upgrades\\nnumHashes()\\t                    Get the total number of hashes stored.\\nspendHashes(upgName, upgTarget)\\tPurchase a hash upgrade.\\n\\ngetStudyMult()\\t                Get the multiplier to study.\\ngetTrainingMult()\\t            Get the multiplier to training.\\n\\nmaxNumNodes()\\t                Get the maximum number of hacknet nodes.\\nnumNodes()\\t                    Get the number of hacknet nodes you own.\\npurchaseNode()\\t                Purchase a new hacknet node.\\n\\nProperty        Type    Description\\ncache           number  Cache level. Only applicable for Hacknet Servers\\ncores           number  Node's number of cores\\nhashCapacity    number  Hash Capacity provided by this Node. Only applicable for Hacknet Servers\\nlevel           number  Node's level\\nname            string  Node's name\\nproduction      number  Node's production per second\\nram             number  Node's RAM (GB)\\nramUsed         number  Node's used RAM (GB)\\ntimeOnline      number  Number of seconds since Node has been purchased\\ntotalProduction number  Total number of money Node has produced\\n\\n*/\",\"filename\":\"/lib/hacknet.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"CSEC\",\"moduleSequenceNumber\":9783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile(true) {\\n\\t\\tns.tprint(ns.bladeburner.getCurrentAction());\\n\\t\\tawait ns.sleep(3000);\\n\\t}\\n}\",\"filename\":\"/tmp/blade.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/tmp/blade.js\",\"url\":\"blob:file:///784fcc2c-d7ab-423f-a90b-ff3d0a5c7f5f\",\"moduleSequenceNumber\":108077}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"bladeburner.getCurrentAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.gang.createGang('NiteSec');\\n}\",\"filename\":\"gang.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"gang.js\",\"url\":\"blob:file:///c439b3f3-0272-435d-8d20-59d228920654\",\"moduleSequenceNumber\":114022}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.createGang\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const args = ns.flags([[\\\"help\\\", false]]);\\n    let route = [];\\n    let server = args._[0];\\n    if (!server || args.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    recursiveScan(ns, '', 'home', server, route);\\n    for (const i in route) {\\n        await ns.sleep(500);\\n        const extra = i > 0 ? \\\"└ \\\" : \\\"\\\";\\n        ns.tprint(`${\\\" \\\".repeat(i)}${extra}${route[i]}`);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"/bin/traceroute.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/traceroute.js\",\"url\":\"blob:file:///a329c145-5e7a-4258-8eb9-d70c0bbd1d1c\",\"moduleSequenceNumber\":244830}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":9786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst data = ns.flags([\\n\\t\\t['faction', 'Sector-12'],\\n\\t\\t['work', 'Security Work'],\\n\\t\\t['focus', false],\\n\\t\\t['period', 10 * 1000],\\n\\t\\t['goal', 100],\\n\\t]);\\n\\tlet faction = data.faction;\\n\\tlet work = data.work;\\n\\tlet focus = data.focus;\\n\\tlet period = data.period;\\n\\tlet goal = data.goal;\\n\\n\\tfunction goalAchieved(skills, goal) {\\n\\t\\tlet player = ns.getPlayer();\\n\\t\\tlet achieved = true;\\n\\t\\tfor (let skill of skills) {\\n\\t\\t\\tachieved = achieved && player[skill] >= goal;\\n\\t\\t}\\n\\t\\treturn achieved;\\n\\t}\\n\\n\\tconst skillSets = {\\n\\t\\t'Hacking Contracts': ['hacking'],\\n\\t\\t'Field Work': ['hacking', 'strength', 'defense', 'dexterity', 'agility', 'charisma'],\\n\\t\\t'Security Work': ['hacking', 'strength', 'defense', 'dexterity', 'agility'],\\n\\t}\\n\\n\\tdo {\\n\\t\\tns.workForFaction(faction, work, focus);\\n\\t\\tawait ns.sleep(period);\\n\\t} while (!goalAchieved(skillSets[work], goal));\\n\\n\\tns.stopAction();\\n}\",\"filename\":\"/bin/hulk.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/hulk.js\",\"url\":\"blob:file:///82fb1445-7a33-4464-a124-b26731efc358\",\"moduleSequenceNumber\":378}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":9787,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"singularity.stopAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst SCRIPT = `/bin/hack.js`;\\n\\tconst scriptRam = ns.getScriptRam(SCRIPT);\\n\\tfor (let rank = 1; rank <= 20; rank++) {\\n\\t\\tlet ram = Math.pow(2, rank);\\n\\t\\tlet cost = ns.getPurchasedServerCost(ram);\\n\\t\\tlet threads = Math.floor(ram / scriptRam);\\n\\t\\tns.tprintf(\\\"%-3d -> %7d -> %15d -> %6d\\\", rank, ram, cost, threads);\\n\\t}\\n}\",\"filename\":\"length.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"length.js\",\"url\":\"blob:file:///b7a8ec4b-674f-4506-aa9a-9f5130302efe\",\"moduleSequenceNumber\":30480}],\"dependents\":[],\"ramUsage\":1.95,\"server\":\"home\",\"moduleSequenceNumber\":9788,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/bin/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"home\",\"moduleSequenceNumber\":9789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst n = 0;\\n\\tns.tprint(`${n} -> ${n.toExponential()}`);\\n\\tn.__proto__.toExponential = () => { return 'poop' };\\n\\tns.tprint(`Polluted ${n.__proto__}`);\\n\\tfor (let i = 0; i < 30; i++) {\\n\\t\\tns.tprint(`${n} -> ${n.toExponential()}`);\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"/sbin/number.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/number.js\",\"url\":\"blob:file:///fe28487c-0f1c-418d-984e-5e8e478537d0\",\"moduleSequenceNumber\":25731}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst n = 0;\\n\\tns.tprint(`${n} -> ${n.toExponential()}`);\\n}\",\"filename\":\"/sbin/number2.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/number2.js\",\"url\":\"blob:file:///3a4c63e6-3229-4f8e-adaa-083b3264bde1\",\"moduleSequenceNumber\":133}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.tprint(`timeOrigin -> ${performance.timeOrigin}`);\\n\\tns.tprint(`now -> ${performance.now()}`);\\n\\n\\tns.tprint(`${Object.getOwnPropertyNames(performance).sort()}`);\\n}\",\"filename\":\"/sbin/now.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/now.js\",\"url\":\"blob:file:///16b4230d-93c7-4696-b54c-951650d6adfe\",\"moduleSequenceNumber\":2438}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.singularity.installAugmentations('/bin/init.js');\\n}\",\"filename\":\"/bin/auger.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/auger.js\",\"url\":\"blob:file:///552d3488-bf97-4e41-aba6-e1184c56259f\",\"moduleSequenceNumber\":9755}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":9793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.installAugmentations\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const ATTRIBUTES = ['hack', 'str', 'def', 'dex', 'agi', 'cha'];\\nconst TASKS = [`Train Hacking`, `Ethical Hacking`, `Money Laundering`, `Cyberterrorism`];\\nconst TICK = 10 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n  ns.disableLog('sleep');\\n  ns.tail();\\n\\n  if (! ns.gang.inGang()) {\\n    if (! ns.gang.createGang(`NiteSec`)) { ns.exit(); }\\n  }\\n\\n  while (true) {\\n    recruitment(ns);\\n    ascension(ns);\\n    tasks(ns);\\n    await ns.sleep(TICK);\\n  }\\n}\\n\\nfunction recruitment(ns) {\\n  if (!canRecruit(ns)) { return false; }\\n  let name = getRecruitName();\\n  return (recruit(ns, name) && setTask(ns, name, `Train Hacking`));\\n}\\nfunction canRecruit(ns) { return ns.gang.canRecruitMember(); }\\nfunction getRecruitName() { return Math.random().toString(16).substring(2, 8); }\\nfunction recruit(ns, name) { return ns.gang.recruitMember(name); }\\nfunction setTask(ns, name, task) { return ns.gang.setMemberTask(name, task); }\\n\\n\\nfunction ascension(ns) {\\n  for (let member of getGangData(ns)) {\\n    let ascendResult = ns.gang.getAscensionResult(member.name);\\n    if (typeof ascendResult === 'undefined') { continue; }\\n\\n    let activeAttribute = getActiveAttribute(member, ascendResult);\\n    ns.print(`${member.name}.${activeAttribute.name}: ${activeAttribute.ascGain - ascendGainTarget(activeAttribute)}`);\\n    if (activeAttribute.ascGain > ascendGainTarget(activeAttribute)) {\\n      ns.gang.ascendMember(member.name);\\n      ns.toast(`Ascended ${member.name}`);\\n    }\\n  }\\n}\\nfunction getActiveAttribute(member, ascendResult) {\\n  let attrSnaps = [];\\n  for (let attribute of ATTRIBUTES) {\\n    let expString = `${attribute}_exp`;\\n    let baseMultString = `${attribute}_mult`;\\n    let ascMultString = `${attribute}_asc_mult`;\\n    attrSnaps.push(\\n      {\\n        'name': attribute,\\n        'rank': member[attribute],\\n        'xp': member[expString],\\n        'baseMult': member[baseMultString],\\n        'ascMult': member[ascMultString],\\n        'ascResult': ascendResult[attribute],\\n        'ascGain': member[ascMultString] * (ascendResult[attribute] - 1),\\n      }\\n    );\\n  }\\n  return attrSnaps.sort((a, b) => b.xp - a.xp)[0];\\n}\\nfunction ascendGainTarget(attributeData) { return (Math.log10(attributeData.ascMult) > 1) ? Math.log10(attributeData.ascMult) : 1; }\\n\\nfunction tasks(ns) {\\n  let gangData = getGangData(ns);\\n  let trainees = gangData.filter(hasLowAscensionMultiplier);\\n  trainees.forEach((trainee) => { setTask(ns, trainee.name, `Train Hacking`) });\\n  let workers = gangData.filter(hasHighAscensionMultiplier).sort((a, b) => b.hack_asc_mult - a.hack_asc_mult);\\n  let topWorker = workers.shift();\\n  setTask(ns, topWorker.name, `Ethical Hacking`);\\n  let aproposWorkerTask = getWorkerTask(ns);\\n  workers.forEach((worker) => {\\n    setTask(ns, worker.name, aproposWorkerTask);\\n  });\\n}\\n\\nfunction getWorkerTask(ns) {\\n  if (ns.getFactionRep(`NiteSec`) < 2500000) { return `Cyberterrorism`; }\\n  return `Money Laundering`;\\n}\\n\\nfunction getGangData(ns) {\\n  let data = [];\\n  ns.gang.getMemberNames().forEach((name) => {\\n    data.push(ns.gang.getMemberInformation(name));\\n  });\\n  return data;\\n}\\nfunction hasLowAscensionMultiplier(element) { return element.hack_asc_mult < 100.0; }\\nfunction hasHighAscensionMultiplier(element) { return element.hack_asc_mult >= 100.0; }\",\"filename\":\"/wip/gangMan.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":18.6,\"server\":\"home\",\"moduleSequenceNumber\":9794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.createGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"singularity.getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tdo {\\n\\t\\tawait ns.sleep(200);\\n\\t} while (ns.singularity.getUpgradeHomeRamCost() < ns.getPlayer().money && ns.singularity.upgradeHomeRam())\\n}\",\"filename\":\"/bin/homeRam.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/homeRam.js\",\"url\":\"blob:file:///35232d90-7ef2-4b7b-80b7-95ff5c26447c\",\"moduleSequenceNumber\":9841}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":9841,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.getUpgradeHomeRamCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.upgradeHomeRam\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\tns.tprintf(`Karma: ${props.player.karma}`);\\n\\t}\\n}\",\"filename\":\"/sbin/getKarma.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/getKarma.js\",\"url\":\"blob:file:///411c19fe-6c2f-4e84-a1aa-3002b43cf88b\",\"moduleSequenceNumber\":1751511}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9796,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tdo {\\n\\t\\tawait ns.sleep(200);\\n\\t} while (ns.singularity.getUpgradeHomeCoresCost() < ns.getPlayer().money && ns.singularity.upgradeHomeCores())\\n}\",\"filename\":\"/bin/homeCores.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/homeCores.js\",\"url\":\"blob:file:///408eb64e-f725-4389-b338-3fab94b846b8\",\"moduleSequenceNumber\":9842}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":9842,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.getUpgradeHomeCoresCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.upgradeHomeCores\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst TICK = 10 * 1000;\\n\\tdo {\\n\\t\\tns.singularity.checkFactionInvitations().forEach((faction) => {\\n\\t\\t\\tns.singularity.joinFaction(faction);\\n\\t\\t})\\n\\t\\tawait ns.sleep(TICK);\\n\\t} while (true);\\n}\",\"filename\":\"/bin/faqJoin.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/faqJoin.js\",\"url\":\"blob:file:///ec00e629-41ac-49dc-985c-38cba1d39565\",\"moduleSequenceNumber\":9838}],\"dependents\":[],\"ramUsage\":7.6,\"server\":\"home\",\"moduleSequenceNumber\":9838,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"singularity.joinFaction\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.corporation.createCorporation(`CO`, true);\\n\\tns.corporation.expandIndustry(`Agriculture`, `AG`);\\n\\tns.corporation.unlockUpgrade(`Smart Supply`);\\n\\tns.corporation.setSmartSupply(`AG`, `Sector-12`, true);\\n}\\n\\n/*\\nconst city = `New Tokyo`;\\nconst industry = `Agriculture`;\\nconst headCount = 33;\\nconst employeeDistribution = {\\n\\t'Operations': 20,\\n\\t'Engineer': 5,\\n\\t'Business': 2,\\n\\t'Management': 1,\\n\\t'Research & Development': 5,\\n};\\nconst warehouseSize = 56 * 1000;\\nconst realEstateBuyVolume = 10 * 1000 * 1000;\\n\\n/** @param {NS} ns **/\\n/*\\nexport async function main(ns) {\\n\\tlet myCorporation = ns.corporation.getCorporation();\\n\\tmyCorporation.divisions.forEach((division) => {\\n\\t\\tns.tprint(division);\\n\\t});\\n\\tmyCorporation.divisions\\n}\\n\\n{\\n\\t\\\"name\\\":\\\"CORP\\\",\\n\\t\\\"funds\\\":3.650707433269212e+23,\\n\\t\\\"revenue\\\":158621829.12606987,\\n\\t\\\"expenses\\\":31154768.700548045,\\n\\t\\\"public\\\":true,\\n\\t\\\"totalShares\\\":2060000000,\\n\\t\\\"numShares\\\":1801000000,\\n\\t\\\"shareSaleCooldown\\\":0,\\n\\t\\\"issuedShares\\\":0,\\n\\t\\\"sharePrice\\\":388767748203639.75,\\n\\t\\\"state\\\":\\\"START\\\",\\n\\t\\\"divisions\\\":[\\n\\t\\t{\\n\\t\\t\\t\\\"name\\\":\\\"AG\\\",\\n\\t\\t\\t\\\"type\\\":\\\"Agriculture\\\",\\n\\t\\t\\t\\\"awareness\\\":4563.843688677289,\\n\\t\\t\\t\\\"popularity\\\":1202.0806227144649,\\n\\t\\t\\t\\\"prodMult\\\":364.47082879886864,\\n\\t\\t\\t\\\"research\\\":9308.752559242022,\\n\\t\\t\\t\\\"lastCycleRevenue\\\":158621829.12606987,\\n\\t\\t\\t\\\"lastCycleExpenses\\\":31154768.700548045,\\n\\t\\t\\t\\\"thisCycleRevenue\\\":1585852176.325491,\\n\\t\\t\\t\\\"thisCycleExpenses\\\":311337116.3569713,\\n\\t\\t\\t\\\"upgrades\\\":[0,16],\\n\\t\\t\\t\\\"cities\\\":[\\\"Aevum\\\",\\\"Sector-12\\\"],\\n\\t\\t\\t\\\"products\\\":[]\\n\\t\\t}\\n\\t]\\n}\\n*/\",\"filename\":\"/bin/corpBuilder.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpBuilder.js\",\"url\":\"blob:file:///ad7ff3ae-36c7-47e1-9c03-ab2a0647bd76\",\"moduleSequenceNumber\":64312}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":9799,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst TICK = 0.2 * 1000;\\n\\n\\tconst division = \\\"AG\\\";\\n\\tconst city = \\\"Sector-12\\\";\\n\\n\\t// warehouse initialization\\n\\twhile (!ns.corporation.hasWarehouse(division, city)) {\\n\\t\\tawait ns.sleep(TICK);\\n\\t\\tns.corporation.purchaseWarehouse(division, city);\\n\\t}\\n\\n\\tif (!ns.corporation.getWarehouse(division, city)[\\\"smartSupplyEnabled\\\"]) { ns.corporation.setSmartSupply(division, city, true); }\\n\\n\\tns.corporation.setSmartSupplyUseLeftovers(division, city, 'Water', true);\\n\\tns.corporation.setSmartSupplyUseLeftovers(division, city, 'Energy', true);\\n\\n\\tns.corporation.sellMaterial(division, city, 'Plants', 'MAX', 'MP');\\n\\tns.corporation.sellMaterial(division, city, 'Food', 'MAX', 'MP');\\n\\n\\t// office initialization\\n\\tconst maxEmployees = 100;\\n\\t// set office size\\n\\twhile (ns.corporation.getOffice(division, city).size < maxEmployees) {\\n\\t\\tawait ns.sleep(TICK);\\n\\t\\tns.corporation.upgradeOfficeSize(division, city, 1);\\n\\t}\\n\\t// get employees\\n\\twhile (ns.corporation.getOffice(division, city).employees.length < maxEmployees) {\\n\\t\\tawait ns.sleep(TICK);\\n\\t\\tns.corporation.hireEmployee(division, city);\\n\\t}\\n\\n\\tawait ns.corporation.setAutoJobAssignment(division, city, `Operations`, 70);\\n\\tawait ns.corporation.setAutoJobAssignment(division, city, `Engineer`, 15);\\n\\tawait ns.corporation.setAutoJobAssignment(division, city, `Business`, 5);\\n\\tawait ns.corporation.setAutoJobAssignment(division, city, `Management`, 5);\\n\\tawait ns.corporation.setAutoJobAssignment(division, city, `Research & Development`, 5);\\n}\\n\\n/*\\nAllMaterials: [\\n\\t\\\"Water\\\",\\n\\t\\\"Energy\\\",\\n\\t\\\"Food\\\",\\n\\t\\\"Plants\\\",\\n\\t\\\"Metal\\\",\\n\\t\\\"Hardware\\\",\\n\\t\\\"Chemicals\\\",\\n\\t\\\"Drugs\\\",\\n\\t\\\"Robots\\\",\\n\\t\\\"AI Cores\\\",\\n\\t\\\"Real Estate\\\",\\n  ],\\n  */\",\"filename\":\"/bin/corpOfficeBuilder.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpOfficeBuilder.js\",\"url\":\"blob:file:///d612dd8e-6a63-4c5c-a13e-afcf93a6fa31\",\"moduleSequenceNumber\":64899}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":9800,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n  let maxSpend = 1e100;\\n  let maxLevel = 1500;\\n\\n  [\\n    `Smart Factories`,\\n    `Wilson Analytics`,\\n    `Neural Accelerators`,\\n    `Project Insight`,\\n    `Smart Storage`,\\n    `Nuoptimal Nootropic Injector Implants`,\\n    `FocusWires`,\\n    `DreamSense`,\\n    `Speech Processor Implants`,\\n    `ABC SalesBots`,\\n  ].forEach((upgrade) => {\\n    while (\\n      ns.corporation.getUpgradeLevelCost(upgrade) < maxSpend &&\\n      ns.corporation.getUpgradeLevel(upgrade) < maxLevel\\n    ) {\\n      ns.corporation.levelUpgrade(upgrade);\\n    }\\n  });\\n}\",\"filename\":\"/bin/corpUpgrades.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpUpgrades.js\",\"url\":\"blob:file:///330e71f6-d86e-4d85-90c1-b6bbaea6572d\",\"moduleSequenceNumber\":65058}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":9801,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\t[\\n\\t\\t`Export`,\\n\\t\\t`Smart Supply`,\\n\\t\\t`Market Research - Demand`,\\n\\t\\t`Market Data - Competition`,\\n\\t\\t`VeChain`,\\n\\t\\t`Shady Accounting`,\\n\\t\\t`Government Partnership`,\\n\\t\\t`Warehouse API`,\\n\\t\\t`Office API`,\\n\\t].forEach((upgrade) => {\\n\\t\\tif (!ns.corporation.hasUnlockUpgrade(upgrade)) { ns.corporation.unlockUpgrade(upgrade); }\\n\\t})\\n}\",\"filename\":\"/bin/corpUnlocks.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpUnlocks.js\",\"url\":\"blob:file:///bcd4389d-6504-4aec-aa52-0b821bd19c79\",\"moduleSequenceNumber\":64900}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":9802,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.tprint(`Have Stanek : ${ns.stanek.acceptGift()}`);\\n\\tns.tprint(``);\\n\\n\\t/*\\n\\tns.tprint(`Defined Fragments:`);\\n\\tns.stanek.fragmentDefinitions().forEach((fragment) => {\\n\\t\\tns.tprint(`  * ${JSON.stringify(fragment)}`);\\n\\t});\\n\\tns.tprint(``);\\n\\t*/\\n\\t\\n\\t// ns.tprint(`Active Fragments:`);\\n\\tdo {\\n\\t\\tfor (let fragment of ns.stanek.activeFragments()) {\\n\\t\\t\\tif (fragment.id < 100) {\\n\\t\\t\\t\\tns.print(`Charging fragment ${fragment.id}...`);\\n\\t\\t\\t\\tawait ns.stanek.chargeFragment(fragment.x, fragment.y);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} while (ns.getPlayer().money < 1e150);\\n}\\n\\n/*\\nacceptGift()\\t                Accept Stanek's Gift by joining the Church of the Machine God\\nactiveFragments()\\t            List of fragments in Stanek's Gift.\\ncanPlaceFragment(rootX, rootY, rotation, fragmentId)\\tCheck if fragment can be placed at specified location.\\nchargeFragment(rootX, rootY)\\tCharge a fragment, increasing its power.\\nclearGift()\\t                    Clear the board of all fragments.\\nfragmentDefinitions()\\t        List possible fragments.\\ngetFragment(rootX, rootY)\\t    Get placed fragment at location.\\ngiftHeight()\\t                Stanek's Gift height.\\ngiftWidth()\\t                    Stanek's Gift width.\\nplaceFragment(rootX, rootY, rotation, fragmentId)\\tPlace fragment on Stanek's Gift.\\nremoveFragment(rootX, rootY)\\tRemove fragment at location.\\n\\n/wip/stanek.js: Defined Fragments:\\n/wip/stanek.js:   * {\\\"id\\\":0,\\\"shape\\\":[[false,true,true],[true,true,false]],\\\"type\\\":6,\\\"power\\\":1,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":1,\\\"shape\\\":[[true,true,false],[false,true,true]],\\\"type\\\":6,\\\"power\\\":1,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":5,\\\"shape\\\":[[true,true,true],[false,true,false]],\\\"type\\\":3,\\\"power\\\":1.3,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":6,\\\"shape\\\":[[true,true,true,true]],\\\"type\\\":4,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":7,\\\"shape\\\":[[true,false,false],[true,true,true]],\\\"type\\\":5,\\\"power\\\":0.5,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":10,\\\"shape\\\":[[true,true,true],[false,true,false]],\\\"type\\\":7,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":12,\\\"shape\\\":[[false,false,true],[true,true,true]],\\\"type\\\":8,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":14,\\\"shape\\\":[[false,false,true],[true,true,true]],\\\"type\\\":9,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":16,\\\"shape\\\":[[false,true,true],[true,true,false]],\\\"type\\\":10,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":18,\\\"shape\\\":[[false,true,true],[true,true,false]],\\\"type\\\":11,\\\"power\\\":3,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":20,\\\"shape\\\":[[true,true,true,true]],\\\"type\\\":12,\\\"power\\\":1,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":21,\\\"shape\\\":[[true,true],[true,true]],\\\"type\\\":13,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":25,\\\"shape\\\":[[true,false,false],[true,true,true]],\\\"type\\\":14,\\\"power\\\":0.5,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":27,\\\"shape\\\":[[true,false,false],[true,true,true]],\\\"type\\\":15,\\\"power\\\":10,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":28,\\\"shape\\\":[[false,false,true],[true,true,true]],\\\"type\\\":16,\\\"power\\\":2,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":30,\\\"shape\\\":[[false,true,true],[true,true,false]],\\\"type\\\":17,\\\"power\\\":0.4,\\\"limit\\\":1}\\n/wip/stanek.js:   * {\\\"id\\\":100,\\\"shape\\\":[[false,true,true],[true,true,false],[false,true,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":101,\\\"shape\\\":[[true,true,true,true],[true,false,false,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":102,\\\"shape\\\":[[false,true,true,true],[true,true,false,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":103,\\\"shape\\\":[[true,true,true,false],[false,false,true,true]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":104,\\\"shape\\\":[[false,true,true],[false,true,false],[true,true,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":105,\\\"shape\\\":[[false,false,true],[false,true,true],[true,true,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":106,\\\"shape\\\":[[true,false,false],[true,true,true],[true,false,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n/wip/stanek.js:   * {\\\"id\\\":107,\\\"shape\\\":[[false,true,false],[true,true,true],[false,true,false]],\\\"type\\\":18,\\\"power\\\":1.1,\\\"limit\\\":99}\\n*/\",\"filename\":\"/wip/stanek.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/wip/stanek.js\",\"url\":\"blob:file:///292bc476-7a13-4562-b5f3-371f84726982\",\"moduleSequenceNumber\":23299}],\"dependents\":[],\"ramUsage\":9.5,\"server\":\"home\",\"moduleSequenceNumber\":9803,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stanek.acceptGift\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stanek.activeFragments\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stanek.chargeFragment\",\"cost\":0.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.bladeburner.joinBladeburnerDivision();\\n}\",\"filename\":\"/bin/bladeJoiner.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/bladeJoiner.js\",\"url\":\"blob:file:///b419b9ab-6dbc-4c4e-a50d-b823e85c649a\",\"moduleSequenceNumber\":188978}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"home\",\"moduleSequenceNumber\":9804,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"bladeburner.joinBladeburnerDivision\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet TICK = 200; // sleep millis\\n\\tdo {\\n\\t\\tns.hacknet.spendHashes(`Exchange for Bladeburner Rank`);\\n\\t\\tns.hacknet.spendHashes(`Exchange for Bladeburner SP`);\\n\\t\\tawait ns.sleep(TICK);\\n\\t} while (ns.getPlayer().money < 1e150);\\n}\",\"filename\":\"/bin/hashBlade.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/hashBlade.js\",\"url\":\"blob:file:///0da9e1dd-edb0-4c84-bd37-4a9520fafccb\",\"moduleSequenceNumber\":10640}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":10640,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\n\\tclass Upgrade {\\n\\n\\t\\tconstructor(name) {\\n\\t\\t\\tthis.name = name;\\n\\t\\t}\\n\\n\\t\\tbuy() { return ns.hacknet.spendHashes(this.name); }\\n\\t\\tcost() { return ns.hacknet.hashCost(this.name); }\\n\\t\\tlevel() { return ns.hacknet.getHashUpgradeLevel(this.name); }\\n\\n\\t\\tprint() { ns.tprintf(\\\"%36c | %3d | %20d\\\", this.name, this.level(), this.cost()); }\\n\\t}\\n\\n\\n\\tclass HashMart {\\n\\n\\t\\tconstructor() {\\n\\t\\t\\tthis.upgrades = [];\\n\\t\\t\\tns.hacknet.getHashUpgrades().forEach((upgradeName) => { this.upgrades.push(new Upgrade(upgradeName)); });\\n\\t\\t}\\n\\n\\t\\tstats() {\\n\\t\\t\\tns.tprint(\\\"=\\\" * 65);\\n\\t\\t\\tns.tprintf(\\\"%36c | %3d | %20d\\\", `Name`, `Level`, `Cost`);\\n\\t\\t\\tns.tprint(\\\"=\\\" * 65);\\n\\t\\t\\tthis.upgrades.forEach((upgrade) => { upgrade.print(); })\\n\\t\\t}\\n\\t}\\n\\n\\n\\tlet hashMart = new HashMart();\\n\\thashMart.stats();\\n\\n}\\n/*\\nexport async function main(ns) {\\n\\tlet TICK = 200; // sleep millis\\n\\n\\tlet updates = {\\n\\t\\tgrowth: [\\n\\t\\t\\t\\\"Improve Studying\\\",\\n\\t\\t\\t\\\"Improve Gym Training\\\",\\n\\t\\t\\t\\\"Exchange for Bladeburner Rank\\\",\\n\\t\\t\\t\\\"Exchange for Bladeburner SP\\\",\\n\\t\\t],\\n\\t\\tstatic: [\\n\\t\\t\\t\\\"Sell for Money\\\",\\n\\t\\t\\t\\\"Sell for Corporation Funds\\\"\\n\\t\\t],\\n\\t\\ttargeted: [\\n\\t\\t\\t\\\"Reduce Minimum Security\\\",\\n\\t\\t\\t\\\"Increase Maximum Money\\\",\\n\\t\\t],\\n\\t\\tmeh: [\\n\\t\\t\\t\\\"Exchange for Corporation Research\\\",\\n\\t\\t\\t\\\"Generate Coding Contract\\\",\\n\\t\\t],\\n\\t}\\n\\n\\t// let upgrades = ns.hacknet.getHashUpgrades();\\n\\t// ns.tprint(upgrades);\\n\\tdo {\\n\\t\\tns.hacknet.spendHashes(`Exchange for Bladeburner Rank`);\\n\\t\\tns.hacknet.spendHashes(`Exchange for Bladeburner SP`);\\n\\t\\tawait ns.sleep(TICK);\\n\\t} while (ns.getPlayer().money < 1e150);\\n}\\n*/\",\"filename\":\"/wip/hashDash.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/wip/hashDash.js\",\"url\":\"blob:file:///11ba1992-b6af-4556-a295-3f1be76c5d77\",\"moduleSequenceNumber\":33128}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"home\",\"moduleSequenceNumber\":9806,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// so that when script is killed, these line disappear\\n\\tns.atExit(() => { hook0.innerHTML = \\\"\\\"; hook1.innerHTML = \\\"\\\"; });\\n\\n    // // const doc = document; // This is expensive! (25GB RAM) Perhaps there's a way around it? ;)\\n    // // can use this to get rid of that cost too\\n    // const doc = eval(\\\"document\\\");\\n\\n    // const hook0 = doc.getElementById('overview-extra-hook-0');\\n    // const hook1 = doc.getElementById('overview-extra-hook-1');\\n\\n    const hook0 = eval(\\\"document.getElementById('overview-extra-hook-0')\\\");\\n    const hook1 = eval(\\\"document.getElementById('overview-extra-hook-1')\\\");\\n    while (true) {\\n        try {\\n            const headers = []\\n            const values = [];\\n            // Add script income per second\\n            headers.push(\\\"ScrInc\\\");\\n            values.push(ns.getScriptIncome()[0].toPrecision(5) + '/sec');\\n            // Add script exp gain rate per second\\n            headers.push(\\\"ScrExp\\\");\\n            values.push(ns.getScriptExpGain().toPrecision(5) + '/sec');\\n            // TODO: Add more neat stuff\\n\\n            // Now drop it into the placeholder elements\\n            hook0.innerText = headers.join(\\\" \\\\n\\\");\\n            hook1.innerText = values.join(\\\"\\\\n\\\");\\n        } catch (err) { // This might come in handy later\\n            ns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n        }\\n        await ns.sleep(1000);\\n    }\\n}\",\"filename\":\"/sbin/statCast.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/statCast.js\",\"url\":\"blob:file:///29f35d31-98ff-4ea2-ad15-483619d95ff0\",\"moduleSequenceNumber\":1526}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":9807,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getScriptIncome\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getScriptExpGain\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const doc = eval(`document`);\\n    doc.completely_unused_field = true;\\n    await ns.sleep(15 * 1000);\\n}\",\"filename\":\"/sbin/document.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/document.js\",\"url\":\"blob:file:///2e6e2987-f94b-4d05-8d7c-2ae74346c137\",\"moduleSequenceNumber\":198706}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9808,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tawait ns.share();\\n\\t}\\n}\",\"filename\":\"/bin/faqShare.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/faqShare.js\",\"url\":\"blob:file:///1a9d8520-307a-4e57-9e8a-6cdacff22cdb\",\"moduleSequenceNumber\":1689055}],\"dependents\":[],\"ramUsage\":4,\"server\":\"home\",\"moduleSequenceNumber\":9809,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\nObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\tlet obsceneValue = 1e100;\\n\\t\\tprops.player.gainIntelligenceExp(obsceneValue);\\n\\t\\tns.tprint(`Int Bonus: ${props.player.getIntelligenceBonus()}`);\\n\\t}\\n}\",\"filename\":\"/sbin/brainFuck.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/brainFuck.js\",\"url\":\"blob:file:///3fb67d4f-85b5-4f7f-b52c-f0c2b3ec8f50\",\"moduleSequenceNumber\":175353}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9810,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const workTypes = {\\n\\tops: {\\n\\t\\tname: 'Field Work',\\n\\t\\tskills: ['hacking', 'strength', 'defense', 'dexterity', 'agility', 'charisma'],\\n\\t},\\n\\tdev: {\\n\\t\\tname: 'Hacking Contracts',\\n\\t\\tskills: ['hacking'],\\n\\t},\\n\\tsec: {\\n\\t\\tname: 'Security Work',\\n\\t\\tskills: ['hacking', 'strength', 'defense', 'dexterity', 'agility'],\\n\\t},\\n}\\n\\nconst FACTIONS = [\\n\\t`Illuminati`,\\n\\t`Daedalus`,\\n\\t`The Covenant`,\\n\\t`Ecorp`,\\n\\t`MegaCorp`,\\n\\t`Bachman & Associates`,\\n\\t`Blade Industries`,\\n\\t`NWO`,\\n\\t`Clarke Incorporated`,\\n\\t`OmniTek Incorporated`,\\n\\t`Four Sigma`,\\n\\t`KuaiGong International`,\\n\\t`Fulcrum Secret Technologies`,\\n\\t`BitRunners`,\\n\\t`The Black Hand`,\\n\\t`NiteSec`,\\n\\t`Aevum`,\\n\\t`Chongqing`,\\n\\t`Ishima`,\\n\\t`New Tokyo`,\\n\\t`Sector-12`,\\n\\t`Volhaven`,\\n\\t`Speakers for the Dead`,\\n\\t`The Dark Army`,\\n\\t`The Syndicate`,\\n\\t`Silhouette`,\\n\\t`Tetrads`,\\n\\t`Slum Snakes`,\\n\\t`Netburners`,\\n\\t`Tian Di Hui`,\\n\\t`CyberSec`,\\n\\t`Bladeburners`,\\n\\t`Church of the Machine God`,\\n];\\n\\nexport function autocomplete(data, args) {\\n\\treturn [...data.flags];\\n}\\n\\nexport function validEnum(value, validValues) {\\n\\treturn validValues.includes(value);\\n}\\n\\nexport function getAllFactions() {\\n\\t\\treturn FACTIONS;\\n\\t}\\n\\t\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tfunction goalAchieved(ctx) {\\n\\t\\tlet achieved = true;\\n\\t\\tworkTypes[ctx.work]['skills'].forEach((skill) => {\\n\\t\\t\\tachieved &= (ns.getPlayer()[skill] > ctx.goal);\\n\\t\\t});\\n\\t\\treturn achieved;\\n\\t}\\n\\n\\tconst schema = [\\n\\t\\t['faction', 'Sector-12'],\\n\\t\\t['goal', 100],\\n\\t\\t['work', 'dev'],\\n\\t\\t['focus', false],\\n\\t\\t['period', 10 * 1000],\\n\\t];\\n\\tconst ctx = ns.flags(schema);\\n\\n\\t// input validation\\n\\tlet validInput = validEnum(ctx.faction, getAllFactions()) &&\\n\\t\\tvalidEnum(ctx.work, Object.getOwnPropertyNames(workTypes));\\n\\tif (!validInput) { ns.tprint('You suck'); ns.exit(); }\\n\\n\\t// cycle faction work until goal achieved\\n\\tdo {\\n\\t\\tns.workForFaction(ctx.faction, workTypes[ctx.work].name, ctx.focus);\\n\\t\\tawait ns.sleep(ctx.period);\\n\\t} while (!goalAchieved(ctx));\\n\\n\\tns.tprint('Goal Achieved!');\\n\\tns.stopAction();\\n}\",\"filename\":\"/bin/faqChurn.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/faqChurn.js\",\"url\":\"blob:file:///80844cbb-ff33-4253-ae63-6e72f3bac5e1\",\"moduleSequenceNumber\":12162}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":12162,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"singularity.stopAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\t[\\n\\t\\t'/bin/pwn.js',\\n\\t\\t'/bin/faqJoin.js',\\n\\t\\t'/bin/homeTor.js',\\n\\t\\t// '/sbin/bank.js',\\n\\t\\t'/bin/homeRam.js',\\n\\t\\t'/bin/homeCores.js',\\n\\t\\t'/bin/hacknetBuilder.js',\\n\\t\\t// '/bin/sleeveStart.js',\\n\\t\\t// '/bin/displayKarma.js',\\n\\t].forEach((program) => { ns.run(program); })\\n\\n\\tawait ns.sleep(2 * 1000);\\n\\tns.run('/scripts/localHack.js', 1, 'n00dles');\\n}\",\"filename\":\"/bin/init.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/init.js\",\"url\":\"blob:file:///9e4d6320-b337-4dbd-8a13-4690401dbf52\",\"moduleSequenceNumber\":1040}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":855614,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet TICK = 200; // sleep millis\\n\\tlet GOAL = 1e150;\\n\\tdo {\\n\\t\\tns.hacknet.spendHashes(`Sell for Money`);\\n\\t\\tawait ns.sleep(TICK);\\n\\t} while (ns.getPlayer().money < GOAL);\\n}\",\"filename\":\"/bin/hashMoney.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/hashMoney.js\",\"url\":\"blob:file:///2e14c1ab-9427-41de-9c29-a6acf603f217\",\"moduleSequenceNumber\":824580}],\"dependents\":[],\"ramUsage\":6.1,\"server\":\"home\",\"moduleSequenceNumber\":9813,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tvar MoneyList = [];\\n\\tvar Moneylist_counter = 0;\\n\\tvar StartTime = Date.now();\\n\\tvar StartMoney = ns.getPlayer().money;\\n\\tns.disableLog(\\\"sleep\\\");\\n\\tns.disableLog(\\\"stock.buy\\\");\\n\\tns.disableLog(\\\"stock.sell\\\");\\n\\tvar sym = ns.stock.getSymbols();\\n\\n\\tfor (var t = 0; t < sym.length; ++t) {\\n\\t\\tStartMoney += ns.stock.getPosition(sym[t])[0] * ns.stock.getPrice(sym[t]);\\n\\t}\\n\\n\\twhile (true) {\\n\\t\\tvar MoneyCalc = Math.max(tendStocks(ns, sym) - StartMoney, 1);\\n\\t\\tvar TimeCalc = (Date.now() - StartTime) / 1000;\\n\\t\\tvar AvgMoney = MoneyCalc / TimeCalc;\\n\\n\\t\\t//\\t\\tns.print(\\\" Avg.Moneyflow  : \\\",ns.nFormat(AvgMoney,\\\"0.000a\\\"),\\\" pr.sec\\\");\\n\\t\\tvar TimeActivecalc = (Date.now() - StartTime) / 1000;\\n\\t\\tvar TimeActiveString = \\\"\\\";\\n\\t\\tif (TimeActivecalc > 120) {\\n\\t\\t\\tTimeActiveString = Math.trunc(TimeActivecalc / 60) + \\\" Minutes\\\";\\n\\t\\t}\\n\\t\\telse\\n\\t\\t\\tTimeActiveString = Math.trunc(TimeActivecalc) + \\\" Seconds\\\";\\n\\n\\t\\tns.print(\\\" Total income this session : \\\", ns.nFormat(MoneyCalc, \\\"0.000a\\\"), \\\" over \\\", TimeActiveString);\\n\\n\\t\\tawait ns.sleep(1 * 2 * 1000);\\n\\t}\\n}\\n\\nfunction tendStocks(ns, sym) {\\n\\tns.clearLog();\\n\\t//\\tns.tprint(sym[t], \\\"─────────────────────────────────\\\");\\n\\tns.print(\\\"┌────────────┬─────────┬──────────┬────────────┐\\\");\\n\\tns.print(\\\"│ Forecast   │  Sym    │  Value   │  % Owned   │\\\");\\n\\tns.print(\\\"├────────────┼─────────┼──────────┼────────────┤\\\");\\n\\tvar totalval = 0;\\n\\t//if( (ns.getPlayer().money-5000000) > 1000000000)\\n\\t//\\tBuyBestStock(ns, sym );\\n\\n\\n\\tfor (var t = 0; t < sym.length; ++t) {\\n\\t\\tif (ns.stock.getForecast(sym[t]) > 0.60) {\\n\\t\\t\\t//ns.tprint(sym[t], \\\" over 0.60 : \\\");\\n\\t\\t\\tif (ns.stock.getMaxShares(sym[t]) > ns.stock.getPosition(sym[t])[0]) {\\n\\t\\t\\t\\t// do we have money ?  if enough -> buy more\\n\\t\\t\\t\\tif ((ns.getPlayer().money - 5000000) > 1000000) {\\n\\t\\t\\t\\t\\tvar nrBuyShares = Math.trunc((ns.getPlayer().money) / ns.stock.getPrice(sym[t])) * 0.5;\\n\\t\\t\\t\\t\\t//ns.tprint(sym[t], \\\" Math.trunc(\\\"+ns.getPlayer().money+\\\" / \\\"+ns.stock.getPrice(sym[t])+\\\" )*0.5 =  \\\"+nrBuyShares);\\n\\t\\t\\t\\t\\tnrBuyShares = Math.min(ns.stock.getMaxShares(sym[t]), nrBuyShares);\\n\\t\\t\\t\\t\\t//ns.tprint(sym[t], \\\" buying [\\\"+nrBuyShares+\\\"] shares\\\");\\n\\n\\t\\t\\t\\t\\tbuy(ns, sym[t], nrBuyShares);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t//else\\tns.tprint(sym[t], \\\" out of money ?\\\");\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\t//\\telse\\t\\tns.tprint(sym[t], \\\" no more shares\\\");\\n\\t\\t}\\n\\t\\telse  // do we have shares in this trainwreck ?\\n\\t\\t{\\n\\t\\t\\tvar nrShares = ns.stock.getPosition(sym[t])[0];\\n\\t\\t\\tif (nrShares > 0) {  // yes -> sell it all\\n\\t\\t\\t\\tns.stock.sell(sym[t], nrShares, 1);\\n\\t\\t\\t\\tBuyBestStock(ns, sym);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (ns.stock.getPosition(sym[t])[0] > 0) {\\n\\t\\t\\tvar pCalc = Math.trunc(ns.stock.getForecast(sym[t]) * 100);\\n\\t\\t\\tvar output = \\\"\\\";\\n\\t\\t\\tvar outputShares = \\\"\\\";\\n\\t\\t\\tpCalc -= 60;\\n\\n\\t\\t\\tvar maxshares = ns.stock.getMaxShares(sym[t]);\\n\\t\\t\\tvar gotshares = ns.stock.getPosition(sym[t])[0];\\n\\t\\t\\tvar sharesPercent = gotshares / maxshares * 10;\\n\\t\\t\\tfor (var t3 = 0; t3 < 10; ++t3) {\\n\\t\\t\\t\\tif (sharesPercent > (t3 * 1))\\n\\t\\t\\t\\t\\toutputShares += \\\"█\\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\toutputShares += \\\"░\\\";\\n\\t\\t\\t}\\n\\t\\t\\tfor (var t2 = 0; t2 < 10; ++t2) {\\n\\t\\t\\t\\tif (pCalc > (t2 * 1))\\n\\t\\t\\t\\t\\toutput += \\\"█\\\";\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t\\toutput += \\\"░\\\";\\n\\t\\t\\t}\\n\\t\\t\\ttotalval += ns.stock.getPosition(sym[t])[0] * ns.stock.getPrice(sym[t]);\\n\\t\\t\\tns.print(\\\"│ \\\", output, \\\" │ [\\\", FixSym(sym[t]),\\n\\t\\t\\t\\t\\\"] │\\\",\\n\\t\\t\\t\\tReadableNumber(ns.stock.getPosition(sym[t])[0] * ns.stock.getPrice(sym[t])), \\\" | \\\",\\n\\t\\t\\t\\toutputShares, \\\" │\\\"\\n\\t\\t\\t\\t//,ns.nFormat(ns.stock.getSaleGain(sym[t],ns.stock.getPosition( sym[t] )[0],\\\"L\\\"),\\\"$0.000a\\\")\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n\\n\\tns.print(\\\"└────────────┴─────────┴──────────┴────────────┘\\\");\\n\\tns.print(\\\" Value (shares) : \\\" + ReadableNumber(totalval), \\\"  Total values : \\\", ReadableNumber(totalval + ns.getPlayer().money));\\n\\treturn totalval + ns.getPlayer().money;\\n}\\n\\nfunction BuyBestStock(ns, sym) {\\n\\tvar sym_t = GetBestForecast(ns, sym);\\n\\tif (sym_t == -1) return;\\n\\tvar nrBuyShares = (ns.getPlayer().money - 5000000) / ns.stock.getPrice(sym[sym_t]) * 0.66;\\n\\tnrBuyShares = Math.min(ns.stock.getMaxShares(sym[sym_t], nrBuyShares));\\n\\tif (nrBuyShares > 0)\\n\\t\\tbuy(ns, sym[sym_t], nrBuyShares);\\n}\\n\\nfunction GetBestForecast(ns, symbols) {\\n\\tvar s_val = 0.0;\\n\\tvar sym = -1;\\n\\n\\tfor (var t = 0; t < symbols.length; ++t) {\\n\\t\\tvar v = ns.stock.getForecast(symbols[t]);\\n\\t\\tif (v > s_val) {\\n\\t\\t\\tif (v > 0.60) {\\n\\t\\t\\t\\tif (ns.stock.getMaxShares(symbols[t]) > ns.stock.getPosition(symbols[t])[0]) {\\n\\t\\t\\t\\t\\ts_val = v;\\n\\t\\t\\t\\t\\tsym = t;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t//\\t\\t\\t\\t\\tns.print(\\\"Best stock sold out\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t//ns.print(\\\"best stock : \\\",symbols[sym], \\\" : \\\",s_val);\\n\\treturn sym;\\n}\\n\\nfunction FixSym(result) {\\n\\tvar nr2 = result.length;\\n\\tvar res2 = \\\"\\\";\\n\\tfor (var t = 0; t < 5 - nr2; ++t)\\n\\t\\tres2 = \\\" \\\" + res2;\\n\\treturn res2 + result;\\n}\\n\\nfunction FixResultSpace(nr, result) {\\n\\tvar nr2 = result.length;\\n\\tvar res2 = \\\"\\\";\\n\\tfor (var t = 0; t < 9 - nr2; ++t)\\n\\t\\tres2 = \\\" \\\" + res2;\\n\\treturn res2 + result;\\n}\\n\\nfunction ReadableNumber(nr) {\\n\\tvar result;\\n\\tif (nr > 1000000000000) {\\n\\t\\tresult = nr / 1000000000000;\\n\\t\\treturn FixResultSpace(nr, result.toFixed(2) + \\\"t\\\");\\n\\t}\\n\\tif (nr > 1000000000) {\\n\\t\\tresult = nr / 1000000000;\\n\\t\\treturn FixResultSpace(nr, result.toFixed(2) + \\\"b\\\");\\n\\t}\\n\\tif (nr > 1000000) {\\n\\t\\tresult = nr / 1000000;\\n\\t\\treturn FixResultSpace(nr, result.toFixed(2) + \\\"m\\\");\\n\\t}\\n\\tif (nr > 1000) {\\n\\t\\tresult = nr / 1000;\\n\\t\\treturn FixResultSpace(nr, result.toFixed(2) + \\\"k\\\");\\n\\t}\\n\\treturn \\\"x\\\";\\n}\\n\\nfunction buy(ns, stockname, numShares) {\\n\\t//ns.tprint(\\\"BUYING [\\\",stockname,\\\"] [\\\",numShares,\\\"]\\\");\\n\\tns.stock.buy(stockname, numShares);\\n}\",\"filename\":\"/bin/stonks.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/stonks.js\",\"url\":\"blob:file:///e2a27dd5-7436-4392-acfc-d9d2cb747d20\",\"moduleSequenceNumber\":12619}],\"dependents\":[],\"ramUsage\":17.6,\"server\":\"home\",\"moduleSequenceNumber\":12619,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.buy\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sell\",\"cost\":2.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.sleeve.setToUniversityCourse(0, 'Rothman University', 'Algorithms');\\n\\tns.sleeve.setToUniversityCourse(1, 'Rothman University', 'Leadership');\\n\\tns.sleeve.setToGymWorkout(2, 'Powerhouse Gym', 'strength');\\n\\tns.sleeve.setToGymWorkout(3, 'Powerhouse Gym', 'defense');\\n\\tns.sleeve.setToGymWorkout(4, 'Powerhouse Gym', 'dexterity');\\n\\tns.sleeve.setToGymWorkout(5, 'Powerhouse Gym', 'agility');\\n}\",\"filename\":\"/bin/sleeveStart.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/sleeveStart.js\",\"url\":\"blob:file:///c8ffbcde-74f7-440b-a945-c827f1160c82\",\"moduleSequenceNumber\":59120}],\"dependents\":[],\"ramUsage\":9.6,\"server\":\"home\",\"moduleSequenceNumber\":9815,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.setToUniversityCourse\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToGymWorkout\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tfor (let i = 0; i < ns.sleeve.getNumSleeves(); i += 1) {\\n\\t\\tns.tprint(`${JSON.stringify(ns.sleeve.getTask(i))}`);\\n\\t}\\n}\",\"filename\":\"/bin/checkSleeves.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/checkSleeves.js\",\"url\":\"blob:file:///a58d64f2-fad0-4c3e-8bd3-f6f0b31a04cd\",\"moduleSequenceNumber\":431788}],\"dependents\":[],\"ramUsage\":9.6,\"server\":\"home\",\"moduleSequenceNumber\":9816,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getTask\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tfunction goalAchieved(attributes, goal) {\\n\\t\\tlet achieved = true;\\n\\t\\tattributes.forEach((attribute) => {\\n\\t\\t\\tachieved &= (attribute.getLevel() > goal);\\n\\t\\t});\\n\\t\\treturn achieved;\\n\\t}\\n\\n\\tlet flags = ns.flags([['goal', 1000]]);\\n\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\tconst attributes = [\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainAgilityExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.agility_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.agility; },\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainCharismaExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.charisma_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.charisma; },\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainDefenseExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.defense_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.defense; },\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainDexterityExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.dexterity_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.dexterity; },\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainHackingExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.hacking_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.hacking; },\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tgainExp: (value) => { props.player.gainStrengthExp(value); },\\n\\t\\t\\t\\tgetExp: () => { return props.player.strength_exp; },\\n\\t\\t\\t\\tgetLevel: () => { return props.player.strength; },\\n\\t\\t\\t},\\n\\t\\t]\\n\\t\\tdo {\\n\\t\\t\\tattributes.forEach((attribute) => {\\n\\t\\t\\t\\tattribute.gainExp(attribute.getExp() * 0.1);\\n\\t\\t\\t})\\n\\t\\t} while (!goalAchieved(attributes, flags.goal))\\n\\t\\tns.tprint(`We are strong!`);\\n\\t}\\n}\",\"filename\":\"/sbin/buff.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/buff.js\",\"url\":\"blob:file:///717d4671-6214-4cfe-8cb0-883f33658bec\",\"moduleSequenceNumber\":16694}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9817,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\t['Improve Studying', 'Improve Gym Training'].forEach((buff) => { ns.hacknet.spendHashes(buff); })\\n\\t\\tawait ns.sleep(200);\\n\\t}\\n}\",\"filename\":\"/bin/hashBod.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/hashBod.js\",\"url\":\"blob:file:///27826977-a259-424e-afc7-43f558bf0271\",\"moduleSequenceNumber\":854396}],\"dependents\":[],\"ramUsage\":5.6,\"server\":\"home\",\"moduleSequenceNumber\":854396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet flags = ns.flags([\\n\\t\\t['bn', 12],\\n\\t])\\n\\n\\tns.singularity.destroyW0r1dD43m0n(flags.bn, '/bin/init.js');\\n}\",\"filename\":\"/bin/burn.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/burn.js\",\"url\":\"blob:file:///4fd0a4b4-b6b4-4a80-82b0-2c2299ceb681\",\"moduleSequenceNumber\":64133}],\"dependents\":[],\"ramUsage\":33.6,\"server\":\"home\",\"moduleSequenceNumber\":9819,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.destroyW0r1dD43m0n\",\"cost\":32}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const flags = ns.flags([\\n        ['help', false],\\n        ['target', 'n00dles'],\\n    ]);\\n    let target = flags.target;\\n    if (!target || flags.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    let hops = [];\\n    recursiveScan(ns, '', 'home', target, hops);\\n    for (let hop of hops) {\\n        ns.singularity.connect(hop);\\n        await ns.sleep(250);\\n    }\\n\\n\\tawait ns.singularity.installBackdoor();\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/bin/analEyez.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/analEyez.js\",\"url\":\"blob:file:///67246b86-5bb8-48ba-8d92-5cecd887eefe\",\"moduleSequenceNumber\":1695}],\"dependents\":[],\"ramUsage\":5.8,\"server\":\"home\",\"moduleSequenceNumber\":9820,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"singularity.connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"singularity.installBackdoor\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\tconst hook0 = eval(\\\"document.getElementById('overview-extra-hook-0')\\\");\\n\\t\\tconst hook1 = eval(\\\"document.getElementById('overview-extra-hook-1')\\\");\\n\\n\\t\\t// so that when script is killed, these line disappear\\n\\t\\tns.atExit(() => { hook0.innerHTML = \\\"\\\"; hook1.innerHTML = \\\"\\\"; });\\n\\n\\t\\twhile (true) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tconst headers = []\\n\\t\\t\\t\\tconst values = [];\\n\\t\\t\\t\\t// Add script income per second\\n\\t\\t\\t\\theaders.push(\\\"Karma\\\");\\n\\t\\t\\t\\tvalues.push(ns.nFormat(ns.heart.break(), \\\"0,0\\\"));\\n\\t\\t\\t\\t// TODO: Add more neat stuff\\n\\n\\t\\t\\t\\t// Now drop it into the placeholder elements\\n\\t\\t\\t\\thook0.innerText = headers.join(\\\" \\\\n\\\");\\n\\t\\t\\t\\thook1.innerText = values.join(\\\"\\\\n\\\");\\n\\t\\t\\t} catch (err) { // This might come in handy later\\n\\t\\t\\t\\tns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n\\t\\t\\t}\\n\\t\\t\\tawait ns.sleep(1000);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"/sbin/displayKarma.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/sbin/displayKarma.js\",\"url\":\"blob:file:///fbf5fee7-7129-49b3-aacf-9a7fab04ccb3\",\"moduleSequenceNumber\":1328018}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9821,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const ENTITIES = [\\n\\t{ 'corporation': 'Bachman & Associates', 'faction': 'Bachman & Associates', 'repGoal': 200000 },\\n\\t{ 'corporation': 'Blade Industries', 'faction': 'Blade Industries', 'repGoal': 200000 },\\n\\t{ 'corporation': 'Clarke Incorporated', 'faction': 'Clarke Incorporated', 'repGoal': 200000 },\\n\\t{ 'corporation': 'ECorp', 'faction': 'ECorp', 'repGoal': 200000 },\\n\\t{ 'corporation': 'Four Sigma', 'faction': 'Four Sigma', 'repGoal': 200000 },\\n\\t{ 'corporation': 'KuaiGong International', 'faction': 'KuaiGong International', 'repGoal': 200000 },\\n\\t{ 'corporation': 'MegaCorp', 'faction': 'MegaCorp', 'repGoal': 200000 },\\n\\t{ 'corporation': 'NWO', 'faction': 'NWO', 'repGoal': 200000 },\\n\\t{ 'corporation': 'OmniTek Incorporated', 'faction': 'OmniTek Incorporated', 'repGoal': 200000 },\\n\\t{ 'corporation': 'Fulcrum Technologies', 'faction': 'Fulcrum Secret Technologies', 'repGoal': 250000 },\\n];\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tfunction inFaction(faction) { return ns.getPlayer().factions.includes(faction); }\\n\\tfunction hazJob(corp) { return Object.keys(ns.getPlayer().jobs).includes(corp); }\\n\\n\\tns.tail();\\n\\tns.disableLog('sleep');\\n\\n\\tfor (let entity of ENTITIES) {\\n\\t\\t// already belong to corp faction?\\n\\t\\tif (!inFaction(entity.faction)) {\\n\\t\\t\\t// no? do we haz job at corp?\\n\\t\\t\\twhile (!hazJob(entity.corporation)) {\\n\\t\\t\\t\\tns.singularity.applyToCompany(entity.corporation, 'Software');\\n\\t\\t\\t\\tawait ns.sleep(200);\\n\\t\\t\\t}\\n\\t\\t\\t// brute forced our way into the big leagues\\n\\t\\t\\t// now work, bitch\\n\\t\\t\\twhile (ns.singularity.getCompanyRep(entity.corporation) < entity.repGoal) {\\n\\t\\t\\t\\tns.singularity.workForCompany(entity.corporation, false);\\n\\t\\t\\t\\tawait ns.sleep(3 * 1000);\\n\\t\\t\\t}\\n\\n\\t\\t\\tns.print(`Finished earning rep at ${entity.corporation} corporation.`);\\n\\t\\t} else {\\n\\t\\t\\tns.print(`Already belong to ${entity.faction} faction.`);\\n\\t\\t}\\n\\t}\\n\\n\\tns.singularity.stopAction();\\n}\",\"filename\":\"/bin/faqJobs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/faqJobs.js\",\"url\":\"blob:file:///b281361a-9223-4245-a979-21a53b588701\",\"moduleSequenceNumber\":1542}],\"dependents\":[],\"ramUsage\":1032.5,\"server\":\"home\",\"moduleSequenceNumber\":9822,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4},{\"type\":\"fn\",\"name\":\"singularity.applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"singularity.getCompanyRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"singularity.workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"singularity.stopAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"const HOSTS = [\\n\\t'CSEC',\\n\\t'avmnite-02h',\\n\\t'I.I.I.I',\\n\\t'.',\\n\\t'run4theh111z',\\n];\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet flags = ns.flags([\\n\\t\\t['target', 'n00dles'],\\n\\t]);\\n\\n\\tfor (let host of HOSTS) {\\n\\t\\tns.singularity.connect(host);\\n\\t\\tawait ns.sleep(2000);\\n\\t}\\n}\",\"filename\":\"/wip/con.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/wip/con.js\",\"url\":\"blob:file:///899a0f6e-9aeb-418e-8979-81bbf57e9f7f\",\"moduleSequenceNumber\":246663}],\"dependents\":[],\"ramUsage\":3.6,\"server\":\"home\",\"moduleSequenceNumber\":9823,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.connect\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"function recursiveScan(ns, parent, server, target, route) {\\n    const children = ns.scan(server);\\n    for (let child of children) {\\n        if (parent == child) {\\n            continue;\\n        }\\n        if (child == target) {\\n            route.unshift(child);\\n            route.unshift(server);\\n            return true;\\n        }\\n\\n        if (recursiveScan(ns, server, child, target, route)) {\\n            route.unshift(server);\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\nexport async function main(ns) {\\n    const flags = ns.flags([\\n        ['help', false],\\n        ['target', 'n00dles'],\\n    ]);\\n    let target = flags.target;\\n    if (!target || flags.help) {\\n        ns.tprint(\\\"This script helps you find a server on the network and shows you the path to get to it.\\\");\\n        ns.tprint(`Usage: run ${ns.getScriptName()} SERVER`);\\n        ns.tprint(\\\"Example:\\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`);\\n        return;\\n    }\\n\\n    let hops = [];\\n    recursiveScan(ns, '', 'home', target, hops);\\n    for (let hop of hops) {\\n        ns.singularity.connect(hop);\\n        await ns.sleep(250);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}\",\"filename\":\"/bin/sconnect.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/sconnect.js\",\"url\":\"blob:file:///84dc78a0-b01d-4bd1-b0bb-e20f9219d856\",\"moduleSequenceNumber\":265441}],\"dependents\":[],\"ramUsage\":3.8,\"server\":\"home\",\"moduleSequenceNumber\":9824,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"singularity.connect\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.corporation.goPublic(1e9);\\n\\tns.corporation.buyBackShares(1e9);\\n}\",\"filename\":\"/bin/corpGoPublic.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpGoPublic.js\",\"url\":\"blob:file:///ca3a97ce-0e35-4d3e-b1da-4e29e7e6b39e\",\"moduleSequenceNumber\":64313}],\"dependents\":[],\"ramUsage\":1024,\"server\":\"home\",\"moduleSequenceNumber\":9825,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst corp = ns.corporation.getCorporation();\\n\\tconst amount = corp.funds * 0.01;\\n\\tns.getPlayer().factions.forEach((faction) => {\\n\\t\\tns.corporation.bribe(faction, amount, 0);\\n\\t})\\n}\",\"filename\":\"/bin/corpBribes.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/corpBribes.js\",\"url\":\"blob:file:///80e1a5b7-733e-47fd-b2db-6b7e51775af3\",\"moduleSequenceNumber\":9601}],\"dependents\":[],\"ramUsage\":1024.5,\"server\":\"home\",\"moduleSequenceNumber\":9826,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"corporation\",\"cost\":1022.4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst factions = ns.getPlayer().factions;\\n\\tfor (const faction of factions) {\\n\\t\\tconst augments = ns.singularity.getAugmentationsFromFaction(faction);\\n\\t\\tfor (const augment of augments) {\\n\\t\\t\\tns.singularity.purchaseAugmentation(faction, augment);\\n\\t\\t}\\n\\t}\\n}\",\"filename\":\"/bin/faqAugs.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/faqAugs.js\",\"url\":\"blob:file:///39f81a71-e8ea-430f-8132-91b37a161a66\",\"moduleSequenceNumber\":9602}],\"dependents\":[],\"ramUsage\":12.1,\"server\":\"home\",\"moduleSequenceNumber\":9827,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"singularity.getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"singularity.purchaseAugmentation\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst crime = 'Homicide';\\n\\tconst focus = false;\\n\\n\\tfor (let i = 0; i < 25; i++) {\\n\\t\\tns.singularity.commitCrime(crime);\\n\\t\\tawait ns.sleep(3.5 * 1000);\\n\\t}\\n}\",\"filename\":\"/bin/doCrime.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/doCrime.js\",\"url\":\"blob:file:///04eccd72-4c0e-4e78-9d0c-4f54f18bdfa2\",\"moduleSequenceNumber\":47405}],\"dependents\":[],\"ramUsage\":6.6,\"server\":\"home\",\"moduleSequenceNumber\":9828,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"singularity.commitCrime\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst arg = ns.args[0];\\n\\tawait ns.sleep(10 * 1000);\\n\\tns.tprint(`This is ${arg}`);\\n}\",\"filename\":\"/bin/sproing.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/sproing.js\",\"url\":\"blob:file:///b2c28733-c9f4-4d3d-b584-463b4ff4080b\",\"moduleSequenceNumber\":8705}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9829,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tfor (let i = 0; i < 2000; i++) {\\n\\t\\tns.run('/bin/sproing.js', 1, i);\\n\\t}\\n}\",\"filename\":\"/bin/spring.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/spring.js\",\"url\":\"blob:file:///ba951501-4d5c-4257-bf18-9169b4a18fa9\",\"moduleSequenceNumber\":9291}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9830,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.tprint(ns.heart.break());\\n}\",\"filename\":\"/bin/undocumented.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/undocumented.js\",\"url\":\"blob:file:///ca2d0e66-7bbb-4d1e-9f14-b759573b177e\",\"moduleSequenceNumber\":192539}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9831,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tns.print(Object.getOwnPropertyNames(ns));\\n}\",\"filename\":\"funklist.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"funklist.js\",\"url\":\"blob:file:///a6681554-3502-4d4a-8c7b-1ead05c0ae44\",\"moduleSequenceNumber\":594357}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9832,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\t[\\n\\t\\t'/bin/corpBuilder.js',\\n\\t\\t'/sbin/bank.js',\\n\\t\\t'/bin/corpGoPublic.js',\\n\\t].forEach((program) => { ns.run(program); })\\n}\",\"filename\":\"/bin/go.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/go.js\",\"url\":\"blob:file:///674d993e-a60f-4b0f-84ff-7c23a0200938\",\"moduleSequenceNumber\":783835}],\"dependents\":[],\"ramUsage\":2.6,\"server\":\"home\",\"moduleSequenceNumber\":9833,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tconst targets = [\\n\\t\\t'CSEC',\\n\\t\\t'avmnite-02h',\\n\\t\\t'I.I.I.I',\\n\\t\\t'run4theh111z',\\n\\t\\t'.',\\n\\t\\t'fulcrumassets',\\n\\t];\\n\\n\\tfor (let target of targets) {\\n\\t\\t// wait until we can affect change\\n\\t\\twhile (!ns.hasRootAccess(target)) {\\n\\t\\t\\tawait ns.sleep(200);\\n\\t\\t}\\n\\t\\tns.run('/bin/analEyez.js', 1, '--target', target);\\n\\t\\tawait ns.sleep(1000);\\n\\t\\tns.singularity.connect('home');\\n\\t}\\n\\n}\",\"filename\":\"/bin/buttStuff.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/bin/buttStuff.js\",\"url\":\"blob:file:///b20470eb-f222-4f35-836c-8f73b74df562\",\"moduleSequenceNumber\":786283}],\"dependents\":[],\"ramUsage\":4.65,\"server\":\"home\",\"moduleSequenceNumber\":9834,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"run\",\"cost\":1},{\"type\":\"fn\",\"name\":\"singularity.connect\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst hook0 = eval(\\\"document.getElementById('overview-extra-hook-0')\\\");\\n\\tconst hook1 = eval(\\\"document.getElementById('overview-extra-hook-1')\\\");\\n\\t// so that when script is killed, these line disappear\\n\\tns.atExit(() => { hook0.innerHTML = \\\"\\\"; hook1.innerHTML = \\\"\\\"; });\\n\\n\\twhile (true) {\\n\\t\\ttry {\\n\\t\\t\\tconst headers = []\\n\\t\\t\\tconst values = [];\\n\\t\\t\\t// Add script income per second\\n\\t\\t\\theaders.push(\\\"Karma\\\");\\n\\t\\t\\tvalues.push(ns.nFormat(ns.heart.break(), \\\"0,0\\\"));\\n\\t\\t\\t// TODO: Add more neat stuff\\n\\n\\t\\t\\t// Now drop it into the placeholder elements\\n\\t\\t\\thook0.innerText = headers.join(\\\" \\\\n\\\");\\n\\t\\t\\thook1.innerText = values.join(\\\"\\\\n\\\");\\n\\t\\t} catch (err) { // This might come in handy later\\n\\t\\t\\tns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n\\t\\t}\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"/bin/displayKarma.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/bin/displayKarma.js\",\"url\":\"blob:file:///07dc89ff-eda0-4adf-8a8c-d57a21031d92\",\"moduleSequenceNumber\":9844}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9844,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst doc = eval('document');\\n\\tconst hook0 = doc.getElementById('overview-extra-hook-0');\\n\\tconst hook1 = doc.getElementById('overview-extra-hook-1');\\n\\t// so that when script is killed, these line disappear\\n\\tns.atExit(() => { hook0.innerHTML = \\\"\\\"; hook1.innerHTML = \\\"\\\"; });\\n\\n\\twhile (true) {\\n\\t\\ttry {\\n\\t\\t\\tconst headers = []\\n\\t\\t\\tconst values = [];\\n\\t\\t\\t// Add script income per second\\n\\t\\t\\theaders.push(\\\"Karma\\\");\\n\\t\\t\\tvalues.push(ns.nFormat(ns.heart.break(), \\\"0,0\\\"));\\n\\t\\t\\t// TODO: Add more neat stuff\\n\\n\\t\\t\\t// Now drop it into the placeholder elements\\n\\t\\t\\thook0.innerText = headers.join(\\\" \\\\n\\\");\\n\\t\\t\\thook1.innerText = values.join(\\\"\\\\n\\\");\\n\\t\\t} catch (err) { // This might come in handy later\\n\\t\\t\\tns.print(\\\"ERROR: Update Skipped: \\\" + String(err));\\n\\t\\t}\\n\\t\\tawait ns.sleep(1000);\\n\\t}\\n}\",\"filename\":\"/wip/wtf.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[{\"filename\":\"/wip/wtf.js\",\"url\":\"blob:file:///e3a1c1f6-f547-47d7-90e1-5ac957fe4ca1\",\"moduleSequenceNumber\":1330989}],\"dependents\":[],\"ramUsage\":1.6,\"server\":\"home\",\"moduleSequenceNumber\":9836,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"export function getConnectionHops(ns, target) {\\n    let nestArr = [];\\n    nestArr.push(target);\\n\\n    while (nestArr[nestArr.length - 1] != 'home') {\\n        nestArr.push(ns.scan(nestArr[nestArr.length - 1])[0]);\\n    }\\n    nestArr = nestArr.reverse();\\n\\n    return nestArr;\\n}\",\"filename\":\"/lib/utils.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":1052154,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import * as utils from '/lib/utils.js';\\n\\n/** @param {NS} ns */\\nexport async function main(ns) {\\n\\tlet target = ns.args[0];\\n\\tns.tprint(`${utils.getConnectionHops(ns, target)}`);\\n}\",\"filename\":\"/tmp/test.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/lib/utils.js\",\"url\":\"blob:file:///026566e8-f5a0-46b2-9c31-165ffcb7cc1f\",\"moduleSequenceNumber\":1052154},{\"filename\":\"/tmp/test.js\",\"url\":\"blob:file:///cb45f5bf-9a8f-4008-a1a4-021777299ca0\",\"moduleSequenceNumber\":1052929}],\"dependents\":[],\"ramUsage\":1.8,\"server\":\"home\",\"moduleSequenceNumber\":1052929,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\",\"darkweb\",\"hacknet-node-0\",\"hacknet-node-1\",\"hacknet-node-2\",\"hacknet-node-3\",\"hacknet-node-4\",\"hacknet-node-5\",\"hacknet-node-6\",\"hacknet-node-7\",\"hacknet-node-8\",\"hacknet-node-9\",\"hacknet-node-10\",\"hacknet-node-11\",\"hacknet-node-12\",\"hacknet-node-13\",\"hacknet-node-14\",\"hacknet-node-15\",\"hacknet-node-16\",\"hacknet-node-17\",\"hacknet-node-18\",\"hacknet-node-19\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":true,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":1,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-673791.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"uK0CWXDg6VsPBPDg6Vsxxxx6Y6Y6Y6Y6zim6ygVDacFXNk8cFXFXNk8cFX\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-218771-OmniTekIncorporated.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"108175110106\",\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-471209.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[175,94,135,152,42,73,147,152,14],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-310358-KuaiGongInternational.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()a()aa)a)(())\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-946435.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[4,-9,-8,-10,-10,8,-9,4,-10,8,-10,4,10,3,-4,-8,2,-5,4,2,-7,4,-1,-5,3,-6,4,6,7,-6,-7,-8,2,-2,-5,5,-6,-7,0,-1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-692687.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[8,27,50,41],[16,47,1,38],[14,24,43,13]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-165557.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":69363,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-384374.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[158,[1,3,4,5,8,9,10,12,14]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-968842.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[2,10,-1,-9,5,3,-4,-7,-7,-1,-8,-9,10,-3,1,-6,6,-2,0,8,-3,4,-9,-7,7],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-669012.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[121,24,174,145,98,57,40,65,193,100,38,150,10,9,39,171,160,129,42,53,33,15,104,158,8,24,78,129,183,30,153,50,89,155],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"ecorp\",\"httpPortOpen\":true,\"ip\":\"3.1.5.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"ecorp\",\"moduleSequenceNumber\":10003,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":32.339999999999996,\"moneyAvailable\":4687485343.6,\"moneyMax\":11953087626.180002,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1364,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-964460-OmniTekIncorporated.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"84QsMkJUd327UUUoH3b675KdIa7790615AZChW384hCO651\",\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-711852-KuaiGongInternational.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"00010010000000100010001100111100010100101000000001001111\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-935977-ECorp.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0001101110100101010101100110100111010100\",\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-964560-BladeIndustries.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"100100111110\",\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-367628.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[125,105,58,122,103,166,153,52,18,38,126,27,170,78,88,151,114,196,113,136,3,12,145,85,15,19,24,168,6,31],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-58148.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[187,122,57,161,127,10,96,142,93,141,164,117,98,80,183,92,155,62,34,200,37,68,141,195,58,142,112,39,167,191,187,193,74,179,169],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498938.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,1,0,1,0],[0,0,0,0,0,1],[0,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,1],[1,0,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-324536-TheCovenant.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":113113403,\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-173527.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[169,[1,2,3,4,6,7,8,9,10,11,13]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"megacorp\",\"httpPortOpen\":true,\"ip\":\"29.7.3.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"megacorp\",\"moduleSequenceNumber\":10005,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":5723409137.5,\"moneyMax\":14308522843.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1258,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-550872.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[3,10],[1,3],[20,21],[22,31],[6,13],[10,15],[1,7],[19,27],[17,24],[18,28],[8,9],[14,24],[2,11]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-999541-BladeIndustries.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[138,81,194,4,72,120,41,7,138,51,197,148,150,95,24,57,52,61,168,4,172,157,11,104,55,88,180,90,158,33,167,74,4,15,170,196,19,130,115,152,176,16,8,146,92],\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-244059.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[69,109,59,179,68,185,124,50,148,166,172,86,129,41,27],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-5154.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[27,176,137,69,181,181,184,179,57,106,161,28,32,94,38,29,9,188,128,128,15,155,52,30,173,56,106,11,58,53,84,142,103,67,88,145,75,146],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-341758.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":3349553,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826954.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[7,[62,25,20,76,9,162,127,103,184,180,89,28,25,36,68,136,113,81,91,22,94,159,59,173,80,65,163,175,97,75,165,32,12,181,140,18,130]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-217295.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[4,9],[2,4],[5,7],[3,10],[3,6],[4,10],[4,8],[3,9],[2,5],[0,1],[4,7],[5,10],[3,8],[0,10]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-279382.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[0,3],[1,6],[1,3],[1,5],[7,8],[2,7],[0,6],[0,4],[1,3]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-527149.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,13],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-766056.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[180,119,138,110,188,100],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-377968.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[141,82,166,38,189,174,104,183,155,175,65,112,140,140,102,13,7,142,174,126,127,31,9,76,188,137,184,185,120,55,166,6,25,195,65,25,100,52,187,99,106,17,29,70,183,70],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-535925.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[7,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-258575.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,1,0],[0,1,0],[0,0,0],[0,0,0],[0,0,1],[0,0,0],[1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-218519.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1001011000\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-873918.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"6HHgtBv352qA2995Db5re6ts09q0v4LW7Jl06mxTUeA551C684Qy47919yAGIqKMWe\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"b-and-a\",\"httpPortOpen\":true,\"ip\":\"99.0.4.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"b-and-a\",\"moduleSequenceNumber\":10015,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\",\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":2332289183.4,\"moneyMax\":5830722958.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":958,\"serverGrowth\":80}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-747636.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"333334OOAAsHHHnnnnnngaaxxzzzzzzzzzzzzYEqqWWsjBBwCddddddYWEEEEEEEl00Clddvvvv\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-20366.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"76067873\",15],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-892182.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[41,16,33,14,41,37,24,20,30,46,48]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-316727.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"66666666666XXXXzFFFFFFFFFFRRTTTFYYaaaaaaFF22226666661WWWWWWWW8\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-143086-ClarkeIncorporated.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"218755\",-27],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-354779.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[3,6],[1,2,7],[3,2,2,7],[8,6,9,6,1],[8,7,1,1,7,6],[8,1,3,4,6,8,7]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"blade\",\"httpPortOpen\":true,\"ip\":\"69.6.0.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"blade\",13],\"dataMap\":{\"blade\":[5423762359371.501,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":747436905781.4916,\"onlineMoneyMade\":5423762359371.501,\"onlineRunningTime\":9.010000000000002,\"pid\":2456624,\"ramUsage\":2.4,\"server\":\"blade\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///703efc91-7c83-4bfe-9408-d38afb758279\",\"moduleSequenceNumber\":10002}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///703efc91-7c83-4bfe-9408-d38afb758279\",\"moduleSequenceNumber\":10002}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"blade\",\"moduleSequenceNumber\":10002,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"omnitek\",\"ecorp\",\"megacorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":33.54600001310175,\"minDifficulty\":32,\"moneyAvailable\":0,\"moneyMax\":6630516331.750001,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1089,\"serverGrowth\":61}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-425634.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":7839054,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-919229.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"86151174115\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-513213.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"4m3Aq139e8scfBGlM7124j7286nAN8EFr312fX177uu6K1zL7951147H6322d21\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-314799-FulcrumSecretTechnologies.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":4494124741858128,\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-942149-MegaCorp.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[116,[1,2,4,5,7,8,9,12,13,14]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-631765.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"QEEK7lggAAANTTtttthill5555555555RRaCNNNNNNNNNN002MM1111h8888hhhhNNNNNNNN\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-236506.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[9,12],[9,15],[17,22],[12,21],[9,10],[14,18],[6,7],[24,33],[6,15],[11,20],[12,14],[17,24],[7,15],[15,24],[1,9],[4,11],[15,23]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-616439-KuaiGongInternational.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"a47Nr5a47Nr5a0eh47NLfSwsT7NLfSLfSNLfqHWi4GhUEhUEhUEhUEhUEEhU7hU7hU7hU53xhGihP5kHkHkHkHP5OP5OP\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-431068.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[50,20,19,137]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-794833.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"5MNNs66PPPFHHHHXXXXXXXXXXXUUUUUUUUUUbb00444444eeMMyyxxRYYrr77EEEEEEYQQQQQQQQByyyy\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-825819.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"010110010101111011\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nwo\",\"httpPortOpen\":true,\"ip\":\"74.2.7.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"nwo\",\"moduleSequenceNumber\":9987,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":2835105629.4,\"moneyMax\":7087764073.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1168,\"serverGrowth\":68}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-377731.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"lHWWWWWWWWWWWddddddddddddSSvvvvvvvvvvvvvvUzDDDrrbbbbbbbbcccccccccccEaffcc\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-499428.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[168,49,185,9,35,71,13,168,51,78,81,136,194,190,92,196,77,87,199,153,109,199,122,138,129,117,131,80,52,189,25,27,118,169],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-257170.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[22,48,2,23,22,10,2,22],[22,2,40,21,7,37,4,49],[2,33,45,32,3,21,33,36],[6,17,27,10,43,19,20,25]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-270825.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":872642526,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-939279-TheCovenant.cct\",\"type\":\"Total Ways to Sum\",\"data\":23,\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-850290-KuaiGongInternational.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"TTppTTgxxxxxxxxxxxxxTT44MMMMMMMMMMXX22222222222WWWWWWWQQQQQQQQf66DTTjjjjjQQ77FE666\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-794513.cct\",\"type\":\"Array Jumping Game\",\"data\":[5,4,10,8,6,7,3,5,2,4,6,10,10,1,8,6,7,4,10,4,3,10,9,2,3],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-699769.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-981873.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[119,127,168,2,11,168,197,50,48,44,19,93,32,158],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-993038.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[4,2],[6,2,5],[2,6,6,9],[6,6,7,2,4],[8,7,3,4,7,1],[6,4,4,5,1,7,8],[2,5,5,3,2,7,7,2],[4,4,8,8,1,6,6,1,9]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-842940.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":73,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-566617.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[191,6,34,24,179,10,107,136,168,30,164,196,105,79,102,109,82,200,6,164,97,119,56,14],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-895231.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[1,7],[10,12],[20,30],[3,6],[1,9],[6,9],[6,9],[16,26],[11,12],[3,6]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-158365.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[9,16],[11,17],[4,7],[16,24],[2,5],[23,28],[21,30],[10,17],[24,28],[12,20],[19,28],[1,9],[11,12],[1,9],[20,26],[10,15],[17,20],[9,11]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-681736.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"111110100101\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-201402-MegaCorp.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,7,4,2,2,1,6,2,3,4,3,4,6,2,3,1,2,2,6,0,2],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-136114.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,10,1,4,4,4,5,7,6,0,10,10,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-489951.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[13,10,14,46],[16,27,31,7]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"clarkinc\",\"httpPortOpen\":true,\"ip\":\"9.0.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"clarkinc\",\"moduleSequenceNumber\":10029,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":1866815930.8000002,\"moneyMax\":4667039827.000001,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1231,\"serverGrowth\":58}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-587980.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":8700,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-904737.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,1,0,0],[0,0,0,1,1,0],[0,0,0,1,1,1],[0,0,1,1,1,0],[0,0,0,0,1,1],[0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-670510.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,10,10,3,0,0,0,0,10,3,1,6,0,2,3,5,9,1,5,9,6,0,0,3,1],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-461345.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"21061987\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-163822.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":278712453,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-988811.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,3],[4,4,9],[4,9,3,9],[8,5,8,8,6],[2,2,7,7,7,9],[3,1,8,8,5,4,9],[3,6,7,6,4,6,3,6],[2,6,7,4,9,8,7,1,2],[3,4,9,9,1,5,7,2,5,4],[5,2,1,1,1,7,8,6,6,4,6]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-181429.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[75,[1,2,6,7,8,9,11,12,13,16,17,18]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-525672.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[17,96,165,34,35,35,191,65,200,28,36,184,3,43,102,191,166,1,188,67,64,113,35,86,131,55,120,13,5,23,165,9,54,52,147,142,103,26,86,171,77],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-454341-TianDiHui.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"XXXXXXXXk6WuizIWuiM1wiM1wiM1wiawiM1wiawiawiawiawK8WiawKvedHPIvwKviY6lOOOOOOOO\",\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-333202.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"6Fv8cwq732qc663htF449HuAlpjjJz56251344ZS5O332pv4822U742DD363rqD\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-427810.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[130,[1,3,4,7,8,12,13,14,16,17,19,20]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnitek\",\"httpPortOpen\":true,\"ip\":\"4.1.3.1\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":511.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnitek\",213],\"dataMap\":{\"omnitek\":[3094528499763.5005,174234,174447,639]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":12246466225496.406,\"onlineMoneyMade\":3094528499763.5005,\"onlineRunningTime\":9.010000000000002,\"pid\":2456623,\"ramUsage\":2.4,\"server\":\"omnitek\",\"threads\":213,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2611b5fe-619e-4658-b85f-dd46b8f0dce8\",\"moduleSequenceNumber\":9999}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2611b5fe-619e-4658-b85f-dd46b8f0dce8\",\"moduleSequenceNumber\":9999}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"omnitek\",\"moduleSequenceNumber\":9999,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"helios\",\"blade\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":97,\"hackDifficulty\":32.29400000000001,\"minDifficulty\":32,\"moneyAvailable\":3783042175.750001,\"moneyMax\":3783042175.750001,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1060,\"serverGrowth\":95}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-304490.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[36,136,40,102,45,183,190,55],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-447889.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[10,11],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-583814.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[194,54,173,24,181,107,51,57,46,111,155,34,83,105,11,55,60,18,32,78,63,65,160,25,7,49,48,87,185,187,55,196,149,156,41,16,76,136],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-330149.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[23,30],[21,24],[3,11],[21,23],[2,7],[5,8],[14,20],[17,18],[15,22],[18,25],[23,30]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-193317.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[112,128,77,30,122,112,182,177,58,112,52,16,103,17,63,123,160,88,22,191,145,77,121,174,133],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-936607-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[71,84,23],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-39357.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()(a))))(\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-192186-Aevum.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"705618185387\",-88],\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-479473.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[4,8],[1,6],[0,3],[2,5],[7,9],[3,5],[3,8],[1,4],[2,9]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955387.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"1211723\",36],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-510348.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-7,-5,-2,-8,-6,4,8,10,-1,-5,-10,3,6,4,7,4,-5,4,1,-2,10,4,0,9,-3,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-583588.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[92,[1,3,4,6,7,10,12,13,15,17,19,21]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-293037-Sector-12.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[120,[1,2,3,5,7,8,10,11]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-260362.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":741808652,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-28859-NWO.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"WWWWWWW77UghhhhhhhhhhhhAZZZZZZZZZ0G6rrrrrrnnnnnnnnnnnnwwp4dD77ooo\",\"reward\":{\"name\":\"NWO\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"4sigma\",\"httpPortOpen\":true,\"ip\":\"41.1.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"4sigma\",\"moduleSequenceNumber\":9985,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"stormtech\",\"nwo\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":2202198445.1,\"moneyMax\":5505496112.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1202,\"serverGrowth\":90}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-411421.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,1,7,1,4,3,0,3,3,2,3,2,2,5,0,3,2,5,1,1,4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-329317-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[84,118,12,116,54,70,194,24,140,32,116,6,183,66],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-322888-TianDiHui.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"000110000100011010001100100\",\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-533709.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((aa(((()()(\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-493644.cct\",\"type\":\"Total Ways to Sum\",\"data\":28,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-592842.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[185,163,98,137,114,81,128,31,137,18,22,77,143,141,102,1,172,38,74,49,29,144,110,125,100,13,15,100,15,143,145,83,55],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-873557-Bachman&Associates.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"UUgghIIvvvvvvvxxjerr44444444444444oo6llllllllllllfUUfff4LLLLLLLLDDJJJJJJJJJiiqqq\",\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-254270.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[5,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-296294.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,0,1,0],[0,0,1,0,0,1,0,0,0,1,0,0],[0,0,0,1,0,1,0,0,0,1,1,0],[0,0,0,1,0,0,1,1,0,1,0,0],[0,0,0,0,0,0,0,1,0,0,1,0],[0,0,0,0,1,0,1,0,1,0,1,0],[0,1,0,0,0,1,0,1,1,0,0,0],[1,0,0,0,0,1,1,0,0,0,0,0],[0,0,1,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-4772.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"oeE03030oeE03030oI2qx2qx2qxKxBOelaqxKFOaxKFOax4fF1r1r1r1r\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-430782.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[9,7,162,152,134,62,186,90,12,35],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-832677.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"Paa555cc66Kdd00000000kkUUjjrkk4444444444444VVhhaakkkkkkkkkNNNNvppjGGGGGGGGGGGGGGhRRLee0hhh\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-439716.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":1352816194269389,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-422583-TianDiHui.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,1,5,2,0,0,0,2,3,4,1,1,1,4,0,1,2,2,3,0,4,0,1,2],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-355835.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[62,159,136,145,77,142,92,115,30,187,192,72,139,167,135,73,39,29,51,178,38,73,31,163,185,27,176,29,122,93,121,34,71,196,80,194,23,110,91,160,112,84,45],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"kuai-gong\",\"httpPortOpen\":true,\"ip\":\"0.3.6.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"kuai-gong\",\"moduleSequenceNumber\":10013,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\",\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":2228780193.4,\"moneyMax\":5571950483.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1024,\"serverGrowth\":93}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-592793-BladeIndustries.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,4,1,3,2,6,0,4,3,1],\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-582492.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())a))aa)a((a(a\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-952205.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"4A64A64A6oGojYOPr6oGoj7EZPjmcjUp0mjmcjP2jAh8kCpCufFf7E8oHet7rrrrrr\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-303876-Daedalus.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":519244534,\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-994395.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"848547\",53],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-914210-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[38,165,17,46,154,40,131,171,62,155,104,186,130,148,142,7,172,80,185,61,176],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-367344-Netburners.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[130,56,107,157,36,86,176,108,138,178,193,16,121,132,144,130,122,129,34,144,6,68,11,187,57,37,12,164,69,5,148,179,38,181,22,60,128,156,71,188],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-945386.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[112,111,10,92,94,44,178,193,113,136,147,72,43,113,2,44,140,2,33,92,151,45,132],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-551222.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[5,197,110,127,155,5,118,55,35,197,59,38,35,71,111,63,39,114,56,164,149,101,76,17,7,136,163,88,49,185,127,94,190,98,28,95,120,17,142,84,115,52,72,45,34,103,127,85],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-94219.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0],[0,1,1,1,1,1,1,0],[0,0,0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-195920.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01010100101111110110100100000001110\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-147799.cct\",\"type\":\"Array Jumping Game\",\"data\":[10,1,10,1,0,7,6,3,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-85851.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":311943669,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-784666.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"))(a)))\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-601031.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"AAnMM5555555555555555566666666wDDSShc11DDTTTTTTTod111nnnnnnGGVVtttttttttttUQQIIIIIIIIII\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-410707.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[96,154,143,124,63,74,70,126,58,127,33,29,167,22,5,83,97,85,153,35,25,167,97,158,96,159,193,84],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":true,\"ip\":\"94.2.8.4\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":1022.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"fulcrumtech\",426],\"dataMap\":{\"fulcrumtech\":[345804742851.75006,348894,348894,852]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":23348402897207.965,\"onlineMoneyMade\":345804742851.75006,\"onlineRunningTime\":9.010000000000002,\"pid\":2456626,\"ramUsage\":2.4,\"server\":\"fulcrumtech\",\"threads\":426,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f55d51e9-c8e0-4444-b35b-97e6f0463d0e\",\"moduleSequenceNumber\":10012}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f55d51e9-c8e0-4444-b35b-97e6f0463d0e\",\"moduleSequenceNumber\":10012}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"fulcrumtech\",\"moduleSequenceNumber\":10012,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"run4theh111z\",\"kuai-gong\",\".\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":32.716000000000065,\"minDifficulty\":31,\"moneyAvailable\":422228013.25000006,\"moneyMax\":422228013.25000006,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1164,\"serverGrowth\":83}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494199.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[2,6],[1,3,7],[7,6,8,9],[8,7,3,6,2],[6,5,9,4,3,9],[6,2,8,5,5,1,3],[4,5,7,9,3,2,7,1]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-25218-Daedalus.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[72,194,45,131,96,197,167,138,48,3,128,21,16,28,31,194,22,21,49,82,20,134,70,74],\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-219522.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[34,137,74,28,152,15,97,92,182,35,138,100,111,61,93,81,42,172,78,119,113,132,2,60,69,153,191,64,93,104,44,172,161,122,17,177,86,112,173],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-611549.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[5,3],[3,7,1],[7,7,1,4],[2,5,5,2,6],[4,2,5,3,9,2],[6,2,2,9,7,7,4]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-694372.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[1],[6,3],[9,8,5],[1,2,3,1],[5,1,6,4,4],[3,9,5,1,8,5],[7,9,2,5,5,1,5]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":true,\"ip\":\"10.9.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"fulcrumassets\",\"moduleSequenceNumber\":10024,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":100000,\"moneyMax\":250000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1208,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-58285.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"Gjlxmmmmmmmmmo3rgUcr7crOMAvP4Bz4Bz4B61X4Bz4B61XQBDE85JpjoQJpj1QOlQJpj1QQaK6YVs\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-765372-TianDiHui.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"hhhhhhhhhhgggggggggggoCCQQQQbbOOXggggggggg2ii666666666666IIlllaOO0OOOO\",\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-113647.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":48510410481433,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-577393.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,3,2,6,1,3,0,1,2,1,6,5,3,3,1,4,2,1,2,2,2,3,4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-907979.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[1,2],[3,9],[2,5],[3,8],[4,6],[4,9],[3,5],[2,7],[0,4],[4,5],[2,6]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-262498.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"o0o0o04mLmLmLmNamLmxmLm0ya7wBd4BBBBBm4BBBsef16BUB8UB8UB888UB888UB8lGcGcGcRpgvSGcGcQM6rTGcGcQ\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-263387.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()()a(((aa(a((((a))\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-753460.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[163,161,61,44,5,13,98]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-693146.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-52456.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[115,122,197,155,175,85,27,63,36,66,150,35,47,164,102,98,27,32,19,43,71,68,71,97,191,108,129,125,157,177,94,71,146,73,126,139,99,40],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-912282.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":20396387889,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"stormtech\",\"httpPortOpen\":true,\"ip\":\"84.6.7.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"stormtech\",\"moduleSequenceNumber\":9983,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"microdyne\",\"4sigma\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":116797851.10000001,\"moneyMax\":291994627.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1034,\"serverGrowth\":88}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-627197.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[14,45,14,15,10,31,34,44,39,34,9,41],[34,2,30,23,15,17,36,49,36,7,32,46],[23,13,24,14,48,27,21,28,46,30,9,22],[18,28,29,46,35,18,4,15,48,28,21,45],[12,8,16,20,8,33,39,47,13,49,17,20]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-594542-ClarkeIncorporated.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,0,1,0,0,0,0,0,0,0],[1,0,0,0,1,1,0,0,1,0,1,1],[0,1,0,0,0,0,0,0,0,0,0,1],[1,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,0],[0,0,0,1,0,1,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,1,0],[1,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-380126-Illuminati.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[103,48,159,81,48,129,57,157,85,169,108,97,27,177,97,20,178,26,32,71,189,35,117,174,50,154,58,47,34,188,165,147,97,163,26,98,142],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-838566.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")))()()a\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-237050.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"362380143\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-540079.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,3,7,0,8,3,7,5,0,0,8,5,1,5,9,0,0,7,1,6],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-928110-NWO.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,3,10,3,0,4],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-53138.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[4,12],[24,28],[21,30],[14,23],[19,22],[24,26]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-34398-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[49,51,75,28,51,23,100,175,199,3,182,143,9,28,171,58,118,56,139,83,189,113,192,186,102,129,55],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-559366.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[8,3],[7,7,4],[8,8,5,9],[9,7,2,2,5]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-146127.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[6,6],[9,5,2],[2,4,4,4],[4,1,8,8,9]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"defcomm\",\"httpPortOpen\":true,\"ip\":\"10.4.8.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"defcomm\",\"moduleSequenceNumber\":9946,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\",\"nova-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":81711865.9,\"moneyMax\":204279664.75000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1037,\"serverGrowth\":64}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-912603.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[185,153,164,189,190,66,101,35,133,150,92,60,188,70,26,136,150],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-984418.cct\",\"type\":\"Total Ways to Sum\",\"data\":77,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-279801.cct\",\"type\":\"Total Ways to Sum\",\"data\":51,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-190561.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[4],[4],[5],[46],[22],[12],[16],[27],[5],[14],[35],[37],[17]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-532970.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-236194-NWO.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[3,7],[4,6],[0,1],[5,8],[0,3],[5,6],[4,8],[1,6],[3,6],[1,7],[0,5],[4,7],[5,7],[7,8],[1,8]]],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-615290-Illuminati.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[5,-10,-6,4,8,-10,-3,-6,-2,-9,-8,6,-3,-5,-4,-5,8,-4],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-43658-NWO.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"00110100101111011000100010110111000111111\",\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-661800.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":1139386772452,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-649610.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"LL33333MhhyyyyyyyyyyyJJWPPPPPPPPt0R22zzzzzzzzYhhhhhhhhhhRRRRpDwwwwwwwKLmm4\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-947632.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1011111010001000101\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-300584.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[1],[6,7],[2,8,2],[6,5,2,2]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"infocomm\",\"httpPortOpen\":true,\"ip\":\"16.5.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"infocomm\",\"moduleSequenceNumber\":9976,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":81,\"hackDifficulty\":81,\"minDifficulty\":27,\"moneyAvailable\":68771414.9,\"moneyMax\":171928537.25000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":896,\"serverGrowth\":61}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-553585.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,3,2,1,5,0,1,1,1,4,4,2,4,2,2,3,5,3,5,2,2],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-452803.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"83879002490\",-90],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-483687-ECorp.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[32,31,14],[48,46,31],[10,13,35],[3,50,35],[45,20,37],[39,18,11],[41,44,4]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-447699.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-397979.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[11,83,102,76,78,132,187,18,136,56,77,72,86,75,51,134,81,170],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-252710.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"243214130190\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-658989-TheCovenant.cct\",\"type\":\"Total Ways to Sum\",\"data\":18,\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-549003.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,10,7,2,5,5,2,5,9,7,4,5,4,0,9,9,9,7,0,9,2,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-147507.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[1,10],[21,27],[6,16],[8,12],[4,13]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-977827.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[8,9,-3,-10,-5,-5,10,-2,3,2,5,3,-2,-2,0,-8,-4,-3,-4,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-849841.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0],[0,0,0,0,1,0,0],[0,1,0,0,0,0,1],[1,0,0,0,0,1,1],[0,0,1,0,0,1,1],[0,1,0,0,1,0,1],[0,0,1,0,0,0,1],[0,1,0,0,0,0,0],[0,0,0,1,1,0,0],[1,0,0,0,1,0,0],[0,1,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-477982.cct\",\"type\":\"Array Jumping Game II\",\"data\":[0,0,3,2,4,5,8,0,2,2,4,5,4,1,3,2,3,2,2,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-977171.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,4,4,4,3,2,2,3,3,1,3,4,2,6,2,2,1,3,1,6,3,1,2,1,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-274417-TianDiHui.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a))a(()a\",\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"helios\",\"httpPortOpen\":true,\"ip\":\"69.5.1.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"helios\",13],\"dataMap\":{\"helios\":[146953817792.00003,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":698539164281.7534,\"onlineMoneyMade\":146953817792.00003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456622,\"ramUsage\":2.4,\"server\":\"helios\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1b86d81a-64c2-44d6-8963-5107eae514df\",\"moduleSequenceNumber\":9996}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1b86d81a-64c2-44d6-8963-5107eae514df\",\"moduleSequenceNumber\":9996}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"helios\",\"moduleSequenceNumber\":9996,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":31.55200001191096,\"minDifficulty\":30,\"moneyAvailable\":179650144.00000003,\"moneyMax\":179650144.00000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":832,\"serverGrowth\":73}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-392102.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")))))(()a()(()(a)\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-876011.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"176240159\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-655195.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0],[0,0,0,0,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,1,0],[0,0,0,0,0],[1,1,0,0,0],[1,0,0,0,0],[0,1,0,0,1],[0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-394022.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"140611090\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-623933.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a)()((\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-148254.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0],[1,0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-299351.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"k55555555552nnnnnnnnnn0mm8888888888vvvNN66CCCCCCCCCCCRRRRRRRRcYYB\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-627336.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"0IIIIIIIIIIIIwwwwwwwwww55554KOhxxalljjrrYYYYYYYYRR446HCCB7iiGGGGGGGGeeFFFFFFFFFFcc\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-952669.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"658112241\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-867903.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[179,183,14,14,172,64,14,77,144,196,67,191,108,174,92,72,22,128,163,76,68,190,32,27,134,97,16,153,182,111,159,39,171,20,126,25,158,108,24,68,173,101,179,29,151,199,32,64,36,107],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-10584.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[1,4],[4,8],[2,9],[5,8],[3,5],[3,10],[5,9],[1,7],[4,10],[1,9],[0,4]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-27953.cct\",\"type\":\"Total Ways to Sum\",\"data\":87,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772314.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[58,68,89,19,185,143,15,112,158,148,21,50],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-92587.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[25,38,22,3,36,16,2,46,24,30,46,27,29,37,35],[13,29,46,36,22,14,47,11,4,46,2,25,35,37,40],[31,17,47,38,26,48,4,47,49,9,21,39,32,6,39],[26,49,26,7,3,24,14,25,7,33,1,13,21,30,34],[19,47,31,19,4,3,6,11,19,7,30,34,42,16,42],[32,39,47,50,27,38,15,40,10,7,13,4,45,6,8],[10,34,40,50,39,40,18,8,1,18,6,49,2,6,26],[28,42,50,29,46,40,9,17,37,28,38,14,22,14,21],[3,36,20,12,45,25,47,3,15,18,20,15,2,21,15],[11,8,37,23,19,39,25,33,44,8,14,34,19,11,12],[12,35,48,35,29,37,31,2,28,31,32,47,27,6,28],[43,46,5,6,6,20,13,34,19,46,48,32,11,5,9]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-502779.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"39251431\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955361.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01110000011101011110101101111100011101000\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"vitalife\",\"httpPortOpen\":true,\"ip\":\"33.1.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"vitalife\",13],\"dataMap\":{\"vitalife\":[147890271028.50003,10647,10634,39]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":684568380996.1392,\"onlineMoneyMade\":147890271028.50003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456621,\"ramUsage\":2.4,\"server\":\"vitalife\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///dba87fe8-ba8d-43bb-86b7-25e60b56f87d\",\"moduleSequenceNumber\":9990}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///dba87fe8-ba8d-43bb-86b7-25e60b56f87d\",\"moduleSequenceNumber\":9990}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"vitalife\",\"moduleSequenceNumber\":9990,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":30.806000012208866,\"minDifficulty\":29,\"moneyAvailable\":0,\"moneyMax\":180574201.50000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":833,\"serverGrowth\":80}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-85671.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[171,15,64,98,106,196,177,179,83,77,132,156,189,48,120,32,163,107,145,118,138,131,35,70,127,81,44,115,34,117,191,162,160,45,132,47,78,193,26,143,95,122,25,120,83,114,5,93],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-175521.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"41992164\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-68128.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"91cM7CuDVq07IwATTJL557pQLgvwI386q7LKgw550424TYKR575goNPt737I74VE6P675zYZMY\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-222743-TheCovenant.cct\",\"type\":\"Total Ways to Sum\",\"data\":41,\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-871578.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"jjYKKKKKKKKKKKKeej4MMiinoooooovvAjjjjjjjjjjjhh665sTtt\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-710625.cct\",\"type\":\"Total Ways to Sum\",\"data\":47,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-218077-Sector-12.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"179344355\",15],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-622745-Daedalus.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"DffX5556222222CCUURRNCCCCGGGGGGGGGGCCCCCCCjRRRRRRRRRRRRRRmmbbM22\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-420512.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9UChcKWJBW098h64aciq68953Yv5a9995qBTVMq6S02Y6567rweEofC632eL871Y\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-750346.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[11,13],[19,21],[24,29],[4,12],[17,19],[17,25],[20,29],[13,18],[1,11],[13,14],[11,13],[19,24],[1,2],[25,35]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-846695-TheCovenant.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"440318867356\",-9],\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-441389.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"4T83T934S67U4373Lqiu14746nFbFLg462AN560581v623uDe393GjY246NZmjQE75\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-594427.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[27,106,170,155,51,42,57,175,92,75,44,139,179,167,97,126,38,4,163,97,194,24,199,85,49,97,128,165,146,25,87,186,34,57,49,171,191,121,26,39,77,192,33,134,87,168],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-97682-Illuminati.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"7763700\",-52],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"icarus\",\"httpPortOpen\":true,\"ip\":\"53.4.5.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"icarus\",\"moduleSequenceNumber\":9950,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":91684092.30000001,\"moneyMax\":229210230.75000006,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":908,\"serverGrowth\":87}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-371874.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"444444448llllkk55YoonnnnnnnnnnnuLoHWacccccccccBFZGGYfRRWWWWWWWWW\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-874455.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[29,27,10,21,29,41,34],[31,23,24,25,33,45,47],[50,21,46,25,1,40,43],[17,6,50,2,43,31,25],[35,2,33,13,2,24,29],[44,23,35,7,50,11,1],[18,34,10,2,40,9,1],[19,11,39,9,15,49,6],[47,46,5,6,19,34,21],[23,21,28,36,31,9,30],[38,26,49,36,13,34,11],[38,50,46,39,20,50,14],[23,48,24,45,12,22,9],[19,33,34,33,16,25,47]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-102417.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":513229574,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-850151.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,6,2,0,0,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-524192.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":7,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-249701.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,2,-1,-10,9,8,-10,-9,-10,1,0,1,5,-4,4,-1,3,-4,6],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-323506-OmniTekIncorporated.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[97,24,30,134,48,51,74,185,173,183,77,149,65,88,22,48,143,197,174,145,108,154,32,170,100],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-452840.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"188420945\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-136961.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[5,155,66,160,126,84,194,6,73,43,28,126,32,28,110,40,29,160,106,88,135,148,79,154,21,41,166,96,35,79,148,4,15,180,78,43],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-841048.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[7,15],[8,17],[10,11]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-707914.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9aTQz1d73M04bMbM567qjnWVVM217Lrk667h5506407118651L429LMfrBSG5U0384r\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-942146.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,1,1],[0,0,0],[1,0,0],[0,0,0],[0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-388934.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0],[0,0,0,0,0,0],[1,0,0,0,1,0],[1,0,1,0,0,0],[0,0,0,0,0,1],[0,0,0,0,0,1],[1,1,0,0,1,0],[0,0,0,0,1,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-893762.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"qq4iiiiiii2ii1wwwwvvss8CEEEEEETTppppppppCCOyUUwwessmmmmmmmmmmmgeffffffffff0PPFaaaaaaa444444444411j\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-726557.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()))))a(()a((a(((\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-261870.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[5,9],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"univ-energy\",\"httpPortOpen\":true,\"ip\":\"40.6.5.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"univ-energy\",6],\"dataMap\":{\"univ-energy\":[228719410932.00003,4896,4890,54]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":319178664294.89197,\"onlineMoneyMade\":228719410932.00003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456602,\"ramUsage\":2.4,\"server\":\"univ-energy\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///98f318a5-76bc-4c26-bd20-a267e2b542cc\",\"moduleSequenceNumber\":9954}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///98f318a5-76bc-4c26-bd20-a267e2b542cc\",\"moduleSequenceNumber\":9954}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"univ-energy\",\"moduleSequenceNumber\":9954,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\",\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":31.484000011584854,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":280293395.75000006,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":836,\"serverGrowth\":88}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-576822.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,5,10,0,1,2,10,0,0],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-286583.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((())))a(a\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-195794.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,1,0,0,1,0,1,0,1],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,1,1,0,1],[1,0,1,0,1,0,0,0,0],[1,0,1,1,0,0,1,0,1],[0,0,1,0,1,0,1,0,0],[0,1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0],[1,0,1,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-802027.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,1],[0,0,1,0,1,0,1,0,0,0],[0,0,0,0,0,0,0,1,1,0],[0,0,0,1,0,0,0,0,0,0],[1,0,0,1,1,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-188856.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[32,183,22,64,118,125,124,101,88,142,40,15,33,44,185,20,41,160,122,59,20,139],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-578795.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,13,26,38,9,28,43,27,26,15,46,50,6],[41,2,29,8,48,43,38,49,46,43,32,39,22],[28,40,25,34,9,10,31,16,3,8,7,44,9],[22,1,18,44,30,5,18,27,29,33,12,37,3],[43,50,5,47,25,36,35,39,26,11,43,28,14],[18,32,10,45,31,24,9,14,23,29,47,22,1],[20,42,12,34,26,27,19,37,48,24,5,2,16],[4,17,16,23,47,3,36,15,45,15,29,4,34]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-862663.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[6],[4,2],[7,1,8],[4,1,6,9],[1,7,5,6,9],[7,4,1,9,9,3],[1,7,6,8,6,3,1],[6,2,1,2,8,3,9,6],[1,1,6,1,5,1,9,2,6],[6,1,1,3,4,6,9,2,1,2],[6,7,8,4,9,6,4,4,5,6,9],[8,4,8,8,4,1,1,4,4,4,3,2]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-657771.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"9369794790\",-2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-387814.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[11,13],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-849257.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((aa()))(())(((()()\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-677182.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[3,4],[3,4],[7,10],[8,9],[3,8],[7,9],[2,3],[0,6],[6,10],[4,10],[0,2],[2,10],[5,9]]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"titan-labs\",\"httpPortOpen\":true,\"ip\":\"4.5.1.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"titan-labs\",53],\"dataMap\":{\"titan-labs\":[160528847251.50003,43407,43354,159]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2306791255585.8506,\"onlineMoneyMade\":160528847251.50003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456603,\"ramUsage\":2.4,\"server\":\"titan-labs\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///edd75feb-bb69-400f-81a2-9fcbc1d4b1c4\",\"moduleSequenceNumber\":9958}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///edd75feb-bb69-400f-81a2-9fcbc1d4b1c4\",\"moduleSequenceNumber\":9958}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"titan-labs\",\"moduleSequenceNumber\":9958,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"taiyang-digital\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":24.876000000000033,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":196005918.50000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":860,\"serverGrowth\":70}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-523232.cct\",\"type\":\"Total Ways to Sum\",\"data\":73,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-593466.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[1,7],[14,18],[1,7],[17,19],[20,29],[21,28],[13,21],[16,17],[6,15],[22,28],[5,7]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-114572.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0],[1,0,1,0],[0,0,0,1],[0,0,0,0],[1,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-686371.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[168,173,82,6,40,96,66,123,106,106,42,191,117,21,189,42,86,157,25,34,76,114,124,193,110,97,59,130,59,17,130,187,31,54,52,97,43,140,136,33],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-197892.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"41069351\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-133603-MegaCorp.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"3QVY739b3u6b8uRZ03IEJ581v629SLrIeFVw70378l481N993W7B872KP\",\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-428022.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a(())()()\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-886746.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[46,199,110,89],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-601330.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01011100100010100000101001011100011\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-665491.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"UuDHc0ggMMMMMMMMMMmmfaaHHHHHHkkccssssskkIIRvvvvvvvvGGiyyyyyy66OOOAAAANNNNNNNNNtee44qqqqqqqq\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-66562.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,1,1,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-814948.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[32,8,14,8,4,38,20,35,41,19,21,19,15,4,47],[20,6,28,11,50,37,21,41,5,2,27,10,23,41,10],[9,45,37,42,49,2,43,40,31,13,25,21,6,27,20],[36,14,22,44,49,20,14,25,28,44,33,28,12,14,9],[17,9,36,26,24,23,8,29,27,47,16,36,14,23,19],[22,5,16,27,41,10,41,11,10,7,21,18,5,1,17],[44,39,39,45,42,9,5,7,15,34,7,20,41,44,35],[9,13,5,22,15,9,46,27,13,30,47,36,24,23,49],[50,33,8,2,36,26,7,24,14,28,8,24,42,5,1],[17,17,28,9,24,18,10,27,42,49,45,40,40,6,48],[38,5,14,26,3,15,21,18,4,37,21,31,10,2,39],[10,33,13,31,27,40,41,46,26,45,33,42,41,43,1],[1,18,22,26,44,46,42,23,40,2,48,22,4,34,6],[13,44,11,8,8,46,36,42,44,49,3,33,13,47,19],[36,10,12,23,48,39,15,3,44,47,50,3,7,26,19]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-519597.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":18302181,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-198677.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"AL5gb8qegb8qeg861Wy8qeg861WyRIY1WyRIY1WWyRIY1WWyyRIYhfPyRIPxxxxJZxxxJuZSJpUrAHOtttttOtttOttOtt\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"microdyne\",\"httpPortOpen\":true,\"ip\":\"67.2.7.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"microdyne\",6],\"dataMap\":{\"microdyne\":[132515533596.00002,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":257922152965.5838,\"onlineMoneyMade\":132515533596.00002,\"onlineRunningTime\":9.010000000000002,\"pid\":2456620,\"ramUsage\":2.4,\"server\":\"microdyne\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0cecb9e0-9455-48f3-8134-7bb9a718fe66\",\"moduleSequenceNumber\":9982}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0cecb9e0-9455-48f3-8134-7bb9a718fe66\",\"moduleSequenceNumber\":9982}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"microdyne\",\"moduleSequenceNumber\":9982,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-def\",\"stormtech\",\"vitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":24.862000011582182,\"minDifficulty\":23,\"moneyAvailable\":0,\"moneyMax\":162396487.25000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":873,\"serverGrowth\":74}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-804616-BladeIndustries.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"18320719163\",\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-459250.cct\",\"type\":\"Total Ways to Sum\",\"data\":70,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-850510.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0],[0,0,0,0],[1,0,0,0],[0,0,0,1],[1,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-635072-ClarkeIncorporated.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[68,49,30,174,165,185,153,15,141,191,47,197,198,86,64,153,122,186,85,8,17,102,75,80],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-891191.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,0,0,0],[1,1,1,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-820080.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[1,6],[1,3,9],[7,5,4,1],[6,2,3,7,5],[9,9,7,4,9,4],[6,2,9,4,1,9,1],[6,9,2,7,8,3,1,5],[6,8,5,1,5,4,1,2,5]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-133214-NWO.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[18,21],[25,35],[12,13],[15,24],[8,13],[7,13],[11,17],[5,15],[25,34],[22,27]],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-234503.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"94S08MD8RK017993ARK421G910986Nri052166RdOS1V948QqNOQ6Y6912nd\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-573635.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,5,4,3,1,1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-483574.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[5,3],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":true,\"ip\":\"6.9.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"taiyang-digital\",\"moduleSequenceNumber\":9955,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"univ-energy\",\"titan-labs\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":86080854,\"moneyMax\":215202135,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":878,\"serverGrowth\":70}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-973937-Illuminati.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[78,[1,3,7,9,10,11,12,17,18]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-301091.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[124,169,91,165]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-279686.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[165,22,169,48,160,57,104,164,152,190,18,107,67,121,36,141,108,49,57,104,67,168,182,149,58,48,178,139,131,43,110,127,55,172,55,134,83,86,43,62,183,93,180,111,61,193,193,125,51]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-284079-FourSigma.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":718421213,\"reward\":{\"name\":\"Four Sigma\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-972409-ECorp.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-314716.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"607397202\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-675679.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"zzzzzzzzzzkkQQQQQQQQQQQQQkkWW88XXXXXXXXXXXss88JJfjfzzMMMMMMMMMMMG2BHH00cc\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":true,\"ip\":\"20.8.2.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"galactic-cyber\",\"moduleSequenceNumber\":9926,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":81985114.30000001,\"moneyMax\":204962785.75000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":827,\"serverGrowth\":89}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-116890.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a)()()(()(\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-44216-Illuminati.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,1,0,1,0,0,0],[0,0,0,0,0,1,0,1,0,0],[0,0,0,1,0,0,0,0,1,0]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-548716-Illuminati.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":282157127,\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-390466-Netburners.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[57,105,107,102,137,1,147,135,88,50,14,14,152,21,110,136,23,92,126,135,60,104,41,115,49,165,96,152,140,111,90,21,122,125,181,18,80,109,148,47,146,28,49],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-907830.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,7,-8,-6,-3,-3,3,-8,-8,-6,-6,-3,1,1,-1,-6,9,-1,-6,-7,9,9,6],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-19651.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((a(()\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-57088.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,1,0,0,0,1,0,1,0],[0,0,0,1,0,0,0,1,1,0],[0,0,0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-947401.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":763269834,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-725180-Daedalus.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((a(((aa\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-191424.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[55,136,196,50,165,73,130,59,86,61,104,141,160,191,27,28,193,17,173,156,179,106,79,10,1,66,108,57,94,31,59,156,168,39,30,113,133],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-685115.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9SSSmB8DGQ1475ee7uXl869JWFmzCrMD8505409617138SAMS1xFB985mAY8S32\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-704682-Netburners.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,1,1,0,1],[0,1,0,0,0,0,0,0,0,0,0],[1,0,0,1,1,0,0,0,0,0,1],[0,0,1,0,1,1,1,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0],[1,1,1,0,1,0,0,1,0,0,0]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-183712.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[23,33],[6,16],[18,27],[14,18],[23,31],[7,12],[11,12],[14,24],[14,20]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-714840.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1011000111100010011\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aerocorp\",\"httpPortOpen\":true,\"ip\":\"39.8.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"aerocorp\",\"moduleSequenceNumber\":9942,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"alpha-ent\",\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":116763831.2,\"moneyMax\":291909578,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":907,\"serverGrowth\":56}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-279236-ECorp.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":4,\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-825114.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0],[0,0,0,0],[0,0,0,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,1,0],[0,1,1,1],[0,0,0,0],[0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-505072.cct\",\"type\":\"Total Ways to Sum\",\"data\":64,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-705859-ClarkeIncorporated.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"844076719\",0],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-8419.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":13453174,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-569655-Illuminati.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[158,153,60,42,106,163,65,116,166,100,142,181,101,11,63,188,79,162,35,87,107,183,76,179,121,144,187,115,124,121,135,79,106,97,101,20,103,122,181,43,129,155,75,122,106,185,87,177],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-589507-Daedalus.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"231216232231\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-59622.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")((()a()a(a))\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-620340-ClarkeIncorporated.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[7,11],[1,11],[4,11],[1,7],[0,5],[1,5],[3,7],[6,8],[1,8],[2,9],[5,9],[8,10],[6,11],[7,8],[3,4]]],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-548912.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,6,0,2,4,2,1,2,0,1,1,6,1,4,5],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omnia\",\"httpPortOpen\":true,\"ip\":\"45.3.5.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omnia\",13],\"dataMap\":{\"omnia\":[195532007784.75,10647,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":705954753824.5392,\"onlineMoneyMade\":195532007784.75,\"onlineRunningTime\":9.010000000000002,\"pid\":2456597,\"ramUsage\":2.4,\"server\":\"omnia\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///99601674-b9a0-49a7-890f-19b280aa3abb\",\"moduleSequenceNumber\":9931}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///99601674-b9a0-49a7-890f-19b280aa3abb\",\"moduleSequenceNumber\":9931}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"omnia\",\"moduleSequenceNumber\":9931,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":30.810000011914497,\"minDifficulty\":30,\"moneyAvailable\":0,\"moneyMax\":238744820.25,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":859,\"serverGrowth\":68}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-435631.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[148,20,178,127,171,131,44,87,86,112,154,184,34,142,12,31,1,192,90,136,37,128,13,120,60,107,29,116,197,48,99,107,72,111,107,88,79,138,36,122,83,75,37,76,181,114,134,101,152,177],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-201393-Daedalus.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[17,[2,7,8,9,13,14,15,16,17]],\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-24285-ClarkeIncorporated.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-480843.cct\",\"type\":\"Total Ways to Sum\",\"data\":29,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-436337.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"StlxxxxxxxxxxmxxxXf2IGkRjnhRmnhRmnhRmnAjlX6xEmEmEmEmEmEOiVBESdSdSBESdSdSBElg\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-417177.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[142,167,33,67,22,118,150,123,80,1,28,3,94,169,151,75,56,111,36,126,116,100],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-402086.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((()()))(((\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-206414.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"1992526163\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-809483-FulcrumSecretTechnologies.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"6TsFFee66uuooHHHpppppppppppLL00LLLLKKkkkkkkk777YsJWWTTzzUUrrrrrr\",\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-74858.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[29,32,46,19,3,42,9,11],[6,6,25,38,22,23,22,2],[32,23,32,12,50,50,34,48],[33,5,32,46,15,32,18,9],[39,48,10,6,28,43,42,26],[37,13,21,3,29,18,33,4],[40,42,17,32,6,37,8,21],[47,6,26,15,10,50,15,30],[44,1,12,37,30,48,34,2]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-885797.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":951,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-230151.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,3],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-169068.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[5,-4,8,1,-2,0,2,-1,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-861088.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,1,1,0,0,0,0],[0,1,0,1,1,0,0,0,1,0,0,0],[0,0,0,0,1,1,0,1,1,0,1,0],[0,0,1,1,1,0,1,0,0,0,0,1],[0,0,1,0,1,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-309781.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[82,179,142,28,31,23,177,3,181,151,200,66,193,105,64,80,95,143,171,164,184,184,151,66,8,73,42,11,61,174,53,131,150,32,82],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-477133.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"858112475\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-701038.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[151,124,4,7,27,140,14,76,70,35,147,9,72,40,169,113,99,163,74,156,198,75,159,24,86,162,19,57,199,145]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-def\",\"httpPortOpen\":true,\"ip\":\"96.3.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"zb-def\",\"moduleSequenceNumber\":9978,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"applied-energetics\",\"run4theh111z\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":58,\"hackDifficulty\":58,\"minDifficulty\":19,\"moneyAvailable\":94227132.30000001,\"moneyMax\":235567830.75000006,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":820,\"serverGrowth\":67}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-79907.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0],[1,0,1,0,0,1,0],[0,0,0,1,0,0,0],[0,0,0,1,1,0,0],[1,1,0,1,0,1,1],[0,0,0,0,0,1,0],[0,0,0,0,0,1,0],[1,0,1,0,0,0,0],[0,0,0,0,0,0,0],[1,0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-159326.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-6,8,7,7,8,8,6,5,-2,10,6,-6,-2,2,-6,1,-7,-3,2,-8,2,9,7,-3,-4,1,5,-2,-3,0,5,-10,8,7,9,0,-5,-7],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-718390-FourSigma.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[93,180,140,141,158,96,191,33,29,144,163,114,179,3,195,77,188,127,16,130,102,2,177,137,41,119,102,178,34,119,123]],\"reward\":{\"name\":\"Four Sigma\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-562519.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,0,1],[0,0,0],[0,0,0],[0,0,1],[0,0,0],[1,0,0],[0,1,0],[0,0,0],[1,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-613593.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[143,34,157,137,129,66,128],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-35700-Illuminati.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"00011110010111111010111110000001001111110110110000\",\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-930044.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,9,3,1,9,0,1,5,8,0,5,3,7,5,4,0,6],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-875555-Illuminati.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[24,27],[21,26],[3,5],[10,19],[2,8]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"applied-energetics\",\"httpPortOpen\":true,\"ip\":\"39.4.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"applied-energetics\",\"moduleSequenceNumber\":9992,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-def\",\"helios\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":86548365.4,\"moneyMax\":216370913.5,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":782,\"serverGrowth\":71}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-420260.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,0],[0,0],[1,0],[0,0],[0,0],[0,0],[0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-836358.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":265262834,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-612900.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[0,-10,-9,-9,2,9,-9,-9,-10,7,1,2,3,-10,10,8,5,2,1,9,-5,-9,9,7,0,-2,-4,1,-8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-26182.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"001101010011101000000\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-575864.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[14,87,196,192,27,25,133,187,43,52,59,58,133,120,194,109,110,56,32,62,2,161,114,57,66,73,187,61,154],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-763785-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[191,101,75,156,134,197,90,156,31,5,156,153],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-339804.cct\",\"type\":\"Total Ways to Sum\",\"data\":20,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-162171.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"17327412941\",29],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-653842-ECorp.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[3,5],[1,4],[0,11],[1,2],[5,10],[5,11],[7,8],[3,8],[0,1],[1,11],[7,9],[4,5],[1,10],[0,7],[1,3],[6,8],[9,11],[2,5]]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-552552.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[2,6],[2,9],[1,2],[1,8],[6,8],[1,4],[3,8],[2,5],[7,8],[4,6],[2,7],[4,5],[0,1],[0,8]]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-959399.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,1],[0,0,0],[1,1,0],[0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-256982.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"210117166167\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"solaris\",\"httpPortOpen\":true,\"ip\":\"26.5.4.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"solaris\",26],\"dataMap\":{\"solaris\":[156760067236.50003,21294,21294,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1173545795993.389,\"onlineMoneyMade\":156760067236.50003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456604,\"ramUsage\":2.4,\"server\":\"solaris\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///fd2c18da-9865-40de-acfa-9bee2e3d480f\",\"moduleSequenceNumber\":9961}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///fd2c18da-9865-40de-acfa-9bee2e3d480f\",\"moduleSequenceNumber\":9961}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"solaris\",\"moduleSequenceNumber\":9961,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":26.248000000000047,\"minDifficulty\":25,\"moneyAvailable\":0,\"moneyMax\":191404233.50000003,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":840,\"serverGrowth\":79}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-363347.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,8,7,7,7,4,0,8,7,4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-752179.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[45,40,190,196,188,125,173,76,17],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-438533-Netburners.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,1,0,0,0,1,1,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,1],[1,0,1,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,1,0,1,0,0,0,0],[0,1,0,0,0,0,0,0]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-307726.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[19,46]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-532671-MegaCorp.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"80145612\",-60],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-157350.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[10,[117,127,122,63,34,138,114,29,98,53,59,17,107,184,180,124,163,64,102,143,8,183,132,59,31,109,124,120,116,194,38,135,158,16,144,120,133,181,81,96,101,195,93,87,179,107,53,179,32,55]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-952510.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[5,8],[15,25],[23,30],[5,11],[10,18],[22,31],[5,6],[4,11],[20,21],[10,17],[8,18],[19,21]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-916192.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"90575\",-53],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-233722.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"evQYz260Op42j4d1E4d1E4d1nCU2140nnnnnnnC0nnnPnC0nnnPnYnPnYnPnDQzaaew\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-361090.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"4R6VA435XN85E960390527XNMG2tp351m4772tYW3qA52\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-658431.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[117,165,4,115,11,18,121,25,189,136,133,4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-773593.cct\",\"type\":\"Array Jumping Game II\",\"data\":[0,6,3,3,1,3,1,2,2,4,5,4,3,1,4,3,4,1,4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-703127.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"n8MNNn8MNNnJ0X4FsYSFxsYSFlTMGX6E8ITMGX6E8vHQQX6E6HQH7DuggkbHGvqtvvvvvr\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"deltaone\",\"httpPortOpen\":true,\"ip\":\"5.5.5.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"deltaone\",\"moduleSequenceNumber\":9944,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"aerocorp\",\"defcomm\",\"icarus\",\"univ-energy\",\"solaris\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":152293181.9,\"moneyMax\":380732954.75,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":819,\"serverGrowth\":54}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-867865.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[18,22],[4,6],[11,14],[24,28],[22,23],[4,5],[18,22],[10,11],[1,7],[14,24],[9,18],[10,19],[21,22],[20,28]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-407275.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,2,0,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-320330.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[6,9],[12,15],[9,14],[22,26],[12,16],[20,25],[17,24]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-318683.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()()(()aa)())((a\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-813609-MegaCorp.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"7415142204\",\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-401712.cct\",\"type\":\"Total Ways to Sum\",\"data\":68,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-564257.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,1,0],[0,0,0,1,0,1,0,1],[1,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,1],[0,0,0,1,0,0,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,1,1,1,1,0,0,0],[0,0,1,1,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-110139.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1001010110\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-677372-TianDiHui.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[31,118,100,3,137,101,97,47,40],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"global-pharm\",\"httpPortOpen\":true,\"ip\":\"86.8.4.9\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":7.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"global-pharm\",3],\"dataMap\":{\"global-pharm\":[346899928123.00006,2436,2436,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":148305237955.20633,\"onlineMoneyMade\":346899928123.00006,\"onlineRunningTime\":9.010000000000002,\"pid\":2456618,\"ramUsage\":2.4,\"server\":\"global-pharm\",\"threads\":3,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///32f1eb68-2906-427b-ac2d-0eaf16112a7a\",\"moduleSequenceNumber\":9970}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///32f1eb68-2906-427b-ac2d-0eaf16112a7a\",\"moduleSequenceNumber\":9970}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"global-pharm\",\"moduleSequenceNumber\":9970,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"lexo-corp\",\"unitalife\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":28.988000011525617,\"minDifficulty\":27,\"moneyAvailable\":427216660.25000006,\"moneyMax\":427216660.25000006,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":776,\"serverGrowth\":80}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-571640.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"LChuAMhuAMhERmFtn3bArLGbhaQhaQha5Fj1jB1jB1jBXcXcZnt330wFpwwFpwwFpWwwhowFpWwwhW\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-189961.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01110010001110001011101100110\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-643668.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[7,[147,173,6,63,173,174,99,33,101,186,146,69,198,3,136,139,60,102,186,186,129,142,119,155,192,54,161,50,5,63,182,160]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-282197-ClarkeIncorporated.cct\",\"type\":\"Array Jumping Game II\",\"data\":[4,2,2,2],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-529948-Netburners.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[186,66,195,103,159,92,39,178,164,67,64,42,97,105,96,135,43,88,90,140],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-583012.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"23626239135\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-880086.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[129,124,104,59,23,20,67,76,193,194,92,97,104,41,125,154,12,119,48,56,40,160,70,200,128,50,150,146,59,157,39,199,24,158],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-793381.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":915623769,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-40651-FulcrumSecretTechnologies.cct\",\"type\":\"Total Ways to Sum\",\"data\":73,\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-292844.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[80,31,7,100,178,98,117,78,2,47,36,122,79,183,79,141,157,131,39,46,97,68,54,25,106,128,20,51,195,54,78],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nova-med\",\"httpPortOpen\":true,\"ip\":\"62.5.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"nova-med\",\"moduleSequenceNumber\":9948,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"defcomm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":67,\"minDifficulty\":22,\"moneyAvailable\":111226804.60000001,\"moneyMax\":278067011.5,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":838,\"serverGrowth\":70}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-50019.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,-8,6,8,3,-9,-2,2,1,-2,5,3,5,-10,-10,0,9,-1,4,-4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-940968-ECorp.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[7,8],[3,4,6],[2,4,3,2],[4,9,6,3,6],[2,2,2,4,5,2]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-578310.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-394407.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[6,8],[6,8,3],[5,5,4,5],[4,2,9,2,6],[6,8,5,9,6,7],[3,6,1,5,2,1,2]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-4183.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[20,[1,2,4,5,7,9,10,11,17,18,19,20]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-994436.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":844916235,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317227-Illuminati.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"wuuuuuuuuuuuuWWJJJJJJJJeJJJJJJJJJJmmmmmmmmm55277777777766SS\",\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-777860.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()()aaaa())))(\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-700535.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())))(((())))(((a(\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-243029.cct\",\"type\":\"Total Ways to Sum\",\"data\":95,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zeus-med\",\"httpPortOpen\":true,\"ip\":\"46.1.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"zeus-med\",\"moduleSequenceNumber\":9974,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"unitalife\",\"infocomm\",\"zb-def\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":147035528.6,\"moneyMax\":367588821.5,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":835,\"serverGrowth\":77}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-644131.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"978120\",-12],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-810207.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"010101011111100110101110010110001011010011010011011111010\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-912774.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[196,140,82,41,118,26,8,161,28,147,129,113,70,1,139,21,109,188,113,11,78,166,59,116,170,132,47],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-756034.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[8,14],[8,17],[2,12],[23,32]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-348065.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[5,7],[12,14],[16,20],[12,13],[19,25],[6,11],[25,32],[17,26],[3,6]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-334093.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,5,1,9,8,0,5,0,8],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-656896.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,0,1,0,0,0],[1,0,0,0,1,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-428783.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9Qr68kF5c403LTK789tKdyBhBhB2197Sm6z4c86990189ztIz6wOWd330449CXmhYFwQK02PP\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-915158-Sector-12.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":61058862604,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-345962-MegaCorp.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[4,9],[2,9],[7,11],[6,11],[0,4],[7,10],[2,6],[0,1],[1,11],[3,6],[9,11],[0,3]]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-721173.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1111010011\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-690094.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1101011011\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"unitalife\",\"httpPortOpen\":true,\"ip\":\"79.2.5.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"unitalife\",13],\"dataMap\":{\"unitalife\":[215078879683.50003,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":614714464567.9578,\"onlineMoneyMade\":215078879683.50003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456619,\"ramUsage\":2.4,\"server\":\"unitalife\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///d0b8bfc6-6112-4b15-a9a7-7b7e78c44ce4\",\"moduleSequenceNumber\":9973}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///d0b8bfc6-6112-4b15-a9a7-7b7e78c44ce4\",\"moduleSequenceNumber\":9973}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"unitalife\",\"moduleSequenceNumber\":9973,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"global-pharm\",\"zeus-med\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":27.334000012209135,\"minDifficulty\":26,\"moneyAvailable\":262932615.75000006,\"moneyMax\":262932615.75000006,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":783,\"serverGrowth\":78}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-350948.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,1,0,0,1],[1,0,0,0,1],[0,1,1,0,0],[0,0,0,0,0],[0,1,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-985304.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[95,81,73,62,15,158,131,63,79,127,147,166,113,84,51,51,169,107,8,12,107,53,75,161,20,129],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-431739.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"928140656\",30],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-881083.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-5,3,1,5,-8,-1,6,10,-2,-10,6,-6,7,-9,-8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-56825.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[89,87,23,6,88,151,198,92,183,131,157,42,6,194,20,83,145,119,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-671685.cct\",\"type\":\"Total Ways to Sum\",\"data\":25,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-248935.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"8DSlQ67zM161i843esH581j9696qtEMhy5309aNtOxbshu09R6g6WOXF4436LORcTz\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-859580-ClarkeIncorporated.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((a(()(a)()a(\",\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-794111.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"b251OOOOOOOOOOVrwsajti6BOohBOohBOoh06eFowy66eFoeFoeJy62HY27777V26xoyy\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-26150.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[6,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-572636-Illuminati.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-4,5,2,9,6,-3],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-963862.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[3,11],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-246986.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[183,[4,5,6,7,8,14,15,17,18,20]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-125724-TianDiHui.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[153,45,29,71,32],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"lexo-corp\",\"httpPortOpen\":true,\"ip\":\"22.8.2.4\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"lexo-corp\",53],\"dataMap\":{\"lexo-corp\":[143827215656,43354,43407,159]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2392227968755.615,\"onlineMoneyMade\":143827215656,\"onlineRunningTime\":9.010000000000002,\"pid\":2456617,\"ramUsage\":2.4,\"server\":\"lexo-corp\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///48b549ff-fe18-45b2-828e-12c4c69e5891\",\"moduleSequenceNumber\":9967}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///48b549ff-fe18-45b2-828e-12c4c69e5891\",\"moduleSequenceNumber\":9967}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"lexo-corp\",\"moduleSequenceNumber\":9967,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"I.I.I.I\",\"global-pharm\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":25.052000000000003,\"minDifficulty\":25,\"moneyAvailable\":175827892,\"moneyMax\":175827892,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":653,\"serverGrowth\":56}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-41803.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-3,6,2,-6,-7,8,5,-9,4,-8,-10,5,7,-9,2,7,1,-3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-252162.cct\",\"type\":\"Total Ways to Sum\",\"data\":18,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-44105.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-8,-4,5,-2,5,-9,0,6,-9,8,0,-1,-3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-555468.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"sz666qTz666qbLc6NW6qbLc6NWPtObLc6TRtORORORtg1ARtg1A0U6lxGCNiD4WMpD4WMpDWtRFFFFFFFFFF\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-694823.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"NNNJJNee888888888vvvvvvvvvvvv7777777711zzqqqqqq44NNvvIIynn2MMMMMMMjjZNNNNZJJ\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-876354.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[35,[2,4,5,6,7,8,10,12,13,14,15,17]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-665849.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"76014790\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-608123-Sector-12.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"994150351\",-21],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-940692-TianDiHui.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[17,18],[25,31],[20,26],[8,9],[22,23],[22,25],[17,22],[24,27],[25,26],[23,28],[16,26]],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-83376.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"TTTTT55bbbbbbbbbbbbbddddddddddeeeeee77663366EEEEEEEEpp66666666666aaIIIIIII\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-539598.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"216911230\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-934822.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[8,[[2,3],[2,5],[1,3],[0,7],[6,7],[1,7],[1,4],[0,5],[2,4]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-913181.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[3,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-969024.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":266951207369,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-665148.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":126661481629778,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"95.2.8.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rho-construction\",13],\"dataMap\":{\"rho-construction\":[132037431639.75,10647,10634,39]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":447065065140.3368,\"onlineMoneyMade\":132037431639.75,\"onlineRunningTime\":9.010000000000002,\"pid\":2456606,\"ramUsage\":2.4,\"server\":\"rho-construction\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///4188930e-4b6c-4d57-b3bc-96810fa0e360\",\"moduleSequenceNumber\":9877}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///4188930e-4b6c-4d57-b3bc-96810fa0e360\",\"moduleSequenceNumber\":9877}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"rho-construction\",\"moduleSequenceNumber\":9877,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":19.738000012211096,\"minDifficulty\":18,\"moneyAvailable\":0,\"moneyMax\":161217865.25,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":482,\"serverGrowth\":53}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-260288-Daedalus.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a(a()(a)a(((\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-83206.cct\",\"type\":\"Array Jumping Game II\",\"data\":[1,3,0,3,2,3,2,1,2,0,4,3,5,0,3,3,3,2,3,4,4,7,1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-419612.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[182,[4,10,11,13,14,17,18,19]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-727217.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[47,32,30,31,36,31,2,39],[49,40,23,36,11,8,39,20],[22,10,24,50,43,24,2,9],[11,9,46,4,48,41,27,16],[38,35,18,39,49,16,23,38],[22,29,44,47,19,7,3,2],[12,14,19,27,23,48,47,27],[25,31,45,29,10,46,25,19],[27,44,46,29,50,7,16,19],[6,47,29,14,22,30,3,30],[27,17,16,39,36,19,5,45]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-811135.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[6,[2,44,99,55,160,67,178,55,132,14,128,23,166,48,121,41,92,125,132,28,121,160,149,95,111,162,150,120,179,32,195,92,150,165,138,9,112,54,50,52,186,155,61,152,58,175]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-413962.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":647555609,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-939525.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0],[0,0,1,1,0,0],[0,0,0,0,1,0],[0,1,1,0,1,0],[1,0,1,0,0,0],[1,1,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-11963.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"BZWFNw4dRo4dRo4dRo4MyvmnNmnNmiJmnNmqLeNmqLeNmqLNmqLDIguIguIguIgueXE6kgXE6kgXE0UqTSUqTSURURUR\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-793725.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[86,17,151,104,198,6,120,178,100,58,1,37,153,186,113,109,133,148,47,109],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-813144.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"JfQfQQQJfQfQfQJb2ZP0kJngbP0kJngbP0P0kJngE661K8zhGKK8zhGKKKOTzvxyHxUR5veY3eY3eY3eg1okjmBeqq\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-351409.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[14,5,18,40,50],[35,42,36,26,22],[20,19,9,18,18],[32,12,46,8,9],[7,21,45,16,17],[38,39,27,17,19],[39,24,30,27,7],[20,21,42,46,19],[13,40,44,37,49],[7,10,15,13,41],[7,7,38,29,25],[17,8,47,20,10],[40,5,39,3,30]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"alpha-ent\",\"httpPortOpen\":true,\"ip\":\"82.0.6.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"alpha-ent\",6],\"dataMap\":{\"alpha-ent\":[144946581228,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":225681883844.86868,\"onlineMoneyMade\":144946581228,\"onlineRunningTime\":9.010000000000002,\"pid\":2456601,\"ramUsage\":2.4,\"server\":\"alpha-ent\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///bab2b14a-e436-4b7f-a6c7-8b272121caa4\",\"moduleSequenceNumber\":9941}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///bab2b14a-e436-4b7f-a6c7-8b272121caa4\",\"moduleSequenceNumber\":9941}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"alpha-ent\",\"moduleSequenceNumber\":9941,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-institute\",\"aerocorp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":21.954000011584746,\"minDifficulty\":20,\"moneyAvailable\":0,\"moneyMax\":177630614.25,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":583,\"serverGrowth\":57}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-986043.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"92165087\",-90],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-580821-Bachman&Associates.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"42078\",-31],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-712062-OmniTekIncorporated.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[48,13,15,8,1,4,39,48,1],[28,7,12,19,20,29,13,15,38],[24,20,6,39,15,12,13,22,3],[22,40,12,41,11,44,36,44,45],[29,50,36,48,45,18,47,12,43]],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-72696-TheCovenant.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"ttwwwwwwwwwwwwwwzzzzzznnHHsssssssssXXXpppppppppppvvvvvvvvvvvvvvFFKKK\",\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-468705.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"917818\",41],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-524973-TheCovenant.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[8,[[2,4],[5,6],[4,7],[6,7],[0,1],[1,2]]],\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-12492.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[11,12],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-634235.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"96Ds1E5zlD5321K551W654xZYN771S189CdLM0H3vM4254hHcm589CP0c0Y6vE09yZSyqPs6v098ozys88DJ36\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-861848.cct\",\"type\":\"Total Ways to Sum\",\"data\":91,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-40829-BladeIndustries.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1101010000010100100100111001\",\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-193297-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[74,66,133,132,61,13,22,80,86,102,151,93,170,126,59,69,76,110,71,25,45,65,57,190,159,33,35,155,183,82],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-603918.cct\",\"type\":\"Total Ways to Sum\",\"data\":58,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-586175.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"VgVZQNAdddddd2yuGaYGOfblyq4FX3jFX3jFXLXDFFFFFFFFFFZHFFOFFFFFOFFFFFFoFFoFFoF\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-947506.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[54,94,159,30,163,182,124,19,138,157,21,43],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-331870.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[71,167,15,56,199,90,71,151,120,164,173,4,180,73,31,69,87,10,133,51,170,168,75,86,187,163,158,29,121,170,83,41,79,109,35,52,135,152,168,91,68,44,180,44,31,193]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"aevum-police\",\"httpPortOpen\":true,\"ip\":\"29.3.2.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"aevum-police\",13],\"dataMap\":{\"aevum-police\":[61376763937.5,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":572802114711.0311,\"onlineMoneyMade\":61376763937.5,\"onlineRunningTime\":9.010000000000002,\"pid\":2456599,\"ramUsage\":2.4,\"server\":\"aevum-police\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f501603a-d361-4ffb-b820-4cd55732f337\",\"moduleSequenceNumber\":9934}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f501603a-d361-4ffb-b820-4cd55732f337\",\"moduleSequenceNumber\":9934}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"aevum-police\",\"moduleSequenceNumber\":9934,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":25.092000012212026,\"minDifficulty\":24,\"moneyAvailable\":0,\"moneyMax\":75032718.75,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":429,\"serverGrowth\":34}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-219136.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[65,93,127,160,60,103,21,155,184,156,18,129,113,190,150,53,35,104,59,126,62,68,2,189,75,151,64,173,130,158,50],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-589542.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[3,7],[3,6],[4,13],[1,8],[11,20],[7,14]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-609302-ECorp.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[0,10],[3,6],[4,9],[0,2],[0,9],[5,7],[4,7],[6,10],[1,5],[1,8],[8,9],[7,8],[1,4],[6,7],[2,5],[3,8],[2,6],[8,10],[2,8],[0,1],[5,10],[1,6],[5,9]]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-731133.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,1,4,2,0,4,6,6,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-34679.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,-8,3,4,-4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-136075.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":114,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-95827.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":778302031,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-249431.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[3,7,3,6,-1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-827355-Aevum.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[8,10],[5,6],[8,9],[1,4],[6,9],[0,2],[2,10],[3,10],[3,9],[0,8],[0,3],[2,5],[5,8],[4,8],[3,5],[2,9],[3,4],[1,5],[5,7],[2,4]]],\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-100427.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[140,109,101,25,19,117,190,42,105,39,66,79,126,122,8,156,193,34,147,197,72,8,51,140,120]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581142.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,5,7,10,9,4,10,8,0,2,0,1,8,0,7,1,7,1,3,0],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-111447.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,1,0,1,0,0],[0,1,0,0,0,0],[0,0,0,0,0,0],[0,0,0,1,0,0],[1,0,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-456824-Bachman&Associates.cct\",\"type\":\"Total Ways to Sum\",\"data\":8,\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-262251-NWO.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,10],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-907762.cct\",\"type\":\"Array Jumping Game\",\"data\":[8,0,0,3,0,9,10,10,10,10,2,0,1,3,0,5,4,9,9,2,9,1,9,0,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-551748.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,0,0,0,0,1,1,0],[0,0,1,1,0,1,0,0,1,0],[0,0,1,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,0,0],[0,1,1,1,0,1,1,0,0,0],[1,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,1,1,0,0,0],[1,0,0,1,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-638855.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,1,0],[0,0,0],[0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-157510.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[5,5],[9,9,7],[6,5,5,6],[4,1,5,5,5],[9,2,6,6,7,4],[5,3,9,5,3,6,6],[1,3,8,7,7,5,2,7],[6,8,9,1,1,4,9,9,7],[1,5,5,3,3,7,4,8,9,3],[6,7,5,3,9,3,2,4,3,7,3]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"17.6.2.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"rothman-uni\",13],\"dataMap\":{\"rothman-uni\":[41870302110,10647,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":398410108594.0426,\"onlineMoneyMade\":41870302110,\"onlineRunningTime\":9.010000000000002,\"pid\":2456598,\"ramUsage\":2.4,\"server\":\"rothman-uni\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9e41a21b-80a2-438e-aee1-df5ca568c9c1\",\"moduleSequenceNumber\":9869}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9e41a21b-80a2-438e-aee1-df5ca568c9c1\",\"moduleSequenceNumber\":9869}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"rothman-uni\",\"moduleSequenceNumber\":9869,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"johnson-ortho\",\"aevum-police\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":47,\"hackDifficulty\":17.638000012212235,\"minDifficulty\":16,\"moneyAvailable\":0,\"moneyMax\":51123690,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":416,\"serverGrowth\":44}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-463936.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"LLLLkkkkkkklllllll55nnnnnhMMMMMMMRV000000kkkkZZZZZZZZZZZcVhhhhhhhhhhhmmyyPPq844\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-787547.cct\",\"type\":\"Array Jumping Game II\",\"data\":[4,2,3,0,3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-211958.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"10095145\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-958280-Bachman&Associates.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[68,164,193,90,45,43,11,176,129,155,149,21,182,35,194,116,182,121,189,79,146,61,16,40,15,31,171,35],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-137018-FourSigma.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a()(a)\",\"reward\":{\"name\":\"Four Sigma\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-932704-ClarkeIncorporated.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"4277713\",-37],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-674030.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0011110011100111111100000000111111101000\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-490881-MegaCorp.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"98aZUKUgRm028W593wyh732im6435qe5731Qe199RUeqAjrEh992ws642T348\",\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-922495-OmniTekIncorporated.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,1,0,1,0,1,1,0],[0,0,0,0,0,1,1,0,0],[0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,1,0,0],[0,1,0,1,1,0,0,1,0],[0,0,1,0,0,0,1,0,0],[1,0,0,1,0,0,1,0,0],[1,0,0,0,1,1,0,0,0],[0,1,1,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-790192.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\")((()()\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-251730.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,1,0,1,0,1,1,0],[0,0,0,0,0,1,1,0,0,1,0],[0,0,1,0,0,0,0,0,1,0,1],[0,0,0,0,1,1,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0],[0,1,0,1,0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-803103-Daedalus.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0],[1,1,0,0,0,1,1],[0,0,0,1,0,0,0],[0,0,0,1,0,0,0],[0,0,0,0,0,0,0],[0,1,1,0,1,0,0],[1,1,0,1,0,0,0],[1,0,1,0,0,1,0]],\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-340177.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(()aa)()(a))a()\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zb-institute\",\"httpPortOpen\":true,\"ip\":\"26.9.3.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zb-institute\",13],\"dataMap\":{\"zb-institute\":[185767956033.50003,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":551845939782.6084,\"onlineMoneyMade\":185767956033.50003,\"onlineRunningTime\":9.010000000000002,\"pid\":2456600,\"ramUsage\":2.4,\"server\":\"zb-institute\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///4247d320-1e9c-42f2-aefa-89b1a519b143\",\"moduleSequenceNumber\":9938}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///4247d320-1e9c-42f2-aefa-89b1a519b143\",\"moduleSequenceNumber\":9938}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"zb-institute\",\"moduleSequenceNumber\":9938,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\",\"alpha-ent\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":24.672000012211875,\"minDifficulty\":23,\"moneyAvailable\":227100190.75000006,\"moneyMax\":227100190.75000006,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":768,\"serverGrowth\":84}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-942661-Netburners.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[7,9],[2,4],[1,8],[0,2],[1,5],[0,3],[0,6],[1,7],[4,9],[3,8],[3,5],[5,9],[8,9],[2,6]]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-277151.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[0,10],[7,8],[1,10],[0,10],[6,9],[2,3],[3,8],[4,7],[3,9],[2,7]]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-616634.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[4,7],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-291697.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,1,1,0,0,0,0,0,0],[1,0,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0],[0,0,0,1,0,1,0,0,0,0,0],[1,0,0,1,1,1,0,0,0,0,0],[0,0,0,0,1,0,0,1,0,0,0],[0,0,0,1,1,1,0,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-547121-Netburners.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[51,[3,4,5,7,8,10,15,16,17,20,21,24]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-618807.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"001101001000000001000011100101001010\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"83.3.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"summit-uni\",13],\"dataMap\":{\"summit-uni\":[63893713338,10647,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":468306618873.6937,\"onlineMoneyMade\":63893713338,\"onlineRunningTime\":9.010000000000002,\"pid\":2456595,\"ramUsage\":2.4,\"server\":\"summit-uni\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///21cdd076-83f5-4376-b4b2-87af644b1599\",\"moduleSequenceNumber\":9862}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///21cdd076-83f5-4376-b4b2-87af644b1599\",\"moduleSequenceNumber\":9862}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"summit-uni\",\"moduleSequenceNumber\":9862,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"netlink\",\"millenium-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":19.9280000122127,\"minDifficulty\":19,\"moneyAvailable\":0,\"moneyMax\":78014302,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":431,\"serverGrowth\":50}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-772947.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[25,31],[10,18],[5,14],[2,6],[4,7],[12,19],[1,8],[3,6],[15,21],[20,26],[22,25],[13,17],[18,21],[20,26],[13,23]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-515215.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[123,[1,3,5,8,9,10,11,12,14,16]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-879568.cct\",\"type\":\"Total Ways to Sum\",\"data\":36,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-737300.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":15272,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-581772.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[97,70,180,65],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-411573-MegaCorp.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"196143247239\",\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-429526-Netburners.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"C28Jak2bRgRgRgRgRggggggggggwJwJwJwJwmoJwmoJmoJwmoJmoRoJwmo17FDE4DE4DEjeUeUedvUhhhhh\",\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-281382.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":116447016896902530,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-594453-Daedalus.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1],[0,0,1,0,0,1,1,0,1,0],[0,1,1,0,0,0,0,0,0,0],[0,0,1,0,1,0,0,1,0,1],[1,0,1,0,0,0,0,0,0,1],[0,1,1,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[0,1,1,1,0,0,0,1,0,0]],\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-603310-Bachman&Associates.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,1,0,1,0,1,0,1],[1,0,0,0,0,0,0,0,0,0,1],[0,0,1,0,1,1,1,1,1,0,1],[0,0,0,0,1,0,0,1,0,0,1],[0,1,0,0,0,0,0,1,1,0,0],[0,0,1,1,0,0,0,1,0,0,0],[1,1,0,1,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-264159.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0],[0,0,0],[0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"syscore\",\"httpPortOpen\":true,\"ip\":\"43.7.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"syscore\",\"moduleSequenceNumber\":9963,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":40479547.5,\"moneyMax\":101198868.75,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":639,\"serverGrowth\":65}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-797691.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":541383520,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-467592.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"INRq2APNRq2APNRNRq2APNMPNMPNE8APPe3bE8GSYZWVN8dHMpubFqx1Px4bFq\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-776565.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"bPGGPGGPGGPGGPGGPGGPeGPeGPeGEbPeGEbgzzMRH1JpSbSjDpSbSdaGjDpSbSdabSdabSdabbb\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-913006.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[7,[138,54,90,14,120,3,189,108,40,32,27,130,168,54,115,18,152,55,85,10,62,67,32,31,53,38,20,18,12,12,123,108,129,29,140,67,115,174,101,116]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-132564.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[2,5,-8,-4,7,4,-5,-7,6,0,4,4,-9,7,0,5,9,-9,0,-6,2,2,9,3,4,-2,-5,-5,0,-9,-5,9,-6,0,-6,1,-4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-56450.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,0,7,10,3,0,2,0,9,2,0,9,8],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-903680.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[5,4],[7,6,9],[4,2,3,8],[2,3,6,7,2],[4,3,9,2,8,6],[3,2,6,1,2,3,3],[2,3,2,5,8,1,4,3],[5,8,5,4,5,9,1,8,1],[7,1,7,4,5,7,1,2,7,3],[1,8,2,5,7,6,1,1,4,4,6]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-370005.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[6,[187,130,62,69,159,40,69,29,49,7,5,53,63,147,178,144]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-785514-ECorp.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[7,6],[3,1,3],[2,9,5,1],[7,9,8,7,5],[4,5,3,3,4,5],[1,8,7,5,6,4,2],[6,8,5,4,2,6,7,6],[2,1,4,1,2,7,9,4,8]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-349349.cct\",\"type\":\"Total Ways to Sum\",\"data\":17,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494302-NWO.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[1,7],[1,6,5],[4,2,3,6],[7,9,1,9,2],[2,4,6,8,2,8],[3,4,7,8,2,7,9],[4,8,2,5,6,3,6,8],[9,1,9,3,2,1,1,4,7]],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-499866.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0001000110110111110110111110011111\",\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"2.6.7.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"catalyst\",6],\"dataMap\":{\"catalyst\":[108979835724,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":248250072229.36823,\"onlineMoneyMade\":108979835724,\"onlineRunningTime\":9.010000000000002,\"pid\":2456605,\"ramUsage\":2.4,\"server\":\"catalyst\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///13af1b28-9b46-46da-9534-fcf38a5efd43\",\"moduleSequenceNumber\":9875}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///13af1b28-9b46-46da-9534-fcf38a5efd43\",\"moduleSequenceNumber\":9875}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"catalyst\",\"moduleSequenceNumber\":9875,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"crush-fitness\",\"rho-construction\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":67,\"hackDifficulty\":23.50000001158434,\"minDifficulty\":22,\"moneyAvailable\":0,\"moneyMax\":133553720.25,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":438,\"serverGrowth\":39}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-428455-Illuminati.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[28,15],[19,28],[4,35],[15,43],[3,36],[7,44],[36,47],[20,41]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-972675.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,3,2,0,1,1,5,2,1,0,0,1,5,2,2,3,2,1],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-677393.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,1,0],[0,0,1,0,0,0,1,0],[1,0,0,0,1,1,0,0],[0,1,0,0,1,0,0,1],[0,0,1,0,0,1,0,1],[0,0,0,0,0,0,1,0],[1,0,0,1,0,1,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[1,0,0,1,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-622975.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":229848033,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-134135.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":756344987,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-652847-TheCovenant.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-1,9,-1,8,-4],\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-66650.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[10,[198,133,70,47,50,37,41,189,73,140,165,16,95,1,38,34,174,56,147,4,5]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-302846-ECorp.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":309411925,\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-370913.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"x17OeIU0eU0eU0e0eU0eUMcXLXyk6666666zJJJJJJJJJKgqMKk6tQMez4Kk6t\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-466049.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0],[1,0,0,0,0,0],[0,0,1,1,0,1],[0,0,0,1,0,1],[0,0,0,0,0,1],[0,0,1,1,1,1],[0,1,1,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-922864-MegaCorp.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[9,3],[9,5,4],[1,8,7,6],[4,5,4,4,4],[6,8,4,3,2,9],[9,5,2,8,3,8,3],[8,1,7,2,6,3,1,8],[5,5,3,4,6,3,3,5,9],[1,4,5,3,4,8,2,8,4,8],[3,6,2,1,5,6,4,1,8,7,3],[3,2,4,4,7,3,4,3,4,4,9,7]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"23.9.7.9\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"the-hub\",26],\"dataMap\":{\"the-hub\":[32459004421,21268,21294,78]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":712509947567.3789,\"onlineMoneyMade\":32459004421,\"onlineRunningTime\":9.010000000000002,\"pid\":2456615,\"ramUsage\":2.4,\"server\":\"the-hub\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///72cf6eb8-1ac8-41ee-b558-dc0742179947\",\"moduleSequenceNumber\":9905}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///72cf6eb8-1ac8-41ee-b558-dc0742179947\",\"moduleSequenceNumber\":9905}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"the-hub\",\"moduleSequenceNumber\":9905,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"neo-net\",\"I.I.I.I\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":41,\"hackDifficulty\":14.210000000000008,\"minDifficulty\":14,\"moneyAvailable\":39680934.5,\"moneyMax\":39680934.5,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":303,\"serverGrowth\":54}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-612396.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,1,0],[0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0],[0,1,1,0,0,0,0,0,1],[1,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0],[0,0,1,1,0,0,0,0,0],[0,1,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,1,0],[0,0,0,1,0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-815475.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[32,45,44,43],[33,3,37,5],[1,22,35,37],[35,22,15,15],[17,11,16,49],[44,1,1,24],[32,37,29,2],[15,48,27,14],[17,34,23,9],[11,2,35,35],[19,47,47,29]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-911996.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a))))aaa\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-163570.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"519614933\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-685190-OmniTekIncorporated.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()()(((((()())()a()\",\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-618537.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,1,1,4,1,4,3,7,5,2,7,2,0,1,4,2,3,0,2,3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-705700.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[0,1],[7,9],[3,9],[0,7],[3,4],[5,7],[10,11],[8,11],[0,2],[1,5],[2,5],[5,10],[6,10],[2,4],[3,11],[2,6],[1,6],[7,9]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-739560.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":405529991,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-419122-ECorp.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"3116104248\",\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-125500.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[23,33],[2,5],[22,28],[16,21],[25,28],[16,22],[6,16],[16,23],[20,30],[22,27],[22,25],[14,22],[18,21],[14,15]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-880291.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[36,[2,5,6,10,11,13,14,15,16]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-167130-Bachman&Associates.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":961624006,\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-587187.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a)))()))))(a((((a\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-577118-Bachman&Associates.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[111,27,19,83,14,173,190,70,89,24],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-186218.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-3,8,-5,3,0,-5,-4,-10,10,9,-4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-558747.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"yyyyyyyzzzzzzzzuusiiKEEEYYkkkkkkkkqqZZNCCCCCCCCCsssLLLLLkhhhhhhVVTeeXXEggggEExxggXX6uuu\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-309281.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[63,135,200,88,49,137,1,57,157,97,114,14,34,143,161,168,187,54,83,60,48,150,74,47,72,78,154,25,134,47,13,8,5,25,41,10,195,49],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-396473.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":219075730,\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"78.1.4.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"computek\",\"moduleSequenceNumber\":9855,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":24211157.200000003,\"moneyMax\":60527893.000000015,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":354,\"serverGrowth\":61}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-277279.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[5,93,104,128,40,18,134,27,166,62,6,100,186,102,26,165,87,27,49,46,177,12,177,47,200,174,62,179,62,166,40,153,194,56,134,106,132,56,110,46]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-118040-FulcrumSecretTechnologies.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[11,[[6,7],[1,4],[3,9],[5,8],[1,7],[2,10],[6,10],[7,8],[2,3],[1,3],[8,10],[1,5],[1,10],[4,6],[2,9],[2,7]]],\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-670488-ECorp.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,1,0,0,0,1,1],[1,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0,1,1,0,0],[0,1,1,0,0,1,0,1,0,0,0,0],[0,0,0,1,0,1,0,1,0,0,0,1],[0,0,0,0,1,1,0,1,0,0,0,0],[0,0,1,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,1,1],[1,1,1,0,0,0,0,1,0,0,0,0]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-433504.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[5,2],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-307982-ECorp.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[188,[3,4,8,9,15,16,17,18,19,20]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-320442.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1101011001010111111010010011001\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-698401-Sector-12.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[100,60,76,133,76,96,60,152,23,100,166,52,27,10,129,52,41,104,92,123,42,178,194,1,181,24,126]],\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-446953.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,1,0,0,0,0,0,0,0],[0,0,0,0,1,0,1,1,0,0],[0,0,0,0,1,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,1,0,0,1,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-44725.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":192022999,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-700033.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":809704522,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-24586.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[2,5],[4,9,5],[5,9,4,7],[2,8,9,1,8],[8,5,5,8,8,6],[7,8,6,1,8,5,5]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-188203.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,1,1,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,0,1,0,1,1,0,0,0,0],[1,0,0,0,0,1,1,0,0,1],[0,0,0,0,1,1,0,0,1,0],[1,0,0,1,0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-653887.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"565764487168\",95],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-416207.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"UUUUUUeeLkk664444444444Ercc11NNBB4422U1YY6888888888ppmmMMKKKKKKb33UrrxGGwwwcSS888886\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"21.0.9.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"netlink\",53],\"dataMap\":{\"netlink\":[56375000000,43460,43407,106]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":2507671722648.5757,\"onlineMoneyMade\":56375000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456594,\"ramUsage\":2.4,\"server\":\"netlink\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f807ef5c-486c-40a4-abcb-6a15d27351b3\",\"moduleSequenceNumber\":9859}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///f807ef5c-486c-40a4-abcb-6a15d27351b3\",\"moduleSequenceNumber\":9859}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"netlink\",\"moduleSequenceNumber\":9859,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"summit-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":78,\"hackDifficulty\":27.172000000000043,\"minDifficulty\":26,\"moneyAvailable\":0,\"moneyMax\":68750000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":403,\"serverGrowth\":60}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-311725.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"139219117185\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-238658.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[0,7,-8,6,3,-9,-7,3,7,3,-6,7,2,-7,-4,4,8,-2,-4,-6,9,-9,-8,-2,6,4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-430640.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()(((())(a)((\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-569307.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"((()a())a)(((a())\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-300351-ClarkeIncorporated.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"831391766\",-70],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-840077.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9GcCOsgkn6131K780413lvQ913i8j896f4XmJ6869Sfci1fcai33\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-494147.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"GE68NtcXiBgbFe11NttHbFe11NtKW1NtKW1NW1NW1NW1NTvNW1NTvNW1W1W1WLW1W1W1WLpW1W1WLpW1W1WLppW1W1B\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-782835.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[74,[1,5,7,8,10,11,12,13,14,15]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-848953.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a()a()aa\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-134974-Aevum.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[184,11,143,120,119,132],\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-78757.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[11,11],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"45.6.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"johnson-ortho\",\"moduleSequenceNumber\":9866,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":52,\"hackDifficulty\":52,\"minDifficulty\":17,\"moneyAvailable\":7586200.600000001,\"moneyMax\":18965501.5,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":291,\"serverGrowth\":45}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-964281-FulcrumSecretTechnologies.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[12,26,48,24,14,26,5,27,37,39,44,46,45,17,25],[11,18,33,34,15,46,47,14,31,13,22,38,42,39,5],[7,33,24,42,43,18,20,33,36,10,28,37,4,30,3],[32,42,31,33,26,23,30,31,5,28,44,24,22,9,5],[46,18,47,15,23,41,7,31,30,43,4,50,20,17,2],[29,11,44,27,23,19,29,25,32,31,23,45,47,17,21],[48,46,12,22,17,37,37,9,46,39,18,49,36,26,42],[3,15,41,39,5,26,25,29,21,23,36,4,49,35,42],[21,3,37,3,21,16,2,5,48,38,21,20,36,21,10]],\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-813559.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"24226142119\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-482440.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[19,25],[16,23],[3,7],[1,7],[25,34],[2,4],[2,4],[24,27]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-758753.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"4858891\",-20],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-196437.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[8,65,12,63,174,79,160,62,185,70,83,191,23,138,124,80,5,69,145,108,158,186,7,8,147,83,39,113,67,126,194,69,4,79,187,176,100,119,108,21,58],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-31712.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[55,[1,3,4,5,7,8,10,11,13,16,17]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-835938-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[140,185,153,160,174,43,93,145,47,185,76,172,12,192,132,84,4,12,152,84,168,146,50,32,40,6,177,131,103,134,178,41,120,4,5,189],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-402117.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"23307\",-75],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-244850.cct\",\"type\":\"Array Jumping Game\",\"data\":[7,2,0,0,7,0,5,8,0,7,0,3,8,0],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"51.7.5.5\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":2.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"n00dles\",1],\"dataMap\":{},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":1478580025.1466339,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456591,\"ramUsage\":2.4,\"server\":\"n00dles\",\"threads\":1,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0734ef12-a4d8-4711-a8f1-1e15388e0ce8\",\"moduleSequenceNumber\":9848}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0734ef12-a4d8-4711-a8f1-1e15388e0ce8\",\"moduleSequenceNumber\":9848}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"n00dles\",\"moduleSequenceNumber\":9848,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":null,\"minDifficulty\":1,\"moneyAvailable\":17500,\"moneyMax\":17500,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-503782.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[77,122,135,157,169,37,51,155,85,130,9,167,51,71,194,94,48,62,58,22,14,197,89,199,140],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-593074.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"RkeWqC0mYkeWqC0NNNNNNNNNNNNNNNwyKRiezPc6nSzPc6nSzPcHZNEcwS18mB1LiS1EgMo1Eg1Eg1EgKkTg1\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-415187.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":7226100269587920,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-63137-TianDiHui.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[10,[60,119,193,161,144,29,114,195,142,33,115,22,20,16,103,200,178,24,60,142,76,149,55,19,143,187,74,123,37,6,46,92,194,35,72,123,40,35,99,148,181]],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-50858.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[6,[150,144,165,139,73,138,72,139,198,69,124,45,31,27,199,57,13,79,5,56,129,32,76,193,70,87,72,36,51]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-790398.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[8,18],[25,33],[9,11],[4,14],[21,22],[23,32],[21,23],[7,9],[25,28],[23,27],[8,18],[17,23],[15,25],[19,26],[16,24],[1,6]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-216646.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[190,15,29,150,163,151,188,54,69,105,119,198,177,1,4,89],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-482787.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"49207247250\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"92.8.8.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"foodnstuff\",6],\"dataMap\":{\"foodnstuff\":[408000000,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64480538241.39595,\"onlineMoneyMade\":408000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456609,\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///5a745865-101e-4065-bc2d-e649aa9f21e6\",\"moduleSequenceNumber\":9887}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///5a745865-101e-4065-bc2d-e649aa9f21e6\",\"moduleSequenceNumber\":9887}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"foodnstuff\",\"moduleSequenceNumber\":9887,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":4.80199996428313,\"minDifficulty\":3,\"moneyAvailable\":500000,\"moneyMax\":500000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-336583-KuaiGongInternational.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[194,199,125,121,96,20,167,149,134,119,96,63,95,36,25,8,133,105,126,61,150,7],\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-263155.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"0UUUUUUUUUUUUXXrcccccc2OOOOOOOOOvvvvvooooooooo65GGGGGGGGGtt88IOOOOOOOwwp7777777777\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-218922-NWO.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0],[0,0,1,1,0,0,0],[0,0,0,0,0,0,1],[1,0,0,0,0,1,0],[0,0,0,0,0,1,1],[0,0,0,1,0,0,0],[0,0,0,0,0,0,0],[1,1,1,1,1,0,1],[0,0,1,0,0,0,0],[0,0,1,0,1,0,0]],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-583847.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[64,93,43,82,39]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-279210.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":7423278,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-332796.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"3880273\",30],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-978259.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[44,36,45,13,12,24,28,28,33,37,21,16,27,17,48],[44,46,35,39,3,35,44,11,32,42,35,2,44,23,44],[40,29,9,32,7,24,32,39,29,43,45,48,20,49,2]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-209502.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[10,35],[44,14],[48,5],[45,23],[37,40],[19,17],[13,26],[8,6],[47,21],[25,18],[1,23],[4,18],[19,1]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-998528.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[89,[1,2,3,5,10,11,12,13]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-63597.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[47,20,172,143,185,36,72,78,56,60,111,133,79]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-548985.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[4,2],[6,4,5],[3,5,8,1],[1,9,6,9,7],[5,1,9,4,2,1],[2,5,5,1,8,4,4],[7,8,2,7,9,3,1,8],[1,2,1,8,8,4,5,8,4]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-326407.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,1,2,4],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-72099.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"549146499\",-96],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-833617-Aevum.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())(()))aa)(()a()a\",\"reward\":{\"name\":\"Aevum\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"59.0.5.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"sigma-cosmetics\",6],\"dataMap\":{\"sigma-cosmetics\":[468625000,4890,4896,54]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":64480538241.39595,\"onlineMoneyMade\":468625000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456612,\"ramUsage\":2.4,\"server\":\"sigma-cosmetics\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9d45c9dd-06d0-4062-90c8-c87dfb441558\",\"moduleSequenceNumber\":9896}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9d45c9dd-06d0-4062-90c8-c87dfb441558\",\"moduleSequenceNumber\":9896}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"sigma-cosmetics\",\"moduleSequenceNumber\":9896,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":4.4059999642844225,\"minDifficulty\":3,\"moneyAvailable\":575000,\"moneyMax\":575000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-403938.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[4,9],[5,8,4],[1,7,9,4],[3,8,2,8,4],[5,7,8,7,2,8],[1,2,7,4,2,8,8],[5,9,7,8,2,5,6,1]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-273381.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":32991584,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-379491.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[15,[2,3,4,5,7,10,11,12,13]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-752943.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,1,0],[1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-158311.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"14811103241\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-876105-TianDiHui.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[106,190,121,132,58,167,56,200,114,78,136,5,103,64,56,93,180,11],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-898210-FourSigma.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[6,5,49,44,44,11,45,40,13]],\"reward\":{\"name\":\"Four Sigma\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-412330-Netburners.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":261644570,\"reward\":{\"name\":\"Netburners\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"44.1.9.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"joesguns\",6],\"dataMap\":{\"joesguns\":[510000000,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":80600672801.74194,\"onlineMoneyMade\":510000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456629,\"ramUsage\":2.4,\"server\":\"joesguns\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///b237db71-3e7a-4c6f-8d0e-94127cdececb\",\"moduleSequenceNumber\":9910}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///b237db71-3e7a-4c6f-8d0e-94127cdececb\",\"moduleSequenceNumber\":9910}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"joesguns\",\"moduleSequenceNumber\":9910,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.923999964291597,\"minDifficulty\":5,\"moneyAvailable\":0,\"moneyMax\":625000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-339260-Netburners.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[10,10],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-829113.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"011100001101010101101101101101100101111011100010101001111110\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-424201-FulcrumSecretTechnologies.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"130529522\",-32],\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-612310.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"468775\",-82],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-753864-MegaCorp.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[44,13,47,40,30,15,27,42],[10,30,29,27,20,39,27,9],[19,34,50,16,24,21,38,33],[2,39,7,5,5,23,38,6],[31,49,34,36,33,10,47,21]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-100414-Bachman&Associates.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,1,0,0,0,0,1,1],[1,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1],[0,0,1,1,0,1,0,0,0,0,0],[0,0,0,1,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1,1],[0,0,0,0,1,0,1,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-856496-ClarkeIncorporated.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"90245\",-84],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-476607-BladeIndustries.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9YqeP8k7eF01f618auQKwt76863RJp5343ZHz410664tobc44\",\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-574636.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,1],[0,1,0,0,1,0,0],[1,0,0,0,1,1,1],[0,0,0,0,1,0,0],[0,0,0,0,0,0,0],[0,0,0,1,0,0,0],[1,1,0,0,0,0,1],[0,0,1,0,0,1,0],[0,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-283322.cct\",\"type\":\"Array Jumping Game\",\"data\":[9,0,10,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-121422.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[2,10],[0,6],[1,2],[5,6],[4,10],[2,11],[1,2],[4,11],[3,9],[5,9],[5,11],[6,7],[1,3],[0,11],[1,8],[5,10],[4,6],[8,9],[4,9],[0,1],[1,4],[1,7],[0,10],[7,10]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-49329-ECorp.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,1,0,0],[0,0,0,0,1,0,1,0,0],[0,0,0,1,0,1,1,0,0],[0,0,0,1,0,0,0,0,1],[0,0,0,0,1,0,0,0,0],[0,1,1,0,0,1,1,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"17.3.8.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"zer0\",13],\"dataMap\":{\"zer0\":[1535625000,10647,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":244637785978.80945,\"onlineMoneyMade\":1535625000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456592,\"ramUsage\":2.4,\"server\":\"zer0\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///93592fb2-b879-4e5a-9aa6-34feca80feb1\",\"moduleSequenceNumber\":9851}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///93592fb2-b879-4e5a-9aa6-34feca80feb1\",\"moduleSequenceNumber\":9851}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"zer0\",\"moduleSequenceNumber\":9851,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"n00dles\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":8.72200001221308,\"minDifficulty\":8,\"moneyAvailable\":0,\"moneyMax\":1875000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-235498.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[4,20,80,65,90,83,26],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-18080.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[71,[1,2,3,5,6,8,9,10]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-256659-Bachman&Associates.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"47ODL148vbvgKNE55458AoEb285cMCJf188rXBR6j2q447tvAeqIA1667A8T3q916ox62mc881o\",\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-522835.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[80,125,154,128,172,179,112,66,163,146,101,60,19,60,43,168,180,136,42,2,18,158,160,63,77,180,199,180,40,152,91,145,56,47,95,4,30,95,184,120,24,32],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-184739.cct\",\"type\":\"Total Ways to Sum\",\"data\":83,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-604575.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9JScOcOcdv581V89408og460480399K2YY20PE602XV893Sdy33042\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-840969.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,10],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-918543.cct\",\"type\":\"Array Jumping Game II\",\"data\":[3,3,3,2,2,4,5,3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-410395-Bachman&Associates.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[2,[118,71,128,140,106,17,115,18,115,180,76,177,142,8,27,131,30,96,146,114,75,42,34,11,166,113,150,37,69,193,40,186,160,106,33,35,4,184,193,198,38,83]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-38390.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[0,6],[0,7],[4,7],[8,9],[5,7],[4,6],[0,3],[2,6],[5,9],[5,6],[7,8],[1,9],[0,3],[3,8],[0,9],[1,6]]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-472933.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"Egit40NsyB83B83B83B83TFL83TFLR3cEvbTFTF000000000qE00000772V000077JS75CBiOAI8UUUUU\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-15768.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9qcJgD6st8061Yopft1596V1vshNtk09rOAmVIanZ06kuwoGj5194tROFQgTo87049\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-983279.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[16,22],[4,14],[5,12],[8,15],[11,13],[13,23],[1,3]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-482156.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[0,1],[7,8],[1,7],[4,7],[4,6],[2,4],[1,9],[1,5],[1,2]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-908178.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,8],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"83.0.5.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"nectar-net\",6],\"dataMap\":{\"nectar-net\":[561000000,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":96720807362.08852,\"onlineMoneyMade\":561000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456633,\"ramUsage\":2.4,\"server\":\"nectar-net\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1ffac357-4697-46eb-874b-e10e752af26d\",\"moduleSequenceNumber\":9922}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1ffac357-4697-46eb-874b-e10e752af26d\",\"moduleSequenceNumber\":9922}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"nectar-net\",\"moduleSequenceNumber\":9922,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"iron-gym\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":8.778000012545586,\"minDifficulty\":7,\"moneyAvailable\":687500,\"moneyMax\":687500,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-364964.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[5,8],[3,8],[0,4],[1,3],[0,7],[0,8],[4,5],[0,1]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-885832.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9OrOtVM0KN07XCgvjOr732jO5696L6ksvMv109w1KY43c7B025A8794OaVDxiDq03pnh\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-528186.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,5,3,3,5,8,7,1,0,0,10,4,0,9,0,8,6,10,2,1,4,9,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-781611.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"131237243100\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-630527.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[8,[[1,5],[2,6],[2,7],[0,4],[2,4],[0,3],[0,5],[2,7],[1,3]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-27918.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[4,-9,-8,6,-3,-9,5,8,-10,-8,-4,-8,10,5,-3,5,-8,-7,9,5,-3,-6,-3,-4,3,-8,3,3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-547390.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[194,119,129,23,190,193,52,151,30,96,94,49,126,112,16,157],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-498178.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"110111011111111011010001101011000100011110000010111111\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-642758.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,7],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"91.0.7.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"neo-net\",13],\"dataMap\":{\"neo-net\":[1023750000,10647,10634,39]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":244488707498.62735,\"onlineMoneyMade\":1023750000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456614,\"ramUsage\":2.4,\"server\":\"neo-net\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7c6e2028-8e96-482f-b670-3aa8c7807c68\",\"moduleSequenceNumber\":9902}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7c6e2028-8e96-482f-b670-3aa8c7807c68\",\"moduleSequenceNumber\":9902}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"neo-net\",\"moduleSequenceNumber\":9902,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"CSEC\",\"the-hub\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":9.806000012209868,\"minDifficulty\":8,\"moneyAvailable\":0,\"moneyMax\":1250000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955472.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[7,7],[8,1,8],[6,8,7,6]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-804686.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,0],[0,0],[1,0],[1,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-855527-Netburners.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[12,[[3,8],[1,5],[4,10],[0,5],[2,7],[6,9],[5,6],[0,3],[4,8],[7,10],[4,6],[1,7],[5,8],[2,3],[5,11],[3,10],[3,11],[1,9]]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-899433.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[96,80,39,174,193,72,168,79,18,98,196,129,175,7],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-629419.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"SxMIMeNgRdnZvsa2VnZvsa2oVnZv2oVnZvCs54VnZv72222222222N66r622N66r622FL22FL22L22\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-220126-KuaiGongInternational.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())()))((()aa()((\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-930384.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1],[0,0,1,0,1,0],[0,0,0,1,0,1],[0,1,0,1,0,0],[1,0,0,1,0,1],[0,1,0,0,0,0],[0,0,0,0,0,0],[1,1,0,1,0,0],[0,0,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-204956.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[184,[1,2,3,5,10,11,14,15,17,18,19]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-131991.cct\",\"type\":\"Total Ways to Sum\",\"data\":14,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557090.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[9,33,22,46,43,45,11,44,46],[32,41,34,21,18,12,50,35,26],[6,46,40,2,10,24,43,11,41],[48,46,31,30,27,23,39,36,9],[5,48,11,35,31,15,40,40,11],[28,1,38,27,36,17,41,3,36],[18,16,47,13,32,8,1,37,26],[7,41,16,45,41,47,45,1,18],[21,23,15,34,49,19,39,45,17],[25,11,46,43,39,17,47,36,2],[6,26,46,47,31,28,20,21,22]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-806962-Bachman&Associates.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"5502272\",64],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-118567-ECorp.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[49,195,147,21,15,128,146,68,153,195,30,5,132,66,11,110,170,12,10,134,90,25,55,185,75,9,31,54,111,39,10],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-784975.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9dgH1j8QQU09gSR6nnSdY03CUN744pe3R940846rtQjHJ8816451d73\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"77.6.8.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":62.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"silver-helix\",26],\"dataMap\":{\"silver-helix\":[9213750000,21294,21294,78]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":559172082237.2716,\"onlineMoneyMade\":9213750000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456593,\"ramUsage\":2.4,\"server\":\"silver-helix\",\"threads\":26,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///5b9c30c4-6a9e-4750-bf9e-178ed8186179\",\"moduleSequenceNumber\":9854}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///5b9c30c4-6a9e-4750-bf9e-178ed8186179\",\"moduleSequenceNumber\":9854}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"silver-helix\",\"moduleSequenceNumber\":9854,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\",\"computek\",\"netlink\",\"johnson-ortho\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":10.714000000000027,\"minDifficulty\":10,\"moneyAvailable\":0,\"moneyMax\":11250000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-485945.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,1,0,0,0,1,0],[0,0,0,0,0,0,1],[0,0,0,0,0,0,1],[0,0,0,0,1,1,1],[0,0,0,0,1,0,0],[0,0,1,0,1,1,0],[0,1,0,1,0,0,1],[1,0,1,1,0,0,0],[1,1,0,1,0,0,0],[1,1,1,0,0,1,0],[0,0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-377464-OmniTekIncorporated.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"90112241231\",\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-686523.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[93,179,147,174,23,131,29,96,107,107,156,119,29],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-185196-Illuminati.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[198,122,135,133,142,169,81,166,1,140,97,145,182,8,166,6,33,186,75,75,52,152,112,36,2],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-802084.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[87,189,98,54,112,65,187,47,125,185,42,170,29,113,55,51,183,60,20,43,194,156,94,155,13,126,118,56,78,47,190,55,88,145,10,164,15,59,12,36,12]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-794646.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,1],[0,0,0,0,0,0,0],[0,1,1,0,0,1,0],[0,0,0,0,0,0,1],[0,1,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-947759.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"00110011\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-676739.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[45,[2,3,4,5,6,9,10,12,14,15,16]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-28479.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[9,3],[4,9,6],[7,6,5,5],[6,1,7,7,2],[2,2,6,9,6,1],[4,5,3,3,3,9,3],[7,2,2,3,8,1,8,8],[7,3,6,4,6,8,8,6,6],[3,6,9,9,9,7,1,4,7,3],[6,3,4,7,5,1,4,9,7,2,5],[1,4,4,4,1,9,7,8,2,1,7,3]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-287864.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[4,6],[19,26],[22,29],[21,23]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-149271.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":296,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-427492.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[126,170,38,159,132,61,58,196,153,191,2,109,43,149,94,162,108,180,100,198,148,87,45,23,8,60,100,178,141,169,162,18],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-992211.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"012919812\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-479916.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[3],[4,3],[8,5,2],[2,7,3,5],[8,9,4,8,8],[6,2,7,3,8,7],[4,9,5,5,3,5,5],[5,1,7,1,6,3,8,7]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-717476.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"llceSSOOOOOOOOOO222tttttttttttt2GGaaUUWWWWWWWWWWccccccjJ33eeeeeePCCCCCCCC0XtttZZMo\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"91.8.7.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"hong-fang-tea\",6],\"dataMap\":{\"hong-fang-tea\":[612000000,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":80600672801.74194,\"onlineMoneyMade\":612000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456630,\"ramUsage\":2.4,\"server\":\"hong-fang-tea\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///311537ac-79e9-465a-9630-7fa6cf43b377\",\"moduleSequenceNumber\":9913}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///311537ac-79e9-465a-9630-7fa6cf43b377\",\"moduleSequenceNumber\":9913}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"hong-fang-tea\",\"moduleSequenceNumber\":9913,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.66399996429202,\"minDifficulty\":5,\"moneyAvailable\":750000,\"moneyMax\":750000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-731512.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"0iWAi2EeeeeeeeDeeDeeqcAVwFZFz8bt8bt8btVbkcK6ceK6Qg1jHBDbgWQOoeOoRn3xum3xu3xui\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-504646-MegaCorp.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[4],[7,7],[9,2,6],[2,1,8,2],[8,3,4,3,1],[3,2,9,8,6,3],[2,5,9,4,4,7,5],[8,6,1,7,1,2,8,5],[8,7,4,9,5,3,3,5,5]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-156614.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[3,[199,148,97,101,21,59,49,108,97,25,161,115,33,12,34,140,108,12,94,128,174,78,76,18,142,181,136,128,124,177,186,126,128,182,105,106,119,162,111,10,4,191,76,140]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-242458.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[128,19,53,138,68,159,42,47,5,69,177,175,101,123,12,106,174,43,104,6,35,185,133,43,145,41,149,174,161,14,49,26,122,17,158,111],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-519020-Sector-12.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":69849962,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-142871-NWO.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[4,7],[5,13],[2,12],[14,17],[16,26],[12,22],[25,29],[24,32],[1,3],[23,31],[4,11],[15,17],[11,18],[6,14],[24,32],[4,11]],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-778444.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[141,[1,4,5,6,7,8,9,10,11]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-557558.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0,1,0],[0,0,0,1,0,0,0,0,0],[0,0,0,1,1,1,1,1,0],[0,0,0,0,1,0,1,0,0],[0,1,1,0,1,0,0,0,0],[0,1,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0],[0,0,1,0,0,1,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-273402.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[7],[7,4],[4,1,4],[8,8,8,2],[7,6,3,5,3],[4,3,7,3,9,3],[7,1,8,5,4,4,3],[2,7,5,4,6,7,3,6],[2,3,2,6,6,2,9,8,8],[2,6,3,8,3,8,8,6,4,5],[5,3,4,6,5,6,1,3,8,2,1]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-19570.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[155,[1,2,4,7,9,10,11,12,13,14]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-229858.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":899896824,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-532808-TianDiHui.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,1,0,0,0,0,0,1,0],[0,1,1,0,0,0,0,1,1],[0,0,0,0,0,1,0,0,1],[1,0,0,0,1,0,1,0,0],[1,0,0,0,0,1,0,0,0],[0,1,0,0,0,1,0,0,0],[0,0,1,0,0,0,1,1,0],[0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0],[0,1,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-226657.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[36,11,42],[21,39,26],[26,28,25],[29,26,33],[14,15,49],[11,5,17],[30,19,50],[1,30,6],[18,49,25],[45,21,50]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"14.4.6.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"harakiri-sushi\",6],\"dataMap\":{\"harakiri-sushi\":[816000000,4896,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":80600672801.74194,\"onlineMoneyMade\":816000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456631,\"ramUsage\":2.4,\"server\":\"harakiri-sushi\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0908b4a8-25c7-4531-937a-61df97ab20d6\",\"moduleSequenceNumber\":9916}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///0908b4a8-25c7-4531-937a-61df97ab20d6\",\"moduleSequenceNumber\":9916}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"harakiri-sushi\",\"moduleSequenceNumber\":9916,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":6.975999964292446,\"minDifficulty\":5,\"moneyAvailable\":1000000,\"moneyMax\":1000000,\"numOpenPortsRequired\":0,\"openPortCount\":3,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-123267.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1],[0,0,1,0,1,1,1,0],[0,1,0,0,0,0,1,0],[0,0,0,1,0,1,0,0],[1,1,0,1,1,0,1,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-808315.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[9,[115,182,62,195,108,48,135,166,79,134,57,120,176]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-402338.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-621286.cct\",\"type\":\"Total Ways to Sum\",\"data\":70,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-797327.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"21d811G372KQ569mAAAU8GdM555cx2TW659dJj3bOWvB09GugqjX1ST08bEayVQ0j519x3KPQBbFj28\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-464742.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[72,74,13,147,46,170,147,22,30,50,134,129,160,160,185,42,16,151,181,90,80,180,156,40,158,156,133,104,50,32,164,60,51,10,64,99,132],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-661576.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[4,6],[9,4,1],[2,4,3,4],[9,2,2,3,9],[4,7,7,1,8,3],[3,9,9,2,1,3,5],[4,7,7,9,3,2,6,9],[9,8,4,5,9,7,5,6,7],[3,2,8,5,8,7,5,5,5,2],[2,4,3,3,4,9,3,8,3,7,4]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-923584.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"())))))()))())a(()()\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-521585.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[12,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-994900-OmniTekIncorporated.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"22224476235\",\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-702023-Aevum.cct\",\"type\":\"Total Ways to Sum\",\"data\":27,\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-129575.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[100,14,65,64,31,105,76,153,92,45,29,85,115,146,196,94,39,119,97,122,127,34],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-163878.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"146236132\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-697378.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[146,111,133,68,19,20,185,54,50,8,47,188,23,80,81,68,51,161,128,7,6,159,5,188,103,117,54],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-141864.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[106,101,165,78,28,43,183,34,120,78,24,2,44,148,164,92,113,110,39,52,123,144,25,41,52,64,141,72,125,7,7,34,109],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-273768.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[9],[7,6],[4,6,8],[9,4,3,9],[3,3,3,4,1],[7,7,5,8,2,9],[6,8,3,5,2,5,1],[4,4,6,8,1,7,4,1]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-537673.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9DAgq2mLLF97286831d9222G913A62314GGmB864S22z\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-462087-Daedalus.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"0101001110001000111010\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-459916.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"2374824160\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"33.4.1.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"phantasy\",13],\"dataMap\":{\"phantasy\":[4908000000,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":209561749284.52298,\"onlineMoneyMade\":4908000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456611,\"ramUsage\":2.4,\"server\":\"phantasy\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///91dca0d8-13a9-4981-9aa7-2b094f6d4492\",\"moduleSequenceNumber\":9892}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///91dca0d8-13a9-4981-9aa7-2b094f6d4492\",\"moduleSequenceNumber\":9892}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"phantasy\",\"moduleSequenceNumber\":9892,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"max-hardware\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":8.556000001489062,\"minDifficulty\":7,\"moneyAvailable\":0,\"moneyMax\":6000000,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-62681.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0],[0,0,0,0,1,0,0],[0,1,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,0,0,0,1,1],[0,0,0,0,0,0,0],[0,1,1,0,1,0,0],[0,0,0,0,0,0,0],[0,0,0,0,1,0,0],[0,1,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-962541.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,1],[0,0],[0,0],[0,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-964759.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[5,6],[8,6,1],[6,7,5,3],[6,5,9,1,5],[9,6,3,6,8,2],[6,4,8,9,9,7,4],[1,5,4,8,8,4,4,4],[7,1,1,6,4,6,2,4,9],[8,1,1,8,2,8,8,7,8,2],[1,9,7,1,5,2,1,4,5,3,1],[3,2,3,7,2,3,2,8,5,6,4,8]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-356945-Illuminati.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[20,29],[24,34],[25,29],[5,9],[8,17],[15,20]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-29844.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[24,184,181,188,117,174,190,24,158,103,66,132,127,158,23,163,141,95,121,159,66],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-893833-Illuminati.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,1,0,1,1,1,0],[0,0,0,0,1,0,1,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,1,0,0],[0,0,0,0,0,1,0,0,0,0,0,1],[0,1,0,0,1,0,0,0,1,0,1,0],[1,0,0,0,0,0,0,0,0,1,0,0],[0,1,1,0,0,0,1,0,0,0,0,0],[0,0,1,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-778862.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[97,[2,3,4,5,6,8,15,16,17,18]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-987694.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[101,[1,2,6,7,10,11,13,17,19,20,21]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-702629.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"010100110110100101100\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-753008.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,4,1,6,1,3,3,1,2,1,4],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-153913.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[56,[3,4,6,7,8,10,11,12,14,15]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"43.8.3.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"max-hardware\",13],\"dataMap\":{\"max-hardware\":[2045000000,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":174634791070.43835,\"onlineMoneyMade\":2045000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456610,\"ramUsage\":2.4,\"server\":\"max-hardware\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9f244fba-994e-4d17-9de1-ebd7efc15a80\",\"moduleSequenceNumber\":9890}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///9f244fba-994e-4d17-9de1-ebd7efc15a80\",\"moduleSequenceNumber\":9890}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"max-hardware\",\"moduleSequenceNumber\":9890,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"foodnstuff\",\"phantasy\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":5.877999964038754,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":2500000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-781735.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[7,7],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-635290-Netburners.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[6],[2,3],[6,3,2],[5,3,1,4]],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-562456-ECorp.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,1,1],[0,0,0,0,1,0,0]],\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-240043-KuaiGongInternational.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"341691143\",\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-913823.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"6V3rjS6144CsqD598sW73vjn8747ZYPWYeF643GeE68\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-288411.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(()()()\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-968027.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[0,7],[2,6],[4,8],[5,6],[2,8],[0,1],[6,7],[4,6],[1,3],[0,3]]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-821880.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-900057.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[175,[1,2,3,4,5,6,7,8,9,10,11,12]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-354134.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"617669950\",-20],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-434393.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"4u8BsW88i3GqHqubnZZsu71n6UUwx0HBMekHIyaTlD0Q0666666606666660666666\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-698974-BladeIndustries.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":575073276,\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-545338.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[13,[[10,11],[2,12],[6,9],[4,11],[1,9],[0,2],[0,6],[1,7],[6,7],[0,11],[5,8],[7,11],[7,12],[5,12],[10,12],[7,8],[0,12]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-684398.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"01111110001101011000011111110000\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"22.2.2.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"omega-net\",13],\"dataMap\":{\"omega-net\":[12417786424,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":251474099141.43082,\"onlineMoneyMade\":12417786424,\"onlineRunningTime\":9.010000000000002,\"pid\":2456608,\"ramUsage\":2.4,\"server\":\"omega-net\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///cd7ab218-36cb-44c4-9c74-670c3f373d4c\",\"moduleSequenceNumber\":9883}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///cd7ab218-36cb-44c4-9c74-670c3f373d4c\",\"moduleSequenceNumber\":9883}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"omega-net\",\"moduleSequenceNumber\":9883,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zer0\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":26,\"hackDifficulty\":9.972000012210758,\"minDifficulty\":9,\"moneyAvailable\":15180668,\"moneyMax\":15180668,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":188,\"serverGrowth\":33}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-39705-Aevum.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[7,[118,11,45,157,39,165,17,5,158,73,125,30,199,185,115,77,195,179,53,143,164,20,48,180,67,91,112,83,9,77,40,54,198,70,119,55,62,62,14,122,59,28,30,134,46,152,18,84,42,63]],\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-859915.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,6],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-543390.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[145,21,69,197,182,138,74,36],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-35547.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,3,4,1,0,3,6,1,2,2,4,0,1,3,3,2,3,6,7,3,2,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-566536.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9r6SMLqfNM08JqHQ1UpM920391U422ZT3396f6sMr6fr64\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-364242.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[6,11,4,17,30,37,47,1,37,34,35,9,9,42,28],[12,36,34,35,21,43,45,30,7,16,16,10,8,16,50],[31,23,16,25,41,48,23,14,45,47,48,6,30,11,4]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-360058.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":813695902,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-820296.cct\",\"type\":\"Total Ways to Sum\",\"data\":65,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-441452.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()()))()(((aaaa)(\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-56535.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"5ud2xW310868Jx22Q8nD970933h0U480872jo\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-611353-FulcrumSecretTechnologies.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"25014891181\",\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-986785-Aevum.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()a)a()(aaaa(a(())((\",\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-759463.cct\",\"type\":\"Array Jumping Game\",\"data\":[10,6,3,5,10,9,5,9,5,9,0,5,3,9,4,8],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-891495.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"11713714156\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-750990.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"349605227\",62],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"48.8.1.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"crush-fitness\",\"moduleSequenceNumber\":9871,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"zb-institute\",\"catalyst\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":5250432.7,\"moneyMax\":13126081.75,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":252,\"serverGrowth\":33}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-542207.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"QQQQQQQQRRRRRssAAffJJDDeeccoodd4444RR1111111111111ffb55aaaaFSSSSSSSSSSSSSSbTTTTTTTT\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-612153.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[72,125,80,39,92,108,38,163,168,170,43,121,111,78,15,131,69,105,57,94,107,131,143,82,52,13],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-91750.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[13,115,93,174,27,13,24,172,5,124,144,60,110,128,9,58,112,200,200,95,180,56,54,95],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-315097.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"qaaaaaaaaaaaaaaNFFKKKKKKKZZJJFGGGGG1ZZBBOOOOOOAAavvvvvRRRR55n6666666666dbboo\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-635018.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[124,89,59,122,24,40,181,183,190,182,195,165,169,173,19,154,4,143],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-588278.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[3,-6,1,-2,-8,10,2,-3,8,0,-9,0,-3],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-918190.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[7,4,-8,5,-8,6,-10,-6,2,-1,9,-6,4,-10,1,-1,1,-4,-10],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-175507.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"bbbbbbbbbbNNjjpr1555555555555DHHLUDDDDDDDD33kkHHHHHHHHHHHHHFFFFFFFFFFFNyy22DDDggC88ihhWWWWW\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-607203-Aevum.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"))(())))a\",\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-959997-Sector-12.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":895651955,\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-887878-Bachman&Associates.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[8],[3,5],[5,2,6],[1,1,8,1],[6,5,7,4,1],[3,9,2,2,6,4],[9,5,9,1,9,6,7],[9,8,6,1,5,9,2,4],[9,5,2,7,1,7,3,6,7],[9,5,3,2,3,7,1,8,5,3],[2,4,6,5,9,6,2,3,9,9,7]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-149729.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[29,9,12,47,30,32],[50,47,33,31,12,26],[40,39,10,49,6,21],[10,36,2,47,49,24],[17,16,40,21,13,3],[21,36,25,34,39,1],[42,13,49,23,13,30],[22,32,35,12,13,21],[5,12,35,11,4,43],[3,4,38,47,45,41],[26,8,7,2,28,15]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-278707.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"bbGG5ZZZPYYWWWWWWWWWWW370000000000rPPPE33jjkkkkkkkkkQyFFFFFFFFhy55MMzzzqTTCC5588\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-869089.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[176,[5,9,13,15,17,19,23,24,28,30,32]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-873120-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[30,27,58,144,42,173,114,151,52,119,65,56,199,186,89,88,132,13,100,143,56,96,70,180,113,122,188,5,183,33,35,56,193,164,54,132,61,18,175,33,2,99,190,4,53,137,183,98,125,108],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-116436-ClarkeIncorporated.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,1,1,0,0,0],[1,0,0,1,0,0,0,0,0,1,1,0],[0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,1,0,0,0,0],[0,1,0,0,0,0,1,0,1,1,1,0],[0,0,1,0,0,0,0,0,1,0,1,1],[0,0,0,1,0,0,1,0,0,0,1,0],[1,0,0,0,0,1,0,0,1,1,0,0],[0,1,0,0,1,0,1,0,0,0,1,1],[1,1,0,0,0,0,1,1,0,0,0,0],[0,1,1,0,0,0,0,0,0,0,0,0]],\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-875641.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"))aa))(a(a)\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-741265.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[69,[1,2,3,5,6,7,9,12]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-106291-ECorp.cct\",\"type\":\"Total Ways to Sum\",\"data\":21,\"reward\":{\"name\":\"ECorp\",\"type\":0}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"83.9.9.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"iron-gym\",13],\"dataMap\":{\"iron-gym\":[4090000000,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":279415665712.71344,\"onlineMoneyMade\":4090000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456632,\"ramUsage\":2.4,\"server\":\"iron-gym\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1cea92ee-c82e-4cbf-b8cb-4a9da2875b79\",\"moduleSequenceNumber\":9920}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///1cea92ee-c82e-4cbf-b8cb-4a9da2875b79\",\"moduleSequenceNumber\":9920}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"iron-gym\",\"moduleSequenceNumber\":9920,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":11.540000012207267,\"minDifficulty\":10,\"moneyAvailable\":5000000,\"moneyMax\":5000000,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-491904.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[83,14,166,144,24,198,117,69,122,137,44,170,83,29,170,85,13,151,118,62,57,200,91,162,48,57,50,10,95,116,24,127,102,64,46,23,147,42,53,128,47],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-433864.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[8,[[0,6],[4,7],[3,5],[2,6],[1,7],[3,7],[3,6],[2,6]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-688813.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[75,12,151,122,193,9,71,40,59,144,63,190,61,61,145,99,157,43,2,136,141,94,94,158,173,111,81,7,131,168,14,107,142,182,130,96,104],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-63912.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"hyjvmhIqmhIqmhI7I7I7I7wI77xZ407wI76qZpO124HD4HD4HP6f3HP64m0lsrmFrmFrK86\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-417459.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[17,42,48,16,17],[5,37,32,16,32],[31,30,38,47,27],[1,48,10,29,17],[6,22,33,24,16],[21,38,25,6,7],[49,42,4,5,20],[49,33,30,32,38]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-997569.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[25,22,36,8,49,1,39],[32,41,16,43,8,15,28],[2,1,48,42,27,50,15],[1,20,19,27,11,24,36],[43,31,22,35,25,8,35],[19,38,39,37,46,19,5],[40,13,31,21,4,39,24]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-309169-Bachman&Associates.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,1],[0,0,0,0,0,0,0],[0,0,0,0,1,0,0],[0,1,0,0,1,0,0],[0,1,0,0,1,1,0],[0,0,0,0,0,1,0]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-468087-Daedalus.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"rBzzzzZ3LYryZM5IZM5IZMH3vpgggggQD2ggQbbbbbbbbbbbbbbTf3mYbbbbTf3mYbo1bYFYQE1\",\"reward\":{\"name\":\"Daedalus\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-431786-TheCovenant.cct\",\"type\":\"Total Ways to Sum\",\"data\":15,\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-846117.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[4,43,8,3,15,21,25,24,43,19],[40,38,23,14,1,11,28,1,31,47]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-653031.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[88,46,8,28,92,197,174,149,143,199,182,119,46,184,172,114,173,116,85,163,37,67,196,199,67,148,48],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-497397.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[41,45,41,15,48,20,38,35,2,33],[6,23,25,43,6,42,9,13,34,47],[37,21,3,50,34,3,17,47,35,9],[46,19,25,9,38,19,36,30,28,48],[12,9,49,10,14,25,41,6,8,41],[9,13,9,40,1,22,40,11,32,44],[42,19,45,46,3,20,12,7,43,12],[49,15,29,17,25,12,41,4,32,40],[7,24,37,17,11,7,13,42,44,30],[14,37,26,22,36,48,10,33,45,14],[2,7,11,14,7,44,1,5,18,43]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-662164.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":16938639593371604,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-100132.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,9],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"99.0.7.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"millenium-fitness\",6],\"dataMap\":{\"millenium-fitness\":[51062500000,4902,4896,48]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":196785559710.42157,\"onlineMoneyMade\":51062500000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456596,\"ramUsage\":2.4,\"server\":\"millenium-fitness\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7633f752-7e1b-4a4b-b51e-21907290c89b\",\"moduleSequenceNumber\":9864}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7633f752-7e1b-4a4b-b51e-21907290c89b\",\"moduleSequenceNumber\":9864}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"millenium-fitness\",\"moduleSequenceNumber\":9864,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"summit-uni\",\"galactic-cyber\",\"snap-fitness\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":18.756000011585563,\"minDifficulty\":17,\"moneyAvailable\":0,\"moneyMax\":62500000,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":508,\"serverGrowth\":36}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-984437.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9XZgSedsOo295xES8w886mS8S8w945fIXDn2956VDnA227L82ThZm63\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-322090.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,1],[0,1,0,0,1,1,1,0,0,1,0],[0,1,0,1,0,0,1,1,0,0,0],[0,0,0,0,0,1,0,0,0,0,0],[1,0,0,1,0,0,1,1,1,0,0],[0,1,1,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,1,0,0,0,0],[1,1,1,0,0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-15482.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((a))((((((\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-523982.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[9,13],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-252885.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(((((a(aaa(\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-615025.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"J3hYpDMwECXa4pDMwECeMwpDpCeee6ZH8daee6Ze6Ze6ZeiV516W216W216nCqFm7mL\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-364543.cct\",\"type\":\"Array Jumping Game\",\"data\":[0,6,8,0,1,8,10,7,0,7,0,0,10,2,0,5,3,3,6,1,0,6,4,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-7085.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-1,1,-7,9,9,-10,6,-4,-7,7,-1,4,9,0,0,6,-7,9,-8,-9,8,-5,7,-6,8,5,-1,3,5,2,4,5,-6],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-87993.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,1,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-513586.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,10,0,3,2,-9,-7,-6,-4,-9,-5,3,8,4,-8,8,-6,-10,-3,7,-9],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-840112-MegaCorp.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,0],[0,0,0,0,1,0],[0,0,0,0,1,0],[0,0,1,0,1,0],[1,0,0,1,0,0],[0,0,0,1,0,0],[0,1,0,0,0,0]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-232647.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-2,-2,10,-6,-8,8,2,-9,7,-6,5,3,-3,-9,4,6,-4,9,0,4,8],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":true,\"ip\":\"55.3.9.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"powerhouse-fitness\",13],\"dataMap\":{\"powerhouse-fitness\":[184050000000,10634,10634,52]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":461035848425.9578,\"onlineMoneyMade\":184050000000,\"onlineRunningTime\":9.010000000000002,\"pid\":2456627,\"ramUsage\":2.4,\"server\":\"powerhouse-fitness\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7279dae4-2f31-4426-9c06-68d103df4a33\",\"moduleSequenceNumber\":10023}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///7279dae4-2f31-4426-9c06-68d103df4a33\",\"moduleSequenceNumber\":10023}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"powerhouse-fitness\",\"moduleSequenceNumber\":10023,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"kuai-gong\",\"fulcrumassets\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":19.94000001220793,\"minDifficulty\":19,\"moneyAvailable\":225000000,\"moneyMax\":225000000,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1074,\"serverGrowth\":51}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-962674.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"5Eo2jB419vOSm6vHaJ525v8Ras149xmd8yzkpZ228SgXXUX3T74741hnX3V47\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-820129.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":975109542,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-65764.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[1,3,-5,-4,3,2,8,4,0,4,-7,-5,2,-8,5,10,-6,-4,8,-6,8,1,-4,0,0,4,-10,-1,3,0,4,5,-6,-7,-5,6],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-890928.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":246245815,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-584448-ClarkeIncorporated.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"1010010101011000010111100010011011\",\"reward\":{\"name\":\"Clarke Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-448923.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[46,17,43,25],[39,21,40,43],[43,37,9,25],[46,19,7,8],[45,49,24,47],[45,11,27,43]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-234182.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"706ySQmo162pP980975gJxVS481B845WYJZx5880VU6Y5Rz872VU\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-977113.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"ERRRRRRRNZv4Rky42Yl242q38As8Ldh6odlzYd5t1dlzCzCz61dzG1dzG1dzGi8s1S44K8XImYHVImYHpYz7I1HkD6Di4aI\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-317726.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[189,104,60,29,130,180,4,185,193,50,85,115,163,32,57,71],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-538937.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":588,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"snap-fitness\",\"httpPortOpen\":true,\"ip\":\"48.1.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"snap-fitness\",\"moduleSequenceNumber\":9928,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"millenium-fitness\",\"omnia\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":42,\"hackDifficulty\":42,\"minDifficulty\":14,\"moneyAvailable\":45000000,\"moneyMax\":112500000,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":790,\"serverGrowth\":57}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-232377.cct\",\"type\":\"Total Ways to Sum\",\"data\":56,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-871225-MegaCorp.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[6],[4,2],[3,2,8]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-408787.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[175,12,131,157,57,100,131,11,118],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-594972-MegaCorp.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[1,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1],[1,0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-991354.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[22,28],[21,22],[21,25],[7,14],[5,13],[8,17],[17,20],[18,25],[9,19],[11,12],[8,14],[9,13],[22,23],[24,30],[21,23]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-326787.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[7,[[1,6],[0,3],[0,2],[0,6],[1,5],[3,5]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-442944.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"742364\",67],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-644313-Bachman&Associates.cct\",\"type\":\"Array Jumping Game II\",\"data\":[2,2,3,1,0,5,1,1,6,1,5,4,6,3,3,3,3,1,3,3,6,1,2,0],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-241521.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[3,8],[0,1],[2,8],[1,3],[1,6],[6,7],[1,5],[3,9],[0,9],[5,7],[4,7],[3,8],[5,9],[1,2]]],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"run4theh111z\",\"httpPortOpen\":true,\"ip\":\"97.4.9.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":31.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"run4theh111z\",13],\"dataMap\":{\"run4theh111z\":[0,21294,0,26]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":17527369884.265472,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456625,\"ramUsage\":2.4,\"server\":\"run4theh111z\",\"threads\":13,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2b73408e-9947-47f0-a519-f4e9b270cfc9\",\"moduleSequenceNumber\":10009}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2b73408e-9947-47f0-a519-f4e9b270cfc9\",\"moduleSequenceNumber\":10009}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"run4theh111z\",\"moduleSequenceNumber\":10009,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":2.3999999815247373,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":544,\"serverGrowth\":0}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-358845.cct\",\"type\":\"Array Jumping Game II\",\"data\":[4,4,6,3,6,2,5,2,2,6,1,1,1,3,2,5,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-301731.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[117,16,161,181,55,157,98,9,92,27,117,40,2,158,157,126,125,6,161,61,116,166,45,13,31,190,124,183,105,16,178,126,73,135,33,35,4,189,145,145,12,121,17]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-826407-TheCovenant.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9UrKULuOGr07iqa67W6115FYs2U328Sv0gSKy0772kQ8670JmSKN585046\",\"reward\":{\"name\":\"The Covenant\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-137106.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"8lWJCkZx7331i491x781T659R0wEKE3Dd092222rdEoU05yRbvt\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-538565.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,2,0,2,8,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-724030-KuaiGongInternational.cct\",\"type\":\"Total Ways to Sum\",\"data\":44,\"reward\":{\"name\":\"KuaiGong International\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-782366-Illuminati.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1,0]],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-316931.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[8,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-929756.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[145,66,96,9,143,10,157,120,128,197,108,4,64,185,83,11,193,49,97,131,146,16,153,148,6,99,95,198,1,99,1,57,45],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"53.3.7.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"I.I.I.I\",6],\"dataMap\":{\"I.I.I.I\":[0,9810,0,30]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8133787407.737065,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456616,\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///641ddd52-4f70-48ba-bb7f-d52b56f23ee2\",\"moduleSequenceNumber\":9907}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///641ddd52-4f70-48ba-bb7f-d52b56f23ee2\",\"moduleSequenceNumber\":9907}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"I.I.I.I\",\"moduleSequenceNumber\":9907,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":2.7819999759901224,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":3,\"requiredHackingSkill\":349,\"serverGrowth\":0}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-955094.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[200,[1,2,3,5,8,12,13,14,15,16,17,18]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-909222.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"bbbbbu3bbbu3bbbQqJJ3bb3dvCJJ3bbbpdg2g6C6Qyn62bbbbbbbQD2yyDASSl4k5AXLTYR3K\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-70684.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"11111001100011000111011100000011010000111111010011011111001\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-592722-Netburners.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[7,11],\"reward\":{\"name\":\"Netburners\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-176580.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[-8,-8,-3,-1,7,8,-9,1,4,-8,1,1,2,-6,-4,-8,0,5,7,-7,1,6,8,3,10,6,2,0,-6,5,-10,-8,9],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-211652-Sector-12.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()aaa()a((a))()()()a\",\"reward\":{\"name\":\"Sector-12\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-441045.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[116,192,137,79,82,75,157,134,76,142,183,151,2,174,10,1,39,177,132,150,137],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-518411.cct\",\"type\":\"Minimum Path Sum in a Triangle\",\"data\":[[2],[6,3],[7,2,5],[6,4,4,4],[1,8,4,9,9],[2,5,1,3,5,6],[8,1,3,6,7,1,3],[5,2,8,3,3,9,5,4],[8,7,7,6,7,3,8,1,4],[1,6,9,2,3,7,3,8,3,6],[7,4,1,7,8,1,1,8,3,9,3]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-452925.cct\",\"type\":\"Algorithmic Stock Trader III\",\"data\":[50,86,93,74,174,42,88,64,197,43],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-268817-ECorp.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":98,\"reward\":{\"name\":\"ECorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-654459.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[5,[9,172,93,93,195,43,151,135,134,195,158,150,6,137,182,151,19,15,144,41,180,154,141,91]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-756983-Illuminati.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[23,54,69,127,115,174,72,24,5],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-110967-Bachman&Associates.cct\",\"type\":\"Array Jumping Game\",\"data\":[4,4,1,0,0,7,0,0,8,10,0,6],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-408406.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"96Q0fhsaaR6427c468aULJcApF519roz7sX5ms688aaPNZCsY383m3k268RSfHunla4171oZ4Rp6262nZ\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-990279.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"PDMEGaG7HL01aGPGPGTTTTTTTTTTDTDTDTDTzDTzDTzDiDTziDTziDT7Z68XDT7m7Z68Xgk7658Xg82Mi\",\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"22.5.4.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":127.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"avmnite-02h\",53],\"dataMap\":{\"avmnite-02h\":[0,86867,0,53]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":71327499866.90091,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456607,\"ramUsage\":2.4,\"server\":\"avmnite-02h\",\"threads\":53,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///6db8fbb3-1fb2-4344-892c-7d9d43fa0627\",\"moduleSequenceNumber\":9880}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///6db8fbb3-1fb2-4344-892c-7d9d43fa0627\",\"moduleSequenceNumber\":9880}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"avmnite-02h\",\"moduleSequenceNumber\":9880,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"silver-helix\",\"syscore\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":2.497999999999946,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":3,\"requiredHackingSkill\":207,\"serverGrowth\":0}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-716565.cct\",\"type\":\"Total Ways to Sum II\",\"data\":[132,[1,3,4,5,6,9,11,12,13]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-115381.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[78,147,52,70,59,31],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-346492.cct\",\"type\":\"Total Ways to Sum\",\"data\":62,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-634916.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,1,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,0,1,1,1],[0,1,0,0,0,0,0,1,1,1,0,0],[0,0,0,0,0,1,1,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,1,0,0,0],[1,1,0,0,1,0,0,0,0,0,0,0],[0,1,0,0,1,0,0,0,0,1,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-827646.cct\",\"type\":\"Find Largest Prime Factor\",\"data\":904012557,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-526823-Illuminati.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"83118205165\",\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-257855.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"8LckSu5IF515Oq1F7460718Ba6UYUbC823UCf997BL5kFC647\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-305185.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[188,181,30,100,52,102,133,41,7,85,89,171,196,191,34,191,130,116,137,172,20,61,142,125,2,28,84,123,33,126,20,14,53,15],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\".\",\"httpPortOpen\":true,\"ip\":\"97.7.0.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":14.4,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\".\",6],\"dataMap\":{\".\":[0,9804,0,36]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":8148531433.249578,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456628,\"ramUsage\":2.4,\"server\":\".\",\"threads\":6,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2234c890-4a57-4a4b-9256-55246abd60ff\",\"moduleSequenceNumber\":10028}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///2234c890-4a57-4a4b-9256-55246abd60ff\",\"moduleSequenceNumber\":10028}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\".\",\"moduleSequenceNumber\":10028,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"fulcrumtech\",\"clarkinc\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":2.6359999759937778,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":5,\"requiredHackingSkill\":514,\"serverGrowth\":0}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-807108.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[10,[[0,9],[0,1],[0,2],[3,9],[2,4],[2,5],[4,8],[0,8],[1,4],[1,3],[3,8],[4,8],[3,7],[1,5],[3,6],[2,3]]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-900167-Aevum.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"80102595631\",-73],\"reward\":{\"name\":\"Aevum\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-694326.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0,0,0,0,1,0,0,0,1],[0,0,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-874432.cct\",\"type\":\"Array Jumping Game II\",\"data\":[0,7,2,3,5,3,2,3,2,1,0,7,0],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-949901.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[10,-2,0,-6,6,5,-6,-3],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-484716.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"hiiiiiixxxxxxxxxxxxZZZZZZZZZCCKKKnnnnnnnnnnnnnnnnnnnnnFKz666vvssss\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-306940-FulcrumSecretTechnologies.cct\",\"type\":\"Compression III: LZ Compression\",\"data\":\"6anuro4UNF2uZ1TMrzhUAOnRKemvRKemHiHHHHHH2jyC5sHH2222224OBTl4OlgKB0Hxw0Hxw\",\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-121318.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9FyA1Eks7h01r463MPL178FFEigYb68548yD66694yW51gx8G035od930985oru4E36\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-643940-MegaCorp.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[56,148,77,181,176,190,6,188,162,3,137,68,183,37,196,141,119,170,20,111,100,189,141,24,85,7,93,43,71],\"reward\":{\"name\":\"MegaCorp\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-242683.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,0,1],[0,0,0,0,0,0],[1,0,1,0,0,1],[0,0,0,0,0,0],[0,0,0,1,1,0],[0,1,0,0,0,0],[0,1,1,0,1,0],[0,0,0,1,0,0],[1,1,1,0,0,0],[0,1,1,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-722487.cct\",\"type\":\"Compression II: LZ Decompression\",\"data\":\"9hfC7cdRli0101395TeZW2lrX559GwMvmHCV609Q2XMIXpzN09GP3CeNP3x24\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-770336.cct\",\"type\":\"Total Ways to Sum\",\"data\":65,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-850867-FulcrumSecretTechnologies.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"VVccffffffff888M1A55558888888oooooooooooooolRiiiiiiiio00WmmssssssssDDLLLLLLLLLLLLLLLLffvVJJ\",\"reward\":{\"name\":\"Fulcrum Secret Technologies\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-351775.cct\",\"type\":\"Array Jumping Game\",\"data\":[2,0,9,8,8,0,3,2,10,7,4,7,2,2,6,0,0,10,0,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-101935.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":3770842848836109,\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-154534.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":483944,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-544520.cct\",\"type\":\"Compression I: RLE Compression\",\"data\":\"8LLkCjjjjj88YYGIIzzzzzzzzzzzzShqxx55EEEEEEEEhhYYY11IYYYYYYYYYYYYTusrIFHHHHHCCCCCVVt\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-976479.cct\",\"type\":\"Total Ways to Sum\",\"data\":49,\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"2.3.1.9\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":7.2,\"runningScripts\":[{\"ctor\":\"RunningScript\",\"data\":{\"args\":[\"CSEC\",3],\"dataMap\":{\"CSEC\":[0,4887,0,33]},\"filename\":\"/scripts/hack.js\",\"logs\":[],\"logUpd\":true,\"offlineExpGained\":0,\"offlineMoneyMade\":0,\"offlineRunningTime\":0.01,\"onlineExpGained\":4111125780.406075,\"onlineMoneyMade\":0,\"onlineRunningTime\":9.010000000000002,\"pid\":2456613,\"ramUsage\":2.4,\"server\":\"CSEC\",\"threads\":3,\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///b9e597f4-411d-413d-a819-1005dc618de0\",\"moduleSequenceNumber\":9899}]}}],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":{},\"dependencies\":[{\"filename\":\"/scripts/hack.js\",\"url\":\"blob:file:///b9e597f4-411d-413d-a819-1005dc618de0\",\"moduleSequenceNumber\":9899}],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"CSEC\",\"moduleSequenceNumber\":9899,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"sigma-cosmetics\",\"neo-net\"],\"smtpPortOpen\":true,\"sqlPortOpen\":false,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":2.8779999762293986,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":3,\"requiredHackingSkill\":59,\"serverGrowth\":0}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-322219.cct\",\"type\":\"Shortest Path in a Grid\",\"data\":[[0,0,0,0,1,0,0],[1,1,0,0,0,0,1],[0,0,0,1,0,1,0],[0,1,0,0,0,0,1],[0,0,0,1,0,0,1],[0,0,1,1,1,0,0],[0,0,0,0,1,1,0],[0,0,0,1,1,0,0],[1,0,1,0,0,0,0],[0,0,1,0,0,0,1],[1,0,0,0,0,0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-487461.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":128,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-240416.cct\",\"type\":\"Generate IP Addresses\",\"data\":\"17018514746\",\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-196393.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-148642-Bachman&Associates.cct\",\"type\":\"Proper 2-Coloring of a Graph\",\"data\":[9,[[0,2],[3,4],[5,7],[6,8],[1,2],[3,6],[1,7],[0,8],[4,7],[2,6]]],\"reward\":{\"name\":\"Bachman & Associates\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-636496-Illuminati.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":642671,\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-748345-Illuminati.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":39,\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-638353.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[6,[79,92,85,55,135,150,195,69,126,33,123,154,62,70,184,167,136]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-888861.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[184,78,194,55,104,75,166,4,132,142,61,37,152,200,59,133,131,76,115,70,142,9,58,200,83,195,67,8,101,199,66,192,200,163,108,105,175,161],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-45439-Illuminati.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"9198108407\",-27],\"reward\":{\"name\":\"Illuminati\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-397425-TianDiHui.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"()))(((\",\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-218645.cct\",\"type\":\"HammingCodes: Encoded Binary to Integer\",\"data\":\"00111111111\",\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-72063.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[13,9],\"reward\":{\"name\":\"\",\"type\":1}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"The-Cave\",\"httpPortOpen\":true,\"ip\":\"7.1.5.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"The-Cave\",\"moduleSequenceNumber\":10017,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"b-and-a\",\"w0r1d_d43m0n\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":925,\"serverGrowth\":0}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":true,\"ip\":\"50.0.5.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"w0r1d_d43m0n\",\"moduleSequenceNumber\":10019,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"The-Cave\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":0,\"hackDifficulty\":0,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":4500,\"serverGrowth\":0}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-313627-NWO.cct\",\"type\":\"Array Jumping Game\",\"data\":[1,4,0,0,5,1,0,0,0],\"reward\":{\"name\":\"NWO\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-897112-OmniTekIncorporated.cct\",\"type\":\"Algorithmic Stock Trader IV\",\"data\":[4,[59,174,4,65,108,47,52,86,39,30,188,36,36,87,188,28,76,83,190,169,117]],\"reward\":{\"name\":\"OmniTek Incorporated\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-768755.cct\",\"type\":\"HammingCodes: Integer to Encoded Binary\",\"data\":61316893,\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-939409.cct\",\"type\":\"Array Jumping Game II\",\"data\":[4,3,1,1,5,0,1,3,3,0,1,1,4,0,2,9,3,2,0,4,4,6,5,3,5],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-370134-BladeIndustries.cct\",\"type\":\"Sanitize Parentheses in Expression\",\"data\":\"(a((aa()(())()))(()\",\"reward\":{\"name\":\"Blade Industries\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-666376.cct\",\"type\":\"Unique Paths in a Grid II\",\"data\":[[0,0],[1,0],[0,0],[0,0],[0,0],[0,0],[0,0]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-319941.cct\",\"type\":\"Algorithmic Stock Trader I\",\"data\":[37,48,135,114,142,175,89,52,176,98,31,133,79,81,46,145,139,49,7,16,164,78,113,164,151,89,40,42,126,125,83,72,113,178,72,114,169],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-828478.cct\",\"type\":\"Spiralize Matrix\",\"data\":[[7,33,13,5,6,28],[19,32,26,27,18,49],[23,24,49,42,34,12],[24,9,45,5,17,1],[25,38,4,19,5,25]],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-146155-TianDiHui.cct\",\"type\":\"Algorithmic Stock Trader II\",\"data\":[66,25,86,93,176,104,100,178,81,150,14,143,11,22,35,177,110,111,198,192,189,12,105,119,58,174,199,162,24,152,105,173,45],\"reward\":{\"name\":\"Tian Di Hui\",\"type\":0}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-330277.cct\",\"type\":\"Subarray with Maximum Sum\",\"data\":[6,6,-1,1,-2,-2,8,9,1,9,-3,7,5,3,9,-10,-6,9,6,5,6,1,8,-5,-9,-2,7,-8,2,5,1,5,-10,-10,-10,-7,4,-1,2],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-277047.cct\",\"type\":\"Merge Overlapping Intervals\",\"data\":[[2,8],[16,22],[3,12],[22,30],[9,12],[12,18]],\"reward\":{\"name\":\"\",\"type\":3}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-719282.cct\",\"type\":\"Unique Paths in a Grid I\",\"data\":[2,12],\"reward\":{\"name\":\"\",\"type\":1}}},{\"ctor\":\"CodingContract\",\"data\":{\"tries\":0,\"fn\":\"contract-9094.cct\",\"type\":\"Find All Valid Math Expressions\",\"data\":[\"1443884893\",46],\"reward\":{\"name\":\"\",\"type\":3}}}],\"cpuCores\":1,\"ftpPortOpen\":true,\"hasAdminRights\":true,\"hostname\":\"darkweb\",\"httpPortOpen\":true,\"ip\":\"65.6.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}\",\"filename\":\"/scripts/hack.js\",\"url\":\"\",\"module\":\"\",\"dependencies\":[],\"dependents\":[],\"ramUsage\":2.4,\"server\":\"darkweb\",\"moduleSequenceNumber\":10031,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}}],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":true,\"sqlPortOpen\":true,\"sshPortOpen\":true,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":5,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"hacknet-node-0\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-0\",\"httpPortOpen\":false,\"ip\":\"83.9.4.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-1\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-1\",\"httpPortOpen\":false,\"ip\":\"8.4.6.0\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-2\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-2\",\"httpPortOpen\":false,\"ip\":\"74.5.8.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-3\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-3\",\"httpPortOpen\":false,\"ip\":\"42.0.0.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-4\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-4\",\"httpPortOpen\":false,\"ip\":\"83.2.4.6\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-5\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-5\",\"httpPortOpen\":false,\"ip\":\"75.8.5.7\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-6\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-6\",\"httpPortOpen\":false,\"ip\":\"5.4.2.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-7\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-7\",\"httpPortOpen\":false,\"ip\":\"43.1.2.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-8\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-8\",\"httpPortOpen\":false,\"ip\":\"87.9.2.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-9\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-9\",\"httpPortOpen\":false,\"ip\":\"89.1.9.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-10\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-10\",\"httpPortOpen\":false,\"ip\":\"99.2.8.4\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-11\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-11\",\"httpPortOpen\":false,\"ip\":\"29.2.6.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-12\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-12\",\"httpPortOpen\":false,\"ip\":\"7.5.6.2\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-13\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-13\",\"httpPortOpen\":false,\"ip\":\"10.2.1.9\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-14\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-14\",\"httpPortOpen\":false,\"ip\":\"5.4.7.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-15\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-15\",\"httpPortOpen\":false,\"ip\":\"81.1.1.6\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-16\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-16\",\"httpPortOpen\":false,\"ip\":\"75.0.9.8\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-17\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-17\",\"httpPortOpen\":false,\"ip\":\"97.4.4.1\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-18\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-18\",\"httpPortOpen\":false,\"ip\":\"44.5.3.6\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}},\"hacknet-node-19\":{\"ctor\":\"HacknetServer\",\"data\":{\"contracts\":[],\"cpuCores\":128,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"hacknet-node-19\",\"httpPortOpen\":false,\"ip\":\"93.3.0.5\",\"isConnectedTo\":false,\"maxRam\":8192,\"messages\":[],\"organizationName\":\"\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"cache\":15,\"cores\":128,\"hashCapacity\":1048576,\"hashRate\":960848.5658653639,\"level\":300,\"onlineTimeSeconds\":575308.4000095899,\"totalHashesGenerated\":552784251099.2852}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.423,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.8729,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":124.7672,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.0223,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.9919,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.6727,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":126.1025,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.5889,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":125.7371,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":131.9895,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0.006,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":10070.9356,\"isBanned\":false,\"isMember\":true,\"name\":\"Illuminati\",\"playerReputation\":1.6990621985946179e+22}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Daedalus\",\"playerReputation\":1.312471560479384e+26}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"The Covenant\",\"playerReputation\":1.3124962676167554e+26}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"ECorp\",\"playerReputation\":1.312511499027466e+26}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"MegaCorp\",\"playerReputation\":1.312511499027466e+26}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Bachman & Associates\",\"playerReputation\":1.312511499027466e+26}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Blade Industries\",\"playerReputation\":1.312511499027466e+26}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"NWO\",\"playerReputation\":1.312511499027466e+26}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Clarke Incorporated\",\"playerReputation\":1.312511499027466e+26}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"OmniTek Incorporated\",\"playerReputation\":1.312511499027466e+26}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Four Sigma\",\"playerReputation\":1.312511499027466e+26}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"KuaiGong International\",\"playerReputation\":1.312511499027466e+26}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":9878.4808,\"isBanned\":false,\"isMember\":true,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":1.312511499027466e+26}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":9957.3752,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":9825.4371,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":9825.4371,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Aevum\",\"playerReputation\":1.2283619424545194e+23}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":9893.628,\"isBanned\":false,\"isMember\":true,\"name\":\"Sector-12\",\"playerReputation\":1.3144721887116776e+26}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":true,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":9893.628,\"isBanned\":false,\"isMember\":true,\"name\":\"Netburners\",\"playerReputation\":1.3144804449590594e+26}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":true,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":true,\"name\":\"Tian Di Hui\",\"playerReputation\":8.67490338406923e+22}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":9789.1226,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":286.3073,\"isBanned\":false,\"isMember\":true,\"name\":\"Bladeburners\",\"playerReputation\":114667733299584000}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{\"s1\":\"run /bin/corpBuilder.js\",\"s2\":\"run /sbin/bank.js\",\"s3\":\"run /bin/corpGoPublic.js\",\"s4\":\"run /bin/corpBribes.js\",\"s5\":\"run /bin/faqAugs.js\",\"s6\":\"run /bin/auger.js\",\"anal\":\"run /bin/analEyez.js --target\",\"bribe\":\"run /bin/corpBribes.js\",\"burn\":\"run /bin/burn.js\",\"jobs\":\"run /bin/faqJobs.js\",\"buy\":\"run /bin/faqAugs.js\",\"install\":\"run /bin/auger.js\"}","GlobalAliasesSave":"{}","StockMarketSave":"{\"ECorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"ECorp\",\"symbol\":\"ECP\",\"price\":14884.617845512548,\"lastPrice\":14919.66869172367,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.42,\"b\":false,\"otlkMag\":6.963390940773376,\"otlkMagForecast\":30.7240316592414,\"cap\":662464082,\"spreadPerc\":0.4,\"shareTxForMovement\":61606,\"shareTxUntilMovement\":54774,\"totalShares\":87300000,\"maxShares\":17500000}},\"MegaCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"MegaCorp\",\"symbol\":\"MGCP\",\"price\":71099.63729443551,\"lastPrice\":70932.60258984745,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.42,\"b\":true,\"otlkMag\":8.987196759449775,\"otlkMagForecast\":67.64757097722546,\"cap\":412018333,\"spreadPerc\":0.4,\"shareTxForMovement\":86918,\"shareTxUntilMovement\":6726,\"totalShares\":90100000,\"maxShares\":18000000}},\"Blade Industries\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Blade Industries\",\"symbol\":\"BLD\",\"price\":274252.75119069515,\"lastPrice\":275467.5087555883,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.79,\"b\":false,\"otlkMag\":8.801689424095663,\"otlkMagForecast\":35.914967230451985,\"cap\":90041271,\"spreadPerc\":0.3,\"shareTxForMovement\":71050,\"shareTxUntilMovement\":24820,\"totalShares\":112900000,\"maxShares\":22600000}},\"Clarke Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Clarke Incorporated\",\"symbol\":\"CLRK\",\"price\":3.2883188390227853,\"lastPrice\":3.3021464359702786,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.75,\"b\":false,\"otlkMag\":8.491526781541607,\"otlkMagForecast\":40.45283759224649,\"cap\":295621115,\"spreadPerc\":0.5,\"shareTxForMovement\":30622,\"shareTxUntilMovement\":30622,\"totalShares\":81300000,\"maxShares\":16300000}},\"OmniTek Incorporated\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"OmniTek Incorporated\",\"symbol\":\"OMTK\",\"price\":720.8536154393059,\"lastPrice\":723.3190214138652,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":9.705452171888702,\"otlkMagForecast\":64.6190117995778,\"cap\":836522802,\"spreadPerc\":0.6,\"shareTxForMovement\":70929,\"shareTxUntilMovement\":19288,\"totalShares\":44500000,\"maxShares\":8900000}},\"Four Sigma\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Four Sigma\",\"symbol\":\"FSIG\",\"price\":2167.198124625615,\"lastPrice\":2155.11492466332,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1,\"b\":true,\"otlkMag\":8.663434014449484,\"otlkMagForecast\":59.71932896236614,\"cap\":1232759554,\"spreadPerc\":0.9,\"shareTxForMovement\":70785,\"shareTxUntilMovement\":36220,\"totalShares\":38700000,\"maxShares\":7700000}},\"KuaiGong International\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"KuaiGong International\",\"symbol\":\"KGI\",\"price\":99453.79381903415,\"lastPrice\":98982.07088663263,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.85,\"b\":true,\"otlkMag\":8.937497312990601,\"otlkMagForecast\":60.90350609642795,\"cap\":472286894,\"spreadPerc\":0.1,\"shareTxForMovement\":83917,\"shareTxUntilMovement\":67689,\"totalShares\":75800000,\"maxShares\":15200000}},\"Fulcrum Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Fulcrum Technologies\",\"symbol\":\"FLCM\",\"price\":2668.2111296561884,\"lastPrice\":2687.0607351217213,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.26,\"b\":true,\"otlkMag\":9.399571334433498,\"otlkMagForecast\":64.87758667562095,\"cap\":475775009,\"spreadPerc\":1,\"shareTxForMovement\":77370,\"shareTxUntilMovement\":76440,\"totalShares\":56200000,\"maxShares\":11200000}},\"Storm Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Storm Technologies\",\"symbol\":\"STM\",\"price\":100.15203914110757,\"lastPrice\":100.60687672419738,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.81,\"b\":false,\"otlkMag\":16.65645592302666,\"otlkMagForecast\":28.302978042532644,\"cap\":74292472,\"spreadPerc\":0.6,\"shareTxForMovement\":80521,\"shareTxUntilMovement\":75498,\"totalShares\":56000000,\"maxShares\":11200000}},\"DefComm\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"DefComm\",\"symbol\":\"DCOMM\",\"price\":13331.25523137559,\"lastPrice\":13376.849726002323,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":5.920137153827014,\"otlkMagForecast\":56.631435672871255,\"cap\":82401689,\"spreadPerc\":0.8,\"shareTxForMovement\":88327,\"shareTxUntilMovement\":88327,\"totalShares\":89500000,\"maxShares\":17900000}},\"Helios Labs\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Helios Labs\",\"symbol\":\"HLS\",\"price\":4867.93134548131,\"lastPrice\":4852.42372723304,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":5.253343237197147,\"otlkMagForecast\":54.14749571189942,\"cap\":261210449,\"spreadPerc\":0.3,\"shareTxForMovement\":59778,\"shareTxUntilMovement\":59778,\"totalShares\":60700000,\"maxShares\":12100000}},\"VitaLife\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"VitaLife\",\"symbol\":\"VITA\",\"price\":8687.871918927991,\"lastPrice\":8649.077317481735,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.8,\"b\":true,\"otlkMag\":6.325582379669224,\"otlkMagForecast\":54.601819515651115,\"cap\":137892617,\"spreadPerc\":0.6,\"shareTxForMovement\":50062,\"shareTxUntilMovement\":50062,\"totalShares\":76400000,\"maxShares\":15300000}},\"Icarus Microsystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Icarus Microsystems\",\"symbol\":\"ICRS\",\"price\":9428.814902458957,\"lastPrice\":9396.677137647936,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.61,\"b\":true,\"otlkMag\":8.560901336974098,\"otlkMagForecast\":59.89149937847318,\"cap\":345253576,\"spreadPerc\":0.7,\"shareTxForMovement\":93764,\"shareTxUntilMovement\":34720,\"totalShares\":55200000,\"maxShares\":11000000}},\"Universal Energy\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Universal Energy\",\"symbol\":\"UNV\",\"price\":15070.95169042611,\"lastPrice\":15028.820238858189,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.5,\"b\":false,\"otlkMag\":7.24413197824489,\"otlkMagForecast\":43.61162680031323,\"cap\":20748042,\"spreadPerc\":0.3,\"shareTxForMovement\":46089,\"shareTxUntilMovement\":46089,\"totalShares\":46500000,\"maxShares\":9300000}},\"AeroCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"AeroCorp\",\"symbol\":\"AERO\",\"price\":463.0908525685491,\"lastPrice\":464.7525720236397,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.64,\"b\":true,\"otlkMag\":5.528779774740371,\"otlkMagForecast\":53.447380141613905,\"cap\":181960289,\"spreadPerc\":0.7,\"shareTxForMovement\":46540,\"shareTxUntilMovement\":46540,\"totalShares\":76300000,\"maxShares\":15300000}},\"Omnia Cybersystems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omnia Cybersystems\",\"symbol\":\"OMN\",\"price\":174.69623193881466,\"lastPrice\":175.34268798445407,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.66,\"b\":false,\"otlkMag\":6.025436982797584,\"otlkMagForecast\":43.70407216947989,\"cap\":74817198,\"spreadPerc\":1.1,\"shareTxForMovement\":59965,\"shareTxUntilMovement\":59965,\"totalShares\":47800000,\"maxShares\":9600000}},\"Solaris Space Systems\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Solaris Space Systems\",\"symbol\":\"SLRS\",\"price\":197652.67492872517,\"lastPrice\":196879.97457206633,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":true,\"otlkMag\":9.654474561434611,\"otlkMagForecast\":60.79656964034105,\"cap\":140897491,\"spreadPerc\":0.7,\"shareTxForMovement\":119573,\"shareTxUntilMovement\":64507,\"totalShares\":27000000,\"maxShares\":5400000}},\"Global Pharmaceuticals\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"symbol\":\"GPH\",\"price\":10725.83506022038,\"lastPrice\":10692.263678566651,\"playerShares\":5800000,\"playerAvgPx\":9983.97570811784,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.56,\"b\":true,\"otlkMag\":15.025689363545851,\"otlkMagForecast\":67.2751951091737,\"cap\":123764317,\"spreadPerc\":0.6,\"shareTxForMovement\":104991,\"shareTxUntilMovement\":74716,\"totalShares\":28900000,\"maxShares\":5800000}},\"Nova Medical\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Nova Medical\",\"symbol\":\"NVMD\",\"price\":21319.25730206593,\"lastPrice\":21405.320225754087,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.72,\"b\":false,\"otlkMag\":12.123329019380463,\"otlkMagForecast\":36.178511131662546,\"cap\":253460692,\"spreadPerc\":0.6,\"shareTxForMovement\":92648,\"shareTxUntilMovement\":86366,\"totalShares\":27300000,\"maxShares\":5500000}},\"Watchdog Security\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Watchdog Security\",\"symbol\":\"WDS\",\"price\":527.14716905725,\"lastPrice\":534.5952424488651,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2.52,\"b\":true,\"otlkMag\":5.658005110678643,\"otlkMagForecast\":56.647839399808745,\"cap\":39613745,\"spreadPerc\":0.7,\"shareTxForMovement\":29756,\"shareTxUntilMovement\":29756,\"totalShares\":60800000,\"maxShares\":12200000}},\"LexoCorp\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"LexoCorp\",\"symbol\":\"LXO\",\"price\":22118.340397754822,\"lastPrice\":22264.674677020364,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.18,\"b\":false,\"otlkMag\":7.10799543941328,\"otlkMagForecast\":43.616121731573266,\"cap\":142305741,\"spreadPerc\":0.9,\"shareTxForMovement\":87359,\"shareTxUntilMovement\":87359,\"totalShares\":38300000,\"maxShares\":7700000}},\"Rho Construction\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Rho Construction\",\"symbol\":\"RHOC\",\"price\":3403.4083122890956,\"lastPrice\":3392.566179747732,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.57,\"b\":true,\"otlkMag\":6.062024866930837,\"otlkMagForecast\":55.86101260455071,\"cap\":90510480,\"spreadPerc\":0.4,\"shareTxForMovement\":67112,\"shareTxUntilMovement\":67112,\"totalShares\":29700000,\"maxShares\":5900000}},\"Alpha Enterprises\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Alpha Enterprises\",\"symbol\":\"APHE\",\"price\":58218039.38607402,\"lastPrice\":57607585.30167487,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.89,\"b\":true,\"otlkMag\":6.237477137005606,\"otlkMagForecast\":52.37981013000637,\"cap\":150473269,\"spreadPerc\":0.6,\"shareTxForMovement\":61320,\"shareTxUntilMovement\":61320,\"totalShares\":30800000,\"maxShares\":6200000}},\"SysCore Securities\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"SysCore Securities\",\"symbol\":\"SYSC\",\"price\":30272.96565339024,\"lastPrice\":30527.56527584339,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.5,\"b\":false,\"otlkMag\":11.552316210564758,\"otlkMagForecast\":35.55126460736207,\"cap\":113009159,\"spreadPerc\":0.5,\"shareTxForMovement\":41481,\"shareTxUntilMovement\":33312,\"totalShares\":27300000,\"maxShares\":5500000}},\"CompuTek\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"CompuTek\",\"symbol\":\"CTK\",\"price\":1865.406931588438,\"lastPrice\":1874.9245109452559,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.91,\"b\":false,\"otlkMag\":6.0304884315459715,\"otlkMagForecast\":43.349843237627,\"cap\":96029052,\"spreadPerc\":1,\"shareTxForMovement\":112484,\"shareTxUntilMovement\":112484,\"totalShares\":32100000,\"maxShares\":6400000}},\"NetLink Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"NetLink Technologies\",\"symbol\":\"NTLK\",\"price\":101.71162718728107,\"lastPrice\":102.85217140209721,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":2,\"b\":false,\"otlkMag\":7.280454385870701,\"otlkMagForecast\":38.566999411519284,\"cap\":36649858,\"spreadPerc\":0.8,\"shareTxForMovement\":20632,\"shareTxUntilMovement\":20632,\"totalShares\":24900000,\"maxShares\":5000000}},\"Omega Software\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Omega Software\",\"symbol\":\"OMGA\",\"price\":108840.63683172791,\"lastPrice\":109475.28925344482,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.04,\"b\":false,\"otlkMag\":6.45111260340914,\"otlkMagForecast\":42.70315725183527,\"cap\":67065574,\"spreadPerc\":0.5,\"shareTxForMovement\":61323,\"shareTxUntilMovement\":61323,\"totalShares\":7700000,\"maxShares\":1500000}},\"FoodNStuff\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"FoodNStuff\",\"symbol\":\"FNS\",\"price\":2433.6478092527827,\"lastPrice\":2444.0179069738656,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.76,\"b\":true,\"otlkMag\":5.6834200968555635,\"otlkMagForecast\":55.62405100958514,\"cap\":3338514,\"spreadPerc\":0.8,\"shareTxForMovement\":150710,\"shareTxUntilMovement\":150710,\"totalShares\":44500000,\"maxShares\":8900000}},\"Sigma Cosmetics\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Sigma Cosmetics\",\"symbol\":\"SGC\",\"price\":36428.31691615365,\"lastPrice\":36675.452911262764,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.21,\"b\":false,\"otlkMag\":7.897442741422113,\"otlkMagForecast\":40.697325635713526,\"cap\":40863555,\"spreadPerc\":1,\"shareTxForMovement\":58140,\"shareTxUntilMovement\":58140,\"totalShares\":17100000,\"maxShares\":3400000}},\"Joe's Guns\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Joe's Guns\",\"symbol\":\"JGN\",\"price\":15.019787591946221,\"lastPrice\":15.290108944310605,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":3.21,\"b\":false,\"otlkMag\":6.359868918122383,\"otlkMagForecast\":43.268162958599575,\"cap\":26081313,\"spreadPerc\":1.2,\"shareTxForMovement\":23727,\"shareTxUntilMovement\":23727,\"totalShares\":32100000,\"maxShares\":6400000}},\"Catalyst Ventures\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Catalyst Ventures\",\"symbol\":\"CTYS\",\"price\":3665.2250933154987,\"lastPrice\":3699.543621217753,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":1.67,\"b\":false,\"otlkMag\":5.625337003155854,\"otlkMagForecast\":44.24637814750384,\"cap\":3371120,\"spreadPerc\":1,\"shareTxForMovement\":42482,\"shareTxUntilMovement\":14898,\"totalShares\":181800000,\"maxShares\":36400000}},\"Microdyne Technologies\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Microdyne Technologies\",\"symbol\":\"MDYN\",\"price\":1595641.2958638167,\"lastPrice\":1588782.2039923293,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.77,\"b\":true,\"otlkMag\":9.629422980996273,\"otlkMagForecast\":58.98688072194397,\"cap\":31446176,\"spreadPerc\":1,\"shareTxForMovement\":109798,\"shareTxUntilMovement\":56956,\"totalShares\":15100000,\"maxShares\":3000000}},\"Titan Laboratories\":{\"ctor\":\"Stock\",\"data\":{\"name\":\"Titan Laboratories\",\"symbol\":\"TITN\",\"price\":58.210162610945446,\"lastPrice\":58.43862166834025,\"playerShares\":0,\"playerAvgPx\":0,\"playerShortShares\":0,\"playerAvgShortPx\":0,\"mv\":0.7,\"b\":false,\"otlkMag\":23.064430142929275,\"otlkMagForecast\":25.117831169652224,\"cap\":73520958,\"spreadPerc\":0.9,\"shareTxForMovement\":171004,\"shareTxUntilMovement\":48562,\"totalShares\":19400000,\"maxShares\":3900000}},\"Orders\":{\"ECP\":[],\"MGCP\":[],\"BLD\":[],\"CLRK\":[],\"OMTK\":[],\"FSIG\":[],\"KGI\":[],\"FLCM\":[],\"STM\":[],\"DCOMM\":[],\"HLS\":[],\"VITA\":[],\"ICRS\":[],\"UNV\":[],\"AERO\":[],\"OMN\":[],\"SLRS\":[],\"GPH\":[],\"NVMD\":[],\"WDS\":[],\"LXO\":[],\"RHOC\":[],\"APHE\":[],\"SYSC\":[],\"CTK\":[],\"NTLK\":[],\"OMGA\":[],\"FNS\":[],\"SGC\":[],\"JGN\":[],\"CTYS\":[],\"MDYN\":[],\"TITN\":[]},\"storedCycles\":22,\"lastUpdate\":1660939878910,\"ticksUntilCycle\":41}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":60,\"CodeInstructionRunTime\":20,\"DisableASCIIArt\":true,\"DisableHotkeys\":false,\"DisableTextEffects\":true,\"DisableOverviewProgressBars\":true,\"EnableBashHotkeys\":true,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":100,\"MaxLogCapacity\":360,\"MaxPortCapacity\":64,\"MaxTerminalCapacity\":300,\"OwnedAugmentationsOrder\":0,\"PurchaseAugmentationsOrder\":2,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":true,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":true,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":14,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-99,\"y\":32,\"opened\":false},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}}}","VersionSave":"19","AllGangsSave":"","LastExportBonus":"1657687699949","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"}}