{
	"ctor":"BitburnerSaveObject",
	"data": {
		"PlayerSave": {
			"ctor":"PlayerObject",
			"data": {
				"hacking":627,
				"hp":10,
				"max_hp":10,
				"strength":1,
				"defense":1,
				"dexterity":1,
				"agility":1,
				"charisma":2,
				"intelligence":0,
				"hacking_chance_mult":1.2838438412799997,
				"hacking_speed_mult":1.2838438412799997,
				"hacking_money_mult":1.2838438412799997,
				"hacking_grow_mult":1.2838438412799997,
				"hacking_exp":101669180986.0755,
				"strength_exp":0,
				"defense_exp":0,
				"dexterity_exp":0,
				"agility_exp":0,
				"charisma_exp":0,
				"intelligence_exp":0,
				"hacking_mult":1.2838438412799997,
				"strength_mult":1.2838438412799997,
				"defense_mult":1.2838438412799997,
				"dexterity_mult":1.2838438412799997,
				"agility_mult":1.2838438412799997,
				"charisma_mult":2.0418252451717116,
				"hacking_exp_mult":1.2838438412799997,
				"strength_exp_mult":1.2838438412799997,
				"defense_exp_mult":1.2838438412799997,
				"dexterity_exp_mult":1.2838438412799997,
				"agility_exp_mult":1.2838438412799997,
				"charisma_exp_mult":1.2838438412799997,
				"company_rep_mult":1.2838438412799997,
				"faction_rep_mult":1.2838438412799997,
				"money":1.391361131442575e+22,
				"city":"Sector-12",
				"location":"Alpha Enterprises",
				"jobs":{},
				"companyName":"",
				"currentServer":"home",
				"purchasedServers":[
					"j4ys3rv-1048576GB",
					"j4ys3rv-1048576GB-0",
					"j4ys3rv-1048576GB-1",
					"j4ys3rv-1048576GB-2",
					"j4ys3rv-1048576GB-3",
					"j4ys3rv-1048576GB-4",
					"j4ys3rv-1048576GB-5",
					"j4ys3rv-1048576GB-6",
					"j4ys3rv-1048576GB-7",
					"j4ys3rv-1048576GB-8",
					"j4ys3rv-1048576GB-9",
					"j4ys3rv-1048576GB-10",
					"j4ys3rv-1048576GB-11",
					"j4ys3rv-1048576GB-12",
					"j4ys3rv-1048576GB-13",
					"j4ys3rv-1048576GB-14",
					"j4ys3rv-1048576GB-15",
					"j4ys3rv-1048576GB-16",
					"j4ys3rv-1048576GB-17",
					"j4ys3rv-1048576GB-18",
					"j4ys3rv-1048576GB-19",
					"j4ys3rv-1048576GB-20",
					"j4ys3rv-1048576GB-21",
					"j4ys3rv-1048576GB-22",
					"j4ys3rv-1048576GB-23"
				],
				"hacknetNodes":[
					{
						"ctor":"HacknetNode",
						"data":{
							"cores":16,
							"level":200,
							"onlineTimeSeconds":43547.999999927284,
							"ram":64,
							"totalMoneyGenerated":435480000000000000000,

							"name":"hacknet-node-0"
						}
					},
					// ...
					{
						"ctor":"HacknetNode",
						"data":{
							"cores":16,
							"level":200,
							"moneyGainRatePerSecond":10000000000000000,
							"onlineTimeSeconds":43547.999999927284,
							"ram":64,
							"totalMoneyGenerated":435480000000000000000,
							"name":"hacknet-node-31"
						}
					}
				],
				"hashManager":{
					"ctor":"HashManager",
					"data":{
						"capacity":0,
						"hashes":0,
						"upgrades":{
							"Sell for Money":0,
							"Sell for Corporation Funds":0,
							"Reduce Minimum Security":0,
							"Increase Maximum Money":0,
							"Improve Studying":0,
							"Improve Gym Training":0,
							"Exchange for Corporation Research":0,
							"Exchange for Bladeburner Rank":0,
							"Exchange for Bladeburner SP":0,
							"Generate Coding Contract":0
						}
					}
				},
				"factions":[
					"Netburners",
					"Sector-12",
					"CyberSec"
				],
				"factionInvitations":[],
				"queuedAugmentations":[],
				"augmentations":[],
				"sourceFiles":[
					{"lvl":3, "n":1},
					{"lvl":3, "n":2},
					{"lvl":2, "n":3},
					{"lvl":1, "n":4}
				],
				"numPeopleKilled":0,
				"karma":0,
				"crime_money_mult":1.8230582546175993,
				"crime_success_mult":1.8230582546175993,
				"isWorking":true,
				"focus":false,
				"workType":"Working for Faction",
				"workCostMult":3,
				"workExpMult":2,
				"currentWorkFactionName":"CyberSec",
				"currentWorkFactionDescription":"carrying out hacking contracts",
				"workHackExpGainRate":0.19257657619199994,
				"workStrExpGainRate":0,
				"workDefExpGainRate":0,
				"workDexExpGainRate":0,
				"workAgiExpGainRate":0,
				"workChaExpGainRate":0,
				"workRepGainRate":0.8256103471615999,
				"workMoneyGainRate":0,
				"workMoneyLossRate":0,
				"workHackExpGained":22.030760316364837,
				"workStrExpGained":0,
				"workDefExpGained":0,
				"workDexExpGained":0,
				"workAgiExpGained":0,
				"workChaExpGained":0,
				"workRepGained":94.44982371528722,
				"workMoneyGained":0,
				"createProgramName":"",
				"createProgramReqLvl":100,
				"className":"",
				"crimeType":"",
				"timeWorked":28600,
				"timeWorkedCreateProgram":0,
				"timeNeededToCompleteWork":72000000,
				"work_money_mult":1.4379051022335998,
				"hacknet_node_money_mult":1.2838438412799997,
				"hacknet_node_purchase_cost_mult":0.71784215928,
				"hacknet_node_ram_cost_mult":0.71784215928,
				"hacknet_node_core_cost_mult":0.71784215928,
				"hacknet_node_level_cost_mult":0.71784215928,
				"hasWseAccount":true,
				"hasTixApiAccess":true,
				"has4SData":true,
				"has4SDataTixApi":true,
				"gang":null,
				"corporation":{
					"ctor":"Corporation",
					"data":{
						"name":"0xD1EDB3EF",
						"divisions":[
							{
								"ctor":"Industry",
								"data":{
									"name":"0xC09NF00D",
									"type":"Agriculture",
									"sciResearch":{
										"ctor":"Material",
										"data":{
											"name":"Scientific Research",
											"qty":0,
											"qlt":0,
											"dmd":0,
											"dmdR":[0, 0],
											"cmp":0,
											"cmpR":[0, 0],
											"mv":0,
											"mku":0,
											"buy":0,
											"sll":0,
											"prd":0,
											"imp":0,
											"exp":[],
											"totalExp":0,
											"bCost":0,
											"sCost":0,
											"prdman":[false, 0],
											"sllman":[false, 0],
											"marketTa1":false,
											"marketTa2":false,
											"marketTa2Price":0
										}
									},
									"researched":{},
									"reqMats":{"Water":0.5, "Energy":0.5},
									"prodMats":["Plants", "Food"],
									"products":{},
									"makesProducts":false,
									"awareness":0,
									"popularity":0,
									"startingCost":40000000000,
									"reFac":0.72,
									"sciFac":0.5,
									"hwFac":0.2,
									"robFac":0.3,
									"aiFac":0.3,
									"advFac":0.04,
									"prodMult":1,
									"upgrades":[0, 0],
									"state":"START",
									"newInd":true,
									"offices":{
										"Aevum":0,
										"Chongqing":0,
										"Sector-12":{
											"ctor":"OfficeSpace",
											"data":{
												"minEne":0,
												"maxEne":100,
												"minHap":0,
												"maxHap":100,
												"maxMor":100,
												"employees":[],
												"employeeProd":{
													"Operations":0,
													"Engineer":0,
													"Business":0,
													"Management":0,
													"Research & Development":0,
													"total":0
												},
												"loc":"Sector-12",
												"size":3
											}
										},
										"New Tokyo":0,
										"Ishima":0,
										"Volhaven":0
									},
									"lastCycleRevenue":0,
									"lastCycleExpenses":0,
									"thisCycleRevenue":0,
									"thisCycleExpenses":0,
									"warehouses":{
										"Aevum":0,
										"Chongqing":0,
										"Sector-12":{
											"ctor":"Warehouse",
											"data":{
												"level":1,
												"sizeUsed":0,
												"smartSupplyEnabled":false,
												"smartSupplyUseLeftovers":{
													"Water":true,
													"Energy":true,
													"Food":true,
													"Plants":true,
													"Metal":true,
													"Hardware":true,
													"Chemicals":true,
													"Drugs":true,
													"Robots":true,
													"AICores":true,
													"RealEstate":true
												},
												"smartSupplyStore":0,
												"loc":"Sector-12",
												"size":100,
												"materials":{
													"Water":{
														"ctor":"Material",
														"data":{
															"name":"Water",
															"qty":0,
															"qlt":0,
															"dmd":75.58593908982746,
															"dmdR":[65, 85],
															"cmp":49.899916387425115,
															"cmpR":[40, 60],
															"mv":0.2,
															"mku":6,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":1497.6516585877387,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Energy":{
														"ctor":"Material",
														"data":{
															"name":"Energy",
															"qty":0,
															"qlt":0,
															"dmd":89.98473501135986,
															"dmdR":[80, 99],
															"cmp":75.8311935068535,
															"cmpR":[65, 95],
															"mv":0.2,
															"mku":6,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":2120.3339387712795,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Food":{
														"ctor":"Material",
														"data":{
															"name":"Food",
															"qty":0,
															"qlt":0,
															"dmd":76.60628941878856,
															"dmdR":[70, 90],
															"cmp":64.70256698061246,
															"cmpR":[35, 85],
															"mv":1,
															"mku":3,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":6041.719988831794,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Plants":{
														"ctor":"Material",
														"data":{
															"name":"Plants",
															"qty":0,
															"qlt":0,
															"dmd":78.88652037050697,
															"dmdR":[20, 90],
															"cmp":56.3497334108462,
															"cmpR":[30, 70],
															"mv":0.6,
															"mku":3.75,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":3219.849924901362,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Metal":{
														"ctor":"Material",
														"data":{
															"name":"Metal",
															"qty":0,
															"qlt":0,
															"dmd":80,
															"dmdR":[75, 85],
															"cmp":70,
															"cmpR":[60, 80],
															"mv":1,
															"mku":6,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":2650,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Hardware":{
														"ctor":"Material",
														"data":{
															"name":"Hardware",
															"qty":0,
															"qlt":0,
															"dmd":80.33248829969213,
															"dmdR":[80, 90],
															"cmp":79.46912675581248,
															"cmpR":[65, 95],
															"mv":0.5,
															"mku":1,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":6188.374496059067,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Chemicals":{
														"ctor":"Material",
														"data":{
															"name":"Chemicals",
															"qty":0,
															"qlt":0,
															"dmd":55,
															"dmdR":[40, 70],
															"cmp":60,
															"cmpR":[40, 80],
															"mv":1.2,
															"mku":2,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":9000,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Drugs":{
														"ctor":"Material",
														"data":{
															"name":"Drugs",
															"qty":0,
															"qlt":0,
															"dmd":60,
															"dmdR":[45, 75],
															"cmp":70,
															"cmpR":[40, 99],
															"mv":1.6,
															"mku":1,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":40000,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"Robots":{
														"ctor":"Material",
														"data":{
															"name":"Robots",
															"qty":0,
															"qlt":0,
															"dmd":80,
															"dmdR":[80, 9],
															"cmp":80,
															"cmpR":[80, 9],
															"mv":0.5,
															"mku":1,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":67005.79321581112,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"AICores":{
														"ctor":"Material",
														"data":{
															"name":"AI Cores",
															"qty":0,
															"qlt":0,
															"dmd":81.42327588667557,
															"dmdR":[80, 99],
															"cmp":80,
															"cmpR":[80, 9],
															"mv":0.8,
															"mku":0.5,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":13269.910286542445,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													},
													"RealEstate":{
														"ctor":"Material",
														"data":{
															"name":"Real Estate",
															"qty":0,
															"qlt":0,
															"dmd":65.28555510218419,
															"dmdR":[5, 99],
															"cmp":26.275187377333474,
															"cmpR":[25, 75],
															"mv":1.5,
															"mku":1.5,
															"buy":0,
															"sll":0,
															"prd":0,
															"imp":0,
															"exp":[],
															"totalExp":0,
															"bCost":201892.31139674882,
															"sCost":0,
															"prdman":[false, 0],
															"sllman":[false, 0],
															"marketTa1":false,
															"marketTa2":false,
															"marketTa2Price":0
														}
													}
												}
											}
										},
										"New Tokyo":0,
										"Ishima":0,
										"Volhaven":0
									}
								}
							}
						],
						"funds":110000000000,
						"revenue":0,
						"expenses":0,
						"fundingRound":0,
						"public":false,
						"totalShares":1500000000,
						"numShares":1000000000,
						"shareSalesUntilPriceUpdate":1000000,
						"shareSaleCooldown":0,
						"issueNewSharesCooldown":0,
						"dividendPercentage":0,
						"dividendTaxPercentage":50,
						"issuedShares":0,
						"sharePrice":10.968169033169985,
						"storedCycles":7,
						"state":{
							"ctor":"CorporationState",
							"data":{
								"state":1
							}
						},
						"unlockUpgrades":[0, 0, 0, 0, 0, 0, 0, 0, 0],
						"upgrades":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
						"upgradeMultipliers":[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
					}
				},
				"bladeburner":null,
				"bladeburner_max_stamina_mult":1,
				"bladeburner_stamina_gain_mult":1,
				"bladeburner_analysis_mult":1,
				"bladeburner_success_chance_mult":1,
				"sleeves":[],
				"resleeves":[],
				"sleevesFromCovenant":0,
				"bitNodeN":3,
				"lastUpdate":1646318175284,
				"totalPlaytime":5233379000,
				"playtimeSinceLastAug":80685600,
				"playtimeSinceLastBitnode":80685600,
				"moneySourceA":{
					"ctor":"MoneySourceTracker",
					"data":{
						"bladeburner":0,
						"casino":0,
						"class":-338496,
						"codingcontract":0,
						"corporation":0,
						"crime":0,
						"gang":0,
						"hacking":23709587937.735367,
						"hacknet":1.3935359998725445e+22,
						"hacknet_expenses":-717.8421592799999,
						"hospitalization":0,
						"infiltration":0,
						"sleeves":0,
						"stock":-31200000000,
						"total":1.391361131442575e+22,
						"work":0,
						"servers":-21748684295709340000,
						"other":-5314200000,
						"augmentations":0
					}
				},
				"moneySourceB":{
					"ctor":"MoneySourceTracker",
					"data":{
						"bladeburner":0,
						"casino":0,
						"class":-338496,
						"codingcontract":0,
						"corporation":0,
						"crime":0,
						"gang":0,
						"hacking":23709587937.735367,
						"hacknet":1.3935359998725445e+22,
						"hacknet_expenses":-717.8421592799999,
						"hospitalization":0,
						"infiltration":0,
						"sleeves":0,
						"stock":-31200000000,
						"total":1.391361131442575e+22,
						"work":0,
						"servers":-21748684295709340000,
						"other":-5314200000,
						"augmentations":0
					}
				},
				"scriptProdSinceLastAug":23709587905.137634,
				"exploits":["N00dles", "EditSaveFile", "YoureNotMeantToAccessThis"],
				"achievements":[
					{"ID":"CYBERSEC", "unlockedOn":1642198554797},
					{"ID":"NITESEC", "unlockedOn":1642198554810},
					{"ID":"THE_BLACK_HAND", "unlockedOn":1642198554813},
					{"ID":"BITRUNNERS", "unlockedOn":1642198554816},
					{"ID":"BRUTESSH.EXE", "unlockedOn":1642198554819},
					{"ID":"FTPCRACK.EXE", "unlockedOn":1642198554823},
					{"ID":"RELAYSMTP.EXE", "unlockedOn":1642198554826},
					{"ID":"HTTPWORM.EXE", "unlockedOn":1642198554830},
					{"ID":"SQLINJECT.EXE", "unlockedOn":1642198554834},
					{"ID":"FORMULAS.EXE","unlockedOn":1642198554837},
					{"ID":"INSTALL_1","unlockedOn":1642198554840},
					{"ID":"NS2","unlockedOn":1642198554843},
					{"ID":"FROZE","unlockedOn":1642198554847},
					{"ID":"SCRIPTS_30","unlockedOn":1642198554849},
					{"ID":"FIRST_HACKNET_NODE","unlockedOn":1642198554853},
					{"ID":"MAX_HACKNET_NODE","unlockedOn":1642198554855},
					{"ID":"HACKNET_NODE_10M","unlockedOn":1642198554858},
					{"ID":"DONATION","unlockedOn":1642198554862},
					{"ID":"TOR","unlockedOn":1642198554865},
					{"ID":"4S","unlockedOn":1642198554867},
					{"ID":"DAEDALUS","unlockedOn":1642198794816},
					{"ID":"SF1.1","unlockedOn":1642199274811},
					{"ID":"SCRIPT_32GB","unlockedOn":1642199274820},
					{"ID":"DRAIN_SERVER","unlockedOn":1642738642559},
					{"ID":"TRAVEL","unlockedOn":1642962148551},
					{"ID":"N00DLES","unlockedOn":1643223570990},
					{"ID":"DISCOUNT","unlockedOn":1643342251031},
					{"ID":"WORKOUT","unlockedOn":1643342310977},
					{"ID":"HOSPITALIZED","unlockedOn":1643343810986},
					{"ID":"GANG","unlockedOn":1643492387763},
					{"ID":"FULL_GANG","unlockedOn":1643637407795},
					{"ID":"GANG_MEMBER_POWER","unlockedOn":1643638067757},
					{"ID":"REPUTATION_10M","unlockedOn":1643783614558},
					{"ID":"SF2.1","unlockedOn":1643950774572},
					{"ID":"CORPORATION","unlockedOn":1644029434551},
					{"ID":"EDITSAVEFILE","unlockedOn":1644548478251},
					{"ID":"30_HACKNET_NODE","unlockedOn":1644616585324},
					{"ID":"MAX_CORES","unlockedOn":1644631058379},
					{"ID":"MONEY_1Q","unlockedOn":1644894384975},
					{"ID":"SF3.1","unlockedOn":1644978324968},
					{"ID":"MAX_RAM","unlockedOn":1645322321671},
					{"ID":"CORPORATION_REAL_ESTATE","unlockedOn":1645480601873},
					{"ID":"CORPORATION_BRIBE","unlockedOn":1645636901815},
					{"ID":"SF4.1","unlockedOn":1645668283454},
					{"ID":"QUEUE_40","unlockedOn":1646158366608},
					{"ID":"DEVMENU","unlockedOn":1646194895641},
					{"ID":"NEUROFLUX_255","unlockedOn":1646235482188},
					{"ID":"FAST_BN","unlockedOn":1646236682177}
				],
				"factionWorkType":"Faction Hacking Work",
				"committingCrimeThruSingFn":false,
				"singFnCrimeWorkerScript":null
			}
		},
		"AllServersSave":{
			"home":{
				"ctor":"Server",
				"data":{
					"contracts":[],
					"cpuCores":8,
					"ftpPortOpen":false,
					"hasAdminRights":true,
					"hostname":"home",
					"httpPortOpen":false,
					"ip":"55.5.4.2",
					"isConnectedTo":true,
					"maxRam":1073741824,
					"messages":["hackers-starting-handbook.lit", "corporation-management-handbook.lit", "j0.msg","j1.msg", "csec-test.msg", "j2.msg", "nitesec-test.msg","j3.msg","j4.msg", "19dfj3l1nd.msg"],
					"organizationName":"Home PC",
					"programs":["NUKE.exe","b1t_flum3.exe","fl1ght.exe","BruteSSH.exe","FTPCrack.exe","relaySMTP.exe","HTTPWorm.exe","SQLInject.exe","ServerProfiler.exe","DeepscanV1.exe","DeepscanV2.exe","AutoLink.exe","Formulas.exe"],
					"ramUsed":59.3,
					"runningScripts":[
						{
							"ctor":"RunningScript",
							"data":{
								"args":[],
								"dataMap":{},
								"filename":"/scripts/hacknetManager.js",
								"logs":[],
								"logUpd":true,
								"offlineExpGained":0,
								"offlineMoneyMade":0,
								"offlineRunningTime":46.75,
								"onlineExpGained":0,
								"onlineMoneyMade":0,
								"onlineRunningTime":52501.60999979699,
								"pid":1,
								"ramUsage":9.7,
								"server":"home",
								"threads":1,
								"dependencies":[{"filename":"/scripts/hacknetManager.js", "url":"blob:file:///1a686efc-a295-47cb-a0bc-e5ee93d4b21c", "moduleSequenceNumber":62565} ]
							}
						},
						{
							"ctor":"RunningScript",
							"data":{
								"args":["CyberSec"],
								"dataMap":{},
								"filename":"/scripts/factionChurn.js",
								"logs":[],
								"logUpd":true,
								"offlineExpGained":0,
								"offlineMoneyMade":0,
								"offlineRunningTime":0.01,"onlineExpGained":0,
								"onlineMoneyMade":0,
								"onlineRunningTime":208.80999999999668,
								"pid":199,
								"ramUsage":49.6,
								"server":"home",
								"threads":1,
								"dependencies":[{"filename":"/scripts/factionChurn.js", "url":"blob:file:///22252917-d298-474c-ac21-9dd948136873", "moduleSequenceNumber":178} ]
							}
						}
					],
					"scripts":[
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet method = `getForescat`;\\n\\tif (ns.stock[method]) {\\n\\t\\tns.tprint(`Have access to ${method}`);\\n\\t} else {\\n\\t\\tns.tprint(`No access to ${method}`);\\n\\t}\\n}", "filename":"stock.js", "url":"", "module":"", "dependencies":[{"filename":"stock.js", "url":"blob:file:///b40eea78-2659-4c00-a386-1d6e4bf453b5", "moduleSequenceNumber":67878 } ], "dependents":[], "ramUsage":1.6, "server":"home", "moduleSequenceNumber":39, "_hash":"2fbbc09ff007be6d9fbe34409d7e5cc31981864e756d8a18cf26fa4bc626a913", "ramUsageEntries":[{"type":"misc", "name":"baseCost", "cost":1.6} ] } },
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n    const flags = ns.flags([\\n        ['refreshrate', 200],\\n        ['help', false],\\n    ])\\n    if (flags._.length === 0 || flags.help) {\\n        ns.tprint(\\"This script helps visualize the money and security of a server.\\");\\n        ns.tprint(`USAGE: run ${ns.getScriptName()} SERVER_NAME`);\\n        ns.tprint(\\"Example:\\");\\n        ns.tprint(`> run ${ns.getScriptName()} n00dles`)\\n        return;\\n    }\\n    ns.tail();\\n    ns.disableLog('ALL');\\n    while (true) {\\n        const server = flags._[0];\\n        let money = ns.getServerMoneyAvailable(server);\\n        if (money === 0) money = 1;\\n        const maxMoney = ns.getServerMaxMoney(server);\\n        const minSec = ns.getServerMinSecurityLevel(server);\\n        const sec = ns.getServerSecurityLevel(server);\\n        ns.clearLog(server);\\n        ns.print(`${server}:`);\\n        ns.print(` $_______: ${ns.nFormat(money, \\"$0.000a\\")} / ${ns.nFormat(maxMoney, \\"$0.000a\\")} (${(money / maxMoney * 100).toFixed(2)}%)`);\\n        ns.print(` security: +${(sec - minSec).toFixed(2)}`);\\n        ns.print(` hack____: ${ns.tFormat(ns.getHackTime(server))} (t=${Math.ceil(ns.hackAnalyzeThreads(server, money))})`);\\n        ns.print(` grow____: ${ns.tFormat(ns.getGrowTime(server))} (t=${Math.ceil(ns.growthAnalyze(server, maxMoney / money))})`);\\n        ns.print(` weaken__: ${ns.tFormat(ns.getWeakenTime(server))} (t=${Math.ceil((sec - minSec) * 20)})`);\\n        await ns.sleep(flags.refreshrate);\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return data.servers;\\n}", "filename":"monitor.js", "url":"", "module":"", "dependencies":[{"filename":"monitor.js", "url":"blob:file:///ca57a0d6-3712-422e-a711-4ec2b72c350b"} ], "dependents":[], "ramUsage":4.15, "server":"home", "moduleSequenceNumber":40, "_hash":"14502f69bd92ef2e92e0a3ee95650ffec6e69bb605906fe6799d7804c7fe7659", "ramUsageEntries":[{"type":"misc", "name":"baseCost", "cost":1.6}, {"type":"fn", "name":"getServerMoneyAvailable", "cost":0.1}, {"type":"fn", "name":"getServerMaxMoney","cost":0.1}, {"type":"fn", "name":"getServerMinSecurityLevel","cost":0.1}, {"type":"fn","name":"getServerSecurityLevel","cost":0.1}, {"type":"fn","name":"getHackTime","cost":0.05}, {"type":"fn","name":"hackAnalyzeThreads","cost":1}, {"type":"fn","name":"getGrowTime","cost":0.05}, {"type":"fn","name":"growthAnalyze","cost":1}, {"type":"fn","name":"getWeakenTime","cost":0.05} ] } },
						{"ctor":"Script","data":{"code":"function scan(ns, parent, server, list) {\\n\\tconst children = ns.scan(server);\\n\\tfor (let child of children) {\\n\\t\\tif (parent == child) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tlist.push(child);\\n\\n\\t\\tscan(ns, server, child, list);\\n\\t}\\n}\\n\\nexport function list_servers(ns) {\\n\\tconst list = [];\\n\\tscan(ns, '', 'home', list);\\n\\treturn list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\"help\\", false]]);\\n\\tif (args.help) {\\n\\t\\tns.tprint(\\"This script lists all servers on which you can run scripts.\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()}`);\\n\\t\\tns.tprint(\\"Example:\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()}`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst servers = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n\\tfor (const server of servers) {\\n\\t\\tconst used = ns.getServerUsedRam(server);\\n\\t\\tconst max = ns.getServerMaxRam(server);\\n\\t\\tns.tprint(`${server} is opened. ${used} GB / ${max} GB (${(100 * used / max).toFixed(2)}%)`)\\n\\t}\\n}","filename":"opened_servers.js","url":"","module":"","dependencies":[{"filename":"opened_servers.js","url":"blob:file:///f67e15db-2011-47aa-bea4-4619a6d0afd0"}],"dependents":[],"ramUsage":1.95,"server":"home","moduleSequenceNumber":41,"_hash":"b7965970662b0f1c8745ebfefa076001d667b85c7fb7391bdbbf6f5b470f8910","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scan","cost":0.2},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"getServerUsedRam","cost":0.05},{"type":"fn","name":"getServerMaxRam","cost":0.05}]}},
						{"ctor":"Script","data":{"code":"function scan(ns, parent, server, list) {\\n\\tconst CHILDREN = ns.scan(server);\\n\\tfor (let child of CHILDREN) {\\n\\t\\tif (parent == child) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\t\\tlist.push(child);\\n\\n\\t\\tscan(ns, server, child, list);\\n\\t}\\n}\\n\\nexport function list_servers(ns) {\\n\\tconst list = [];\\n\\tscan(ns, '', 'home', list);\\n\\treturn list;\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\"help\\", false]]);\\n\\tif (args.help) {\\n\\t\\tns.tprint(\\"This script lists all servers on which you can run scripts.\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()}`);\\n\\t\\tns.tprint(\\"Example:\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()}`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst SERVERS = list_servers(ns).filter(s => ns.hasRootAccess(s)).concat(['home']);\\n\\tfor (const SERVER of SERVERS) {\\n\\t\\tconst USED = ns.getServerUsedRam(SERVER);\\n\\t\\tconst MAXRAM = ns.getServerMaxRam(SERVER);\\n\\t\\tns.tprint(SERVER + \\":open:\\" + (MAXRAM - USED));\\n\\t}\\n}","filename":"known-servers.js","url":"","module":"","dependencies":[{"filename":"known-servers.js","url":"blob:file:///a1b4ad44-9bfd-4719-9e1f-109bcf8d879a"}],"dependents":[],"ramUsage":1.95,"server":"home","moduleSequenceNumber":42,"_hash":"ff9ee47b362bb44d4412104f4f78885ba1acd748d86fe010c149155bbca45423","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scan","cost":0.2},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"getServerUsedRam","cost":0.05},{"type":"fn","name":"getServerMaxRam","cost":0.05}]}},
						{"ctor":"Script","data":{"code":"export function getPortToolCount(ns) {\\n\\tconst TOOLS = [\\"BruteSSH.exe\\", \\"FTPCrack.exe\\", \\"relaySMTP.exe\\", \\"HTTPWorm.exe\\", \\"SQLInject.exe\\"];\\n\\tlet count = 0;\\n\\tfor (let tool of TOOLS) {\\n\\t\\tif (ns.fileExists(tool)) {\\n\\t\\t\\tns.tprint(tool + \\" has been found\\");\\n\\t\\t\\tcount += 1;\\n\\t\\t} else {\\n\\t\\t\\tns.tprint(tool + \\" not found\\");\\n\\t\\t}\\n\\t}\\n\\n\\tns.tprint(\\"Found \\" + count + \\" port opening tools\\");\\n\\treturn count;\\n}\\n\\nexport function canOpen(ns, target) {\\n\\tif (getPortToolCount(ns) >= ns.getServerNumPortsRequired(target)) {\\n\\t\\treturn true;\\n\\t} else {\\n\\t\\treturn false;\\n\\t}\\n}\\n\\nexport function openPorts(ns, server) {\\n\\tif (ns.fileExists(\\"BruteSSH.exe\\")) {\\n\\t\\tns.brutessh(server);\\n\\t}\\n\\tif (ns.fileExists(\\"FTPCrack.exe\\")) {\\n\\t\\tns.ftpcrack(server);\\n\\t}\\n\\tif (ns.fileExists(\\"relaySMTP.exe\\")) {\\n\\t\\tns.relaysmtp(server);\\n\\t}\\n\\tif (ns.fileExists(\\"HTTPWorm.exe\\")) {\\n\\t\\tns.httpworm(server);\\n\\t}\\n\\tif (ns.fileExists(\\"SQLInject.exe\\")) {\\n\\t\\tns.sqlinject(server);\\n\\t}\\n\\treturn;\\n}\\n\\nexport function openServer(ns, target) {\\n\\tif (canOpen(ns, target)) {\\n\\t\\topenPorts(ns, target);\\n\\t\\tns.nuke(target);\\n\\t} else {\\n\\t\\tns.tprint(\\"No can open \\" + target);\\n\\t}\\n\\treturn;\\n}\\n\\n/**\\n * @param {NS} ns\\n */\\nexport async function main(ns) {\\n\\tconst args = ns.flags([[\\"help\\", false]]);\\n\\tif (args.help) {\\n\\t\\tns.tprint(\\"This script attempts to root a target server.\\");\\n\\t\\tns.tprint(`Usage: run ${ns.getScriptName()}`);\\n\\t\\tns.tprint(\\"Example:\\");\\n\\t\\tns.tprint(`> run ${ns.getScriptName()}`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tconst target = ns.args[0];\\n\\topenServer(ns, target);\\n}","filename":"open.js","url":"","module":"","dependencies":[{"filename":"open.js","url":"blob:file:///0e5fa0c9-2ca6-4749-8e43-17e3066b223a"}],"dependents":[],"ramUsage":2.1,"server":"home","moduleSequenceNumber":43,"_hash":"18c7464b7aac5841f5b2acd5e750cac9f1a51745ba9fb6d63123c9ac0aae4be8","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"fileExists","cost":0.1},{"type":"fn","name":"getServerNumPortsRequired","cost":0.1},{"type":"fn","name":"brutessh","cost":0.05},{"type":"fn","name":"ftpcrack","cost":0.05},{"type":"fn","name":"relaysmtp","cost":0.05},{"type":"fn","name":"httpworm","cost":0.05},{"type":"fn","name":"sqlinject","cost":0.05},{"type":"fn","name":"nuke","cost":0.05}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tlet list = [3, 8, 10, 7, -1];\\n\\tns.tprint(list.sort((a, b) => a - b));\\n\\n\\tlet nodes = [\\n\\t\\t{node: 0, upgrade: 'level', cost: 1e6},\\n\\t\\t{node: 9, upgrade: 'core', cost: 1e12},\\n\\t\\t{node: 7, upgrade: 'core', cost: 1e11},\\n\\t\\t{node: 5, upgrade: 'ram', cost: 1e8}\\n\\t];\\n\\tns.tprint(nodes);\\n\\tns.tprint(nodes.sort((a, b) => a.cost - b.cost));\\n\\tns.tprint(nodes.sort((a, b) => a.cost - b.cost)[0]);\\n}","filename":"sort.js","url":"","module":"","dependencies":[{"filename":"sort.js","url":"blob:file:///4bc88e92-88de-4469-8cea-f88f1446fd37","moduleSequenceNumber":444969}],"dependents":[],"ramUsage":1.6,"server":"home","moduleSequenceNumber":44,"_hash":"06fd7ee7cdc1784dda61c05919643778ee89f755c47b9d31bbbc24774305fbda","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6}]}},
						{"ctor":"Script","data":{"code":"import { getHackScript, getServerPrefix } from 'import.js';\\nlet hackablePorts;\\n\\n/* Searches for servers that are hackable,\\n * cracks them if you don't have root access,\\n * installs a hack script, and instructs them to\\n * HACK THEMSELVES\\n */\\nexport const main = async function (ns) {\\n    findHackablePorts(ns);\\n    await findServer(ns, 'home', 'home', hackServer);\\n}\\n\\nasync function findServer(ns, startServer, targetServer, func) {\\n    let servers = ns.scan(targetServer, true).filter((server) => server !== startServer && !server.includes(getServerPrefix()));\\n    for (const server of servers) {\\n        const success = await func.call(this, ns, server);\\n        if (success) {\\n            await findServer(ns, targetServer, server, func);\\n        }\\n    }\\n}\\n\\nasync function hackServer(ns, server) {\\n    if (!crackServer(ns, server)) {\\n        return false;\\n    }\\n    ns.killall(server);\\n    let scriptRam = ns.getScriptRam(getHackScript());\\n    let serverRam = ns.getServerMaxRam(server);\\n    let threads = Math.floor(serverRam / scriptRam);\\n    await ns.scp(getHackScript(), server);\\n    if (threads > 0) {\\n        ns.print(`Starting ${threads} processes on ${server}`);\\n        ns.exec(getHackScript(), server, threads, server, threads);\\n    }\\n    return true;\\n}\\n\\nfunction crackServer(ns, server) {\\n    if (ns.hasRootAccess(server)) {\\n        return true;\\n    }\\n\\n    if (ns.fileExists('BruteSSH.exe')) {\\n        ns.brutessh(server);\\n    }\\n    if (ns.fileExists('FTPCrack.exe')) {\\n        ns.ftpcrack(server);\\n    }\\n    if (ns.fileExists('relaySMTP.exe')) {\\n        ns.relaysmtp(server);\\n    }\\n    if (ns.fileExists('HTTPWorm.exe')) {\\n        ns.httpworm(server);\\n    }\\n    if (ns.fileExists('SQLInject.exe')) {\\n        ns.sqlinject(server);\\n    }\\n    if (ns.getServerRequiredHackingLevel(server) > ns.getHackingLevel() ||\\n        ns.getServerNumPortsRequired(server) > hackablePorts) {\\n        return false;\\n    } else {\\n        ns.nuke(server);\\n        ns.tprint(`New Server Cracked: ${server}!`);\\n        return true;\\n    }\\n}\\n\\nexport function findHackablePorts(ns) {\\n    let hackPorts = 0;\\n    if (ns.fileExists('BruteSSH.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('FTPCrack.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('relaySMTP.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('HTTPWorm.exe')) {\\n        hackPorts += 1;\\n    }\\n    if (ns.fileExists('SQLInject.exe')) {\\n        hackPorts += 1;\\n    }\\n    hackablePorts = hackPorts;\\n}\\n","filename":"/scripts/autoHack.js","url":"","module":{},"dependencies":[{"filename":"import.js","url":"blob:file:///99141d6e-515c-4531-b8df-bc6bed8999a4","moduleSequenceNumber":59},{"filename":"/scripts/autoHack.js","url":"blob:file:///a7fc748f-65f9-44ee-b594-98e9de376359","moduleSequenceNumber":124}],"dependents":[],"ramUsage":5.05,"server":"home","moduleSequenceNumber":124,"_hash":"f0240c721cd5a1d6f5a15101cebc1b3786547715d356f8d4fe1dccc6bd1019a2","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scan","cost":0.2},{"type":"fn","name":"killall","cost":0.5},{"type":"fn","name":"getScriptRam","cost":0.1},{"type":"fn","name":"getServerMaxRam","cost":0.05},{"type":"fn","name":"scp","cost":0.6},{"type":"fn","name":"exec","cost":1.3},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"fileExists","cost":0.1},{"type":"fn","name":"brutessh","cost":0.05},{"type":"fn","name":"ftpcrack","cost":0.05},{"type":"fn","name":"relaysmtp","cost":0.05},{"type":"fn","name":"httpworm","cost":0.05},{"type":"fn","name":"sqlinject","cost":0.05},{"type":"fn","name":"getServerRequiredHackingLevel","cost":0.1},{"type":"fn","name":"getHackingLevel","cost":0.05},{"type":"fn","name":"getServerNumPortsRequired","cost":0.1},{"type":"fn","name":"nuke","cost":0.05}]}},
						{"ctor":"Script","data":{"code":"import { getFolder, getServerPrefix } from 'import.js';\\nlet maxValueServers;\\nlet serverValue = 0;\\n\\n/* Identify servers worth more than $10 Billion,\\n * deploy the hack script and attack those servers\\n * using all purchased servers.\\n */\\nexport async function main(ns) {\\n    maxValueServers = {\\n        zero: [],\\n        million: [],\\n        billion: [],\\n        trillion: []\\n    };\\n    findServer(ns, 'home', 'home', checkValue);\\n    ns.run(`/${getFolder()}/remoteHack.js`, 1, highest(ns).join(','));\\n}\\n\\nfunction findServer(ns, startServer, targetServer, func) {\\n    let servers = ns.scan(targetServer, true).filter((server) => server !== startServer && !server.includes(getServerPrefix));\\n    if (!ns.hasRootAccess(targetServer)) { return false; }\\n    servers.forEach((server) => {\\n        func.call(this, ns, server);\\n        if (ns.hasRootAccess(server)) {\\n            findServer(ns, targetServer, server, func);\\n        }\\n    });\\n}\\n\\nfunction checkValue(ns, server) {\\n    if (!ns.hasRootAccess(server)) {\\n        return;\\n    }\\n    let serverMoney = ns.getServerMaxMoney(server);\\n    if (serverMoney > 1e12) {\\n        maxValueServers.trillion.push(server);\\n    } else if (serverMoney > 1e9) {\\n        maxValueServers.billion.push(server);\\n    } else if (serverMoney > 0) {\\n        maxValueServers.million.push(server);\\n    } else {\\n        maxValueServers.zero.push(server);\\n    }\\n}\\n\\nfunction highest(ns) {\\n    if (maxValueServers.trillion.length > 0) {\\n        return maxValueServers.trillion;\\n    }\\n    if (maxValueServers.billion.length > 0) {\\n        return maxValueServers.billion;\\n    }\\n    if (maxValueServers.million.length > 0) {\\n        return maxValueServers.million;\\n    }\\n}\\n","filename":"/scripts/autoRemoteHack.js","url":"","module":{},"dependencies":[{"filename":"import.js","url":"blob:file:///69665444-ab6b-424d-bc7f-8c39a36256dc","moduleSequenceNumber":59},{"filename":"/scripts/autoRemoteHack.js","url":"blob:file:///fad5d8b8-786b-4645-a6d8-7078bbbad3d6","moduleSequenceNumber":236}],"dependents":[],"ramUsage":2.95,"server":"home","moduleSequenceNumber":236,"_hash":"0a44f15d5c808191719bdc1a774692b405faf03d995467120b769bf80fcccaa2","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"run","cost":1},{"type":"fn","name":"scan","cost":0.2},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"getServerMaxMoney","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"import { getFolder, getServerPrefix } from 'import.js';\\nimport { serverHackStatus, serverReport } from '/scripts/serverStatus.js';\\n\\n/*\\n * This is a dashboard that outputs the status\\n * of your entire server network.\\n */\\nexport async function main(ns) {\\n    findServer(ns, 'home', 'home', 1);\\n}\\n\\nfunction findServer(ns, startServer, targetServer, i) {\\n    let servers = ns.scan(targetServer, true)\\n        .filter((server) => server !== startServer && !server.includes(getServerPrefix()));\\n    servers.forEach((server) => {\\n        ns.tprint(`😹${'>'.repeat(i)}`);\\n        serverReport(ns, server);\\n        if (serverHackStatus(ns, server) !== \\"🔐\\") {\\n            findServer(ns, targetServer, server, i + 1);\\n        }\\n    });\\n}\\n","filename":"/scripts/dashboard.js","url":"","module":"","dependencies":[{"filename":"/scripts/serverStatus.js","url":"blob:file:///4eec17f8-8049-4c89-abe2-0fa19b620a68","moduleSequenceNumber":61},{"filename":"import.js","url":"blob:file:///5117c044-7e40-4ed7-b9d1-d9f24f2ce7a0","moduleSequenceNumber":50},{"filename":"/scripts/dashboard.js","url":"blob:file:///7a097c19-57ba-4a3c-bef8-c5aa72d577d4","moduleSequenceNumber":4073}],"dependents":[],"ramUsage":2.6,"server":"home","moduleSequenceNumber":47,"_hash":"220e6bc01c4c625d7a960dc7a5284658e52b1df2dd9281487a64407abd3a9d5f","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scan","cost":0.2},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerRequiredHackingLevel","cost":0.1},{"type":"fn","name":"getServerNumPortsRequired","cost":0.1},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"getHackingLevel","cost":0.05},{"type":"fn","name":"fileExists","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///01a0ec7f-627a-42d6-a555-85f38c402e96","moduleSequenceNumber":65745}],"dependents":[],"ramUsage":2.4,"server":"home","moduleSequenceNumber":48,"_hash":"e7a82cc721932419c47eb52b39b72ad40f1e4654a5bf227061e24250e346d9fd","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"import { getFolder } from 'import.js';\\n/* Run various scripts easily and from one interface\\n */\\nexport async function main(ns) {\\n  const command = ns.args[0];\\n  const commandArgs = ns.args.slice(1);\\n  await runCommand(ns, command, commandArgs);\\n}\\n\\nasync function runCommand(ns, command, commandArgs) {\\n  switch (command) {\\n    case 'autoHack':\\n    case 'autoRemoteHack':\\n    case 'dashboard':\\n    case 'factionManager':\\n    case 'gangManager':\\n    case 'hacknetManager':\\n    case 'hacknetNodeManager':\\n    case 'hacknetUpgradeManager':\\n    case 'purchaseServers':\\n    case 'stockManager':\\n      ns.run(`/${getFolder()}/${command}.js`);\\n      break;\\n    case 'localGrow':\\n    case 'localHack':\\n      ns.run(`/${getFolder()}/${command}.js`, 1, commandArgs[0]);\\n      break;\\n    case 'sudo autohack':\\n    case 'sudo autoHack':\\n      await runCommand(ns, 'autoHack');\\n      await runCommand(ns, 'autoRemoteHack');\\n      break;\\n    case 'autohack':\\n      await runCommand(ns, 'autoHack');\\n      break;\\n    case 'serverhack':\\n    case 'serverHack':\\n      await runCommand(ns, 'autoRemoteHack');\\n      break;\\n    case 'dash':\\n    case 'status':\\n      await runCommand(ns, 'dashboard');\\n      break;\\n    case 'buyServer':\\n    case 'purchaseServer':\\n    case 'buyServers':\\n      await runCommand(ns, 'purchaseServers');\\n      break;\\n    default:\\n      ns.tprint(`Oh no! ${command} isn't a valid command. Try: dashboard, autoHack, autoRemoteHack, or hacknetManager.`);\\n  }\\n}\\n\\nexport function autocomplete(data, args) {\\n  return [\\n    'autoHack',\\n    'autoRemoteHack',\\n    'dashboard',\\n    'factionManager',\\n    'gangManager',\\n    'hacknetManager',\\n    'localGrow',\\n    'localHack',\\n    'purchaseServer',\\n    'stockManager',\\n    ...data.servers\\n  ];\\n}","filename":"/scripts/hax.js","url":"","module":{},"dependencies":[{"filename":"import.js","url":"blob:file:///e9812d0f-0579-4c14-9ef2-6af7da405f3b","moduleSequenceNumber":59},{"filename":"/scripts/hax.js","url":"blob:file:///dedc0b1c-2cb5-4109-895b-c30f6d7030c6","moduleSequenceNumber":85}],"dependents":[],"ramUsage":2.6,"server":"home","moduleSequenceNumber":85,"_hash":"5550ce84c18885a1959f70b91ba661d4c29ef3ced94232a4bf3b61ff9c398d14","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"run","cost":1}]}},
						{"ctor":"Script","data":{"code":"import { getServerPrefix } from 'import.js';\\n\\nlet maxServers;\\nlet servers;\\n\\n/*\\n * Purchases the best server available with the\\n * user's current money. If the server limit is\\n * reached, replaces the worst server. Repeatable.\\n */\\nexport async function main(ns) {\\n    // Default Values\\n    maxServers = ns.getPurchasedServerLimit();\\n    servers = ns.getPurchasedServers(true);\\n    serverInfo(ns);\\n    await buyServers(ns);\\n}\\n\\nfunction serverInfo(ns) {\\n    ns.tprint(`You have ${servers.length}/${maxServers} servers`);\\n    Object.entries(groupServers(ns)).map((ramServers) => {\\n        ns.tprint(`${ramServers[0]}GB: ${ramServers[1]}`);\\n    });\\n}\\n\\nfunction groupServers(ns) {\\n    let groupedServers = {};\\n    servers.forEach((server) => {\\n        let ram = ns.getServerRam(server)[0];\\n        groupedServers[ram] = groupedServers[ram] || [];\\n        groupedServers[ram].push(server);\\n    });\\n    return groupedServers;\\n}\\n\\nasync function buyServers(ns) {\\n    let ram = ns.getPurchasedServerMaxRam();\\n    let shopServer = true;\\n    while (shopServer) {\\n        let myMoney = ns.getServerMoneyAvailable('home');\\n        let serverCost = ns.getPurchasedServerCost(ram);\\n        while (serverCost > myMoney && ram > 2) {\\n            ram = ram / 2;\\n            serverCost = ns.getPurchasedServerCost(ram);\\n        }\\n        shopServer = await ns.prompt(`Would you like to buy a ${ram}GB server for ${ns.nFormat(serverCost, \\"$0.00a\\")}`);\\n        if (shopServer) { shopServer = buyServer(ns, ram); }\\n    }\\n}\\n\\nfunction buyServer(ns, ram) {\\n    if (servers.length == maxServers) {\\n        let success = removeWeakestServer(ns, ram);\\n        if (!success) { return false; }\\n    }\\n    let server = ns.purchaseServer(`${getServerPrefix()}-${ram}GB`, ram);\\n    servers.push(server);\\n    ns.tprint(`Purchased ${server}: ${ram}GB`);\\n    return true;\\n}\\n\\nfunction removeWeakestServer(ns, newRam) {\\n    let groupedServers = groupServers(ns);\\n    let min = Math.min(...Object.keys(groupedServers));\\n    if (min >= newRam) {\\n        ns.tprint(`Your smallest server has ${min}GB RAM and you wanted to purchase ${newRam}GB server`);\\n        return false;\\n    }\\n    let smallest_server = groupedServers[min][0];\\n    ns.killall(smallest_server);\\n    let result = ns.deleteServer(smallest_server);\\n    servers = ns.getPurchasedServers(true);\\n    return true;\\n}\\n","filename":"/scripts/purchaseServers.js","url":"","module":{},"dependencies":[{"filename":"import.js","url":"blob:file:///a12eae12-6e99-4be3-9a54-2e96deb4dea9","moduleSequenceNumber":59},{"filename":"/scripts/purchaseServers.js","url":"blob:file:///27152b9e-9490-45e5-91cc-bf0aaa3122af","moduleSequenceNumber":235}],"dependents":[],"ramUsage":9.4,"server":"home","moduleSequenceNumber":235,"_hash":"5da036a3b110ce5ba41fc38c559945a5158b30a3bd797235912d4fd1e8ec5c79","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getPurchasedServerLimit","cost":0.05},{"type":"fn","name":"getPurchasedServers","cost":2.25},{"type":"fn","name":"getServerRam","cost":0.1},{"type":"fn","name":"getPurchasedServerMaxRam","cost":0.05},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"getPurchasedServerCost","cost":0.25},{"type":"fn","name":"purchaseServer","cost":2.25},{"type":"fn","name":"killall","cost":0.5},{"type":"fn","name":"deleteServer","cost":2.25}]}},
						{"ctor":"Script","data":{"code":"import { getHackScript } from 'import.js';\\n\\n/* Deploys the hack script to all purchased servers\\n * Differs from autoRemoteHack because you can specify\\n * the target\\n * args[0] - list of servers\\n * args[1] - alternate Hackscript (default from import)\\n */\\nexport async function main(ns) {\\n  let myServers = ns.getPurchasedServers();\\n  let targetServers = ns.args[0].split(',');\\n  let hackScript = ns.args[1] || getHackScript();\\n  let scriptRam = ns.getScriptRam(hackScript);\\n  for (const [index, server] of myServers.entries()) {\\n    ns.killall(server);\\n    let serverRam = ns.getServerRam(server)[0];\\n    let threads = Math.floor(serverRam / scriptRam);\\n    let serverIndex = index % targetServers.length;\\n    let targetServer = targetServers[serverIndex];\\n    ns.print(`${server} is hacking ${targetServer} with ${threads} threads.`);\\n    await ns.scp(hackScript, server);\\n    if (threads > 0) {\\n      ns.exec(hackScript, server, threads, targetServer, threads);\\n    }\\n  }\\n}\\n","filename":"/scripts/remoteHack.js","url":"","module":{},"dependencies":[{"filename":"import.js","url":"blob:file:///ea1f1042-692e-4999-81ed-83a4ed79d7ed","moduleSequenceNumber":59},{"filename":"/scripts/remoteHack.js","url":"blob:file:///54978f8a-e987-4dc1-ac27-0a1b9f5e0968","moduleSequenceNumber":237}],"dependents":[],"ramUsage":6.45,"server":"home","moduleSequenceNumber":237,"_hash":"8bb243a76c83c30301e9e187586e47c1d3c77ee5c47a1662ccebc8b13dde20dc","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getPurchasedServers","cost":2.25},{"type":"fn","name":"getScriptRam","cost":0.1},{"type":"fn","name":"killall","cost":0.5},{"type":"fn","name":"getServerRam","cost":0.1},{"type":"fn","name":"scp","cost":0.6},{"type":"fn","name":"exec","cost":1.3}]}},
						{"ctor":"Script","data":{"code":"let hackPorts = 0;\\n\\n/*\\n * Utility functions that report serverStatus\\n * and Hackability \\n */\\nexport async function main(ns) {\\n  let server = ns.args[0];\\n  serverReport(ns, server);\\n}\\n\\nexport function serverReport(ns, server) {\\n  let serverLock = serverHackStatus(ns, server);\\n  ns.tprint(`${serverLock} ${server}`);\\n  if (serverLock == \\"🔓\\") {\\n    ns.tprint(`🛡️${Math.round(ns.getServerSecurityLevel(server))}/${ns.getServerMinSecurityLevel(server)}`);\\n    ns.tprint(`💸${ns.nFormat(ns.getServerMoneyAvailable(server), \\"$0.000a\\")}/${ns.nFormat(ns.getServerMaxMoney(server), \\"$0.000a\\")}`);\\n  } else {\\n    ns.tprint(`Hack Level: ${ns.getServerRequiredHackingLevel(server)}`);\\n    ns.tprint(`Ports: ${ns.getServerNumPortsRequired(server)}`);\\n  }\\n  ns.tprint('-----------');\\n}\\n\\nexport function serverHackStatus(ns, server) {\\n  if (ns.hasRootAccess(server)) {\\n    return \\"🔓\\";\\n  }\\n  if (ns.getServerRequiredHackingLevel(server) > ns.getHackingLevel() ||\\n    ns.getServerNumPortsRequired(server) > hackablePorts) {\\n    return \\"🔐\\";\\n  }\\n  return \\"🔒\\";\\n}\\n\\nexport function hackablePorts(ns) {\\n  if (hackPorts > 0) {\\n    return hackPorts;\\n  }\\n  if (ns.fileExists('BruteSSH.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('FTPCrack.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('relaySMTP.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('HTTPWorm.exe')) {\\n    hackPorts += 1;\\n  }\\n  if (ns.fileExists('SQLInject.exe')) {\\n    hackPorts += 1;\\n  }\\n  return hackPorts;\\n}\\n","filename":"/scripts/serverStatus.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"home","moduleSequenceNumber":52,"_hash":"85510f85ecc586dbae588ff794c8d87cf14b69b3a5b73818d4898853274ec57a","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerRequiredHackingLevel","cost":0.1},{"type":"fn","name":"getServerNumPortsRequired","cost":0.1},{"type":"fn","name":"hasRootAccess","cost":0.05},{"type":"fn","name":"getHackingLevel","cost":0.05},{"type":"fn","name":"fileExists","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"const SCRIPT = '/scripts/localHack.js';\\nconst HACKSCRIPT = '/scripts/hack.js';\\nconst HOME = 'home';\\nconst RESERVERAM = 0.2; // RAM in GB to reserve for running other commands, scripts\\n\\nexport function autocomplete(data, args) {\\n\\treturn [...data.servers];\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst target = ns.args[0];\\n\\tif (typeof target === 'undefined') {\\n\\t\\tns.tprint(`Usage: run ${SCRIPT} TARGET`);\\n\\t\\tns.tprint(`Example: run ${SCRIPT} iron-gym`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tif (ns.scriptRunning(HACKSCRIPT, HOME)) {\\n\\t\\tns.scriptKill(HACKSCRIPT, HOME);\\n\\t\\tns.tprint(`Killed running instance of ${HACKSCRIPT}`);\\n\\t}\\n\\n\\tconst freeRam = ns.getServerMaxRam(HOME) - ns.getServerUsedRam(HOME);\\n\\tconst threadRam = ns.getScriptRam(HACKSCRIPT);\\n\\n\\tconst usableRam = Math.floor((1.0 - RESERVERAM) * freeRam);\\n\\tconst threads = Math.floor(usableRam / threadRam);\\n\\n\\tif (threads === 0) {\\n\\t\\tns.print(`Insufficient RAM for hack threads`);\\n\\t\\tns.exit();\\n\\t}\\n\\tns.exec(HACKSCRIPT, HOME, threads, target, threads);\\n}","filename":"/scripts/localHack.js","url":"","module":"","dependencies":[{"filename":"/scripts/localHack.js","url":"blob:file:///02a06a37-de18-4726-8a13-483820620c2d","moduleSequenceNumber":65744}],"dependents":[],"ramUsage":5.1,"server":"home","moduleSequenceNumber":53,"_hash":"408257f0255fa86e47f07f5935a1a94d266c7f26fed07dcfe9debf7864db79c3","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scriptRunning","cost":1},{"type":"fn","name":"scriptKill","cost":1},{"type":"fn","name":"getServerMaxRam","cost":0.05},{"type":"fn","name":"getServerUsedRam","cost":0.05},{"type":"fn","name":"getScriptRam","cost":0.1},{"type":"fn","name":"exec","cost":1.3}]}},
						{"ctor":"Script","data":{"code":"const ATTRIBUTES = ['hack', 'str', 'def', 'dex', 'agi', 'cha'];\\nconst TASKS = [`Train Hacking`, `Ethical Hacking`, `Money Laundering`, `Cyberterrorism`];\\nconst TICK = 10 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n  ns.disableLog('sleep');\\n  ns.tail();\\n\\n  if (! ns.gang.inGang()) {\\n    if (! ns.gang.createGang(`NiteSec`)) { ns.exit(); }\\n  }\\n\\n  while (true) {\\n    recruitment(ns);\\n    ascension(ns);\\n    tasks(ns);\\n    await ns.sleep(TICK);\\n  }\\n}\\n\\nfunction recruitment(ns) {\\n  if (!canRecruit(ns)) { return false; }\\n  let name = getRecruitName();\\n  return (recruit(ns, name) && setTask(ns, name, `Train Hacking`));\\n}\\nfunction canRecruit(ns) { return ns.gang.canRecruitMember(); }\\nfunction getRecruitName() { return Math.random().toString(16).substring(2, 8); }\\nfunction recruit(ns, name) { return ns.gang.recruitMember(name); }\\nfunction setTask(ns, name, task) { return ns.gang.setMemberTask(name, task); }\\n\\n\\nfunction ascension(ns) {\\n  for (let member of getGangData(ns)) {\\n    let ascendResult = ns.gang.getAscensionResult(member.name);\\n    if (typeof ascendResult === 'undefined') { continue; }\\n\\n    let activeAttribute = getActiveAttribute(member, ascendResult);\\n    ns.print(`${member.name}.${activeAttribute.name}: ${activeAttribute.ascGain - ascendGainTarget(activeAttribute)}`);\\n    if (activeAttribute.ascGain > ascendGainTarget(activeAttribute)) {\\n      ns.gang.ascendMember(member.name);\\n      ns.toast(`Ascended ${member.name}`);\\n    }\\n  }\\n}\\nfunction getActiveAttribute(member, ascendResult) {\\n  let attrSnaps = [];\\n  for (let attribute of ATTRIBUTES) {\\n    let expString = `${attribute}_exp`;\\n    let baseMultString = `${attribute}_mult`;\\n    let ascMultString = `${attribute}_asc_mult`;\\n    attrSnaps.push(\\n      {\\n        'name': attribute,\\n        'rank': member[attribute],\\n        'xp': member[expString],\\n        'baseMult': member[baseMultString],\\n        'ascMult': member[ascMultString],\\n        'ascResult': ascendResult[attribute],\\n        'ascGain': member[ascMultString] * (ascendResult[attribute] - 1),\\n      }\\n    );\\n  }\\n  return attrSnaps.sort((a, b) => b.xp - a.xp)[0];\\n}\\nfunction ascendGainTarget(attributeData) { return (Math.log10(attributeData.ascMult) > 1) ? Math.log10(attributeData.ascMult) : 1; }\\n\\nfunction tasks(ns) {\\n  let gangData = getGangData(ns);\\n  let trainees = gangData.filter(hasLowAscensionMultiplier);\\n  trainees.forEach((trainee) => { setTask(ns, trainee.name, `Train Hacking`) });\\n  let workers = gangData.filter(hasHighAscensionMultiplier).sort((a, b) => b.hack_asc_mult - a.hack_asc_mult);\\n  let topWorker = workers.shift();\\n  setTask(ns, topWorker.name, `Ethical Hacking`);\\n  let aproposWorkerTask = getWorkerTask(ns);\\n  workers.forEach((worker) => {\\n    setTask(ns, worker.name, aproposWorkerTask);\\n  });\\n}\\n\\nfunction getWorkerTask(ns) {\\n  if (ns.getFactionRep(`NiteSec`) < 2500000) { return `Cyberterrorism`; }\\n  return `Money Laundering`;\\n}\\n\\nfunction getGangData(ns) {\\n  let data = [];\\n  ns.gang.getMemberNames().forEach((name) => {\\n    data.push(ns.gang.getMemberInformation(name));\\n  });\\n  return data;\\n}\\nfunction hasLowAscensionMultiplier(element) { return element.hack_asc_mult < 100.0; }\\nfunction hasHighAscensionMultiplier(element) { return element.hack_asc_mult >= 100.0; }","filename":"/scripts/gangManager.js","url":"","module":"","dependencies":[{"filename":"/scripts/gangManager.js","url":"blob:file:///e45f43df-7303-422c-9738-23ee4cebac6f","moduleSequenceNumber":25595}],"dependents":[],"ramUsage":33.6,"server":"home","moduleSequenceNumber":54,"_hash":"7198fd8c5c6dbc14ee78acd8ae241fbdeaa030332b9c07dec2bbc3647615c1e5","ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"gang.inGang","cost":1},{"type":"fn","name":"gang.createGang","cost":1},{"type":"fn","name":"gang.canRecruitMember","cost":1},{"type":"fn","name":"gang.recruitMember","cost":2},{"type":"fn","name":"gang.setMemberTask","cost":2},{"type":"fn","name":"gang.getAscensionResult","cost":2},{"type":"fn","name":"gang.ascendMember","cost":4},{"type":"fn","name":"getFactionRep","cost":16},{"type":"fn","name":"gang.getMemberNames","cost":1},{"type":"fn","name":"gang.getMemberInformation","cost":2}]}},
						{"ctor":"Script","data":{"code":"const TICK = 10 * 1000; // seconds in millis\\nconst BUYTHRESH = 0.55; // 55% or better growth forecast to buy\\nconst LOSSTHRESH = -0.0123; // 5% loss triggers sell\\nconst ROITHRESH = 0.035; // 25% or better profit\\nconst CASHFLOOR = 10e6; // have 10.000m to do other stuff with\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\t// ensure access to necessary APIs\\n\\tif (!haveAPIAccess(ns)) {\\n\\t\\tns.tprint(`Not haz API accesses`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tawait stockManager(ns);\\n}\\n\\nfunction haveAPIAccess(ns) { return (haveTIXAccess(ns) && have4SDataAccess(ns)); }\\nfunction haveTIXAccess(ns) { return ns.stock.getSymbols; }\\nfunction have4SDataAccess(ns) { return ns.stock.getForecast; }\\n\\nasync function stockManager(ns, funding) {\\n\\tconst symbols = ns.stock.getSymbols();\\n\\twhile (true) {\\n\\t\\t// dump everything\\n\\t\\tlet marketData = getMarketData(ns, symbols);\\n\\t\\t//ns.print(marketData.sort((a, b) => b.earnings - a.earnings));\\n\\n\\t\\t// look at what else is available for purchase\\n\\t\\tlet noHoldings = marketData.filter(haveNoShares);\\n\\t\\t//ns.print(noHoldings.filter(haveNegativeForecast).sort((a, b) => b.forecast - a.forecast));\\n\\t\\tlet projectedWinners = noHoldings.filter(havePositiveForecast);\\n\\t\\tbuyStocks(ns, projectedWinners);\\n\\n\\t\\t// look at what we have for wheat, chaff\\n\\t\\tlet myHoldings = marketData.filter(haveShares);\\n\\t\\t//ns.print(myHoldings.sort((a, b) => b.earnings - a.earnings));\\n\\t\\t//let projectedLosers = myHoldings.filter(haveNegativeForecast);\\n\\t\\t//sellStocks(ns, projectedLosers);\\n\\t\\t//let actualLosers = myHoldings.filter(haveSufficientLosses);\\n\\t\\t//sellStocks(ns, actualLosers);\\n\\t\\tlet breadWinners = myHoldings.filter(haveSufficientROI);\\n\\t\\t//ns.print(breadWinners);\\n\\t\\tsellStocks(ns, breadWinners);\\n\\n\\t\\t/*\\n\\t\\tns.tprintf(`\\\\n=========================== HOLDINGS ============================\\\\n`);\\n\\t\\tns.tprint(myHoldings);\\n\\t\\tns.tprint(`=========================== TO BUY ==========================`);\\n\\t\\tns.tprint(stuffToBuy);\\n\\t\\tns.tprint(`=========================== TO SELL ==========================`);\\n\\t\\tns.tprint(stuffToSell);\\n\\t\\t*/\\n\\n\\t\\tawait ns.sleep(TICK);\\n\\t}\\n}\\n\\nfunction sellStocks(ns, marketData) {\\n\\tfor (let symbolData of marketData) {\\n\\t\\tsellStock(ns, symbolData);\\n\\t}\\n}\\n\\nfunction sellStock(ns, symbolData) {\\n\\tlet symbol = symbolData.symbol;\\n\\tlet shares = symbolData.shares;\\n\\tns.stock.sell(symbol, shares);\\n}\\n\\nfunction buyStocks(ns, marketData) {\\n\\tfor (let symbolData of marketData) {\\n\\t\\tbuyStock(ns, symbolData);\\n\\t}\\n}\\n\\nfunction buyStock(ns, symbolData) {\\n\\tlet symbol = symbolData.symbol;\\n\\tlet availableFunds = myMoney(ns) - CASHFLOOR;\\n\\tif (availableFunds < 0) { return; }\\n\\tlet maxShares = ns.stock.getMaxShares(symbol);\\n\\tlet sharesAfforded = availableFunds / ns.stock.getPrice(symbol);\\n\\tlet sharesToBuy = sharesAfforded > 0.25 * maxShares ? 0.25 * maxShares : sharesAfforded;\\n\\tns.stock.buy(symbol, sharesToBuy);\\n}\\n\\nfunction haveNoShares(symbolData, symbolIndex, marketData) { return symbolData.shares < 1; }\\nfunction haveShares(symbolData, symbolIndex, marketData) { return symbolData.shares > 0; }\\nfunction havePositiveForecast(symbolData, symbolIndex, marketData) { return symbolData.forecast > BUYTHRESH; }\\nfunction haveNegativeForecast(symbolData, symbolIndex, marketData) { return symbolData.forecast < 0.45; }\\nfunction havePositiveGrowth(symbolData, symbolIndex, marketData) { return symbolData.earnings > 0; }\\nfunction haveSufficientROI(symbolData, symbolIndex, marketData) { return symbolData.earnings > ROITHRESH; }\\nfunction haveSufficientLosses(symbolData, symbolIndex, marketData) { return symbolData.earnings < LOSSTHRESH; }\\n\\nfunction getMarketData(ns, symbols) {\\n\\tlet marketData = [];\\n\\tfor (let symbol of symbols) { marketData.push(getSymbolData(ns, symbol)); }\\n\\treturn marketData;\\n}\\n\\nfunction getSymbolData(ns, symbol) {\\n\\tlet position = ns.stock.getPosition(symbol);\\n\\tlet shares = position[0];\\n\\tlet average = position[1];\\n\\tlet currentAverage = ns.stock.getPrice(symbol);\\n\\tlet earnings = (currentAverage - average) / average;\\n\\tlet forecast = ns.stock.getForecast(symbol);\\n\\tlet symbolData = {\\n\\t\\t'symbol': symbol,\\n\\t\\t'shares': shares,\\n\\t\\t'average': average,\\n\\t\\t'currentAverage': currentAverage,\\n\\t\\t'earnings': earnings,\\n\\t\\t'forecast': forecast,\\n\\t};\\n\\treturn symbolData;\\n}\\n\\nfunction myMoney(ns) {\\n\\treturn ns.getServerMoneyAvailable(`home`);\\n}","filename":"/scripts/stockManager.js","url":"","module":"","dependencies":[{"filename":"/scripts/stockManager.js","url":"blob:file:///7a450988-e824-4144-80b0-ed5b259b999d","moduleSequenceNumber":201}],"dependents":[],"ramUsage":17.2,"server":"home","moduleSequenceNumber":55,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"stock.getSymbols","cost":2},{"type":"fn","name":"stock.getForecast","cost":2.5},{"type":"fn","name":"stock.sell","cost":2.5},{"type":"fn","name":"stock.getMaxShares","cost":2},{"type":"fn","name":"stock.getPrice","cost":2},{"type":"fn","name":"stock.buy","cost":2.5},{"type":"fn","name":"stock.getPosition","cost":2},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.alterReality();\\n}","filename":"player.js","url":"","module":"","dependencies":[{"filename":"player.js","url":"blob:file:///1912d9e3-fc82-436f-bd57-a69b87c6ae8c","moduleSequenceNumber":84732}],"dependents":[],"ramUsage":1.6,"server":"home","moduleSequenceNumber":56,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tfor (let thing in ns.singularity) {\\n\\t\\tns.tprint(thing);\\n\\t}\\n}","filename":"test.js","url":"","module":"","dependencies":[{"filename":"test.js","url":"blob:file:///c892e6da-673b-465a-992f-5bc1a8c60d0c","moduleSequenceNumber":149389}],"dependents":[],"ramUsage":1.6,"server":"home","moduleSequenceNumber":57,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6}]}},
						{"ctor":"Script","data":{"code":"const FACTIONS = [`Netburners`, `CyberSec`];\\nconst WORK = `Hacking Contracts`;\\nconst TICK = 60 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tfor (let faction of FACTIONS) {\\n\\t\\tlet maxRep = getAugmentationData(ns, faction).sort((a, b) => b.rep - a.rep)[0].rep;\\n\\t\\twhile (ns.getFactionRep(faction) < maxRep) {\\n\\t\\t\\tns.workForFaction(faction, WORK, false);\\n\\t\\t\\tawait ns.sleep(TICK);\\n\\t\\t}\\n\\t\\tns.stopAction();\\n\\t\\tns.tprint(`Sufficient Rep: ${faction}`);\\n\\t}\\n}\\n\\nfunction getAugmentationData(ns, faction) {\\n\\tlet augmentationData = [];\\n\\tfor (let augmentation of ns.getAugmentationsFromFaction(faction)) {\\n\\t\\taugmentationData.push({\\n\\t\\t\\t'name': augmentation,\\n\\t\\t\\t'price': ns.getAugmentationPrice(augmentation),\\n\\t\\t\\t'rep': ns.getAugmentationRepReq(augmentation),\\n\\t\\t});\\n\\t}\\n\\treturn augmentationData;\\n}","filename":"/scripts/factionManager.js","url":"","module":"","dependencies":[{"filename":"/scripts/factionManager.js","url":"blob:file:///60edc637-face-43a7-bccf-a70980f099f9","moduleSequenceNumber":265}],"dependents":[],"ramUsage":241.6,"server":"home","moduleSequenceNumber":58,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getFactionRep","cost":16},{"type":"fn","name":"workForFaction","cost":48},{"type":"fn","name":"stopAction","cost":16},{"type":"fn","name":"getAugmentationsFromFaction","cost":80},{"type":"fn","name":"getAugmentationPrice","cost":40},{"type":"fn","name":"getAugmentationRepReq","cost":40}]}},
						{"ctor":"Script","data":{"code":"let config = {\\n    folder: 'scripts',\\n    rootUrl: 'https://raw.githubusercontent.com/FlyingJ/bitburner-scripts/main/',\\n    serverPrefix: 'j4ys3rv',\\n};\\n/*\\n* This will import all files listed in importFiles.\\n*/\\nexport async function main(ns) {\\n    let filesImported = await importFiles(ns);\\n    ns.tprint('='.repeat(20));\\n    if (filesImported) {\\n        ns.tprint('Hey! Thank you for downloading the BitBurner Scripts.');\\n        ns.tprint(`You've installed these in the ${getFolder()} directory.`);\\n        ns.tprint(\\n            `A good place to start is running \\\\`run /${getFolder()}/hax.js\\\\``\\n        );\\n    } else {\\n        ns.tprint(\\n            'You had some issues downloading files, please reach out to the repo maintainer or check your config.'\\n        );\\n    }\\n}\\n\\nasync function importFiles(ns) {\\n    let files = [\\n        'autoHack.js',\\n        'autoRemoteHack.js',\\n        'dashboard.js',\\n        'gangManager.js',\\n        'hack.js',\\n        'hacknetManager.js',\\n        'hacknetNodeManager.js',\\n        'hacknetUpgradeManager.js',\\n        'hax.js',\\n        'localHack.js',\\n        'purchaseServers.js',\\n        'remoteHack.js',\\n        'serverStatus.js',\\n        'stockManager.js',\\n    ];\\n    let filesImported = true;\\n    for (let file of files) {\\n        let remoteFileName = `${getRootUrl()}scripts/${file}`;\\n        let result = await ns.wget(remoteFileName, `/${getFolder()}/${file}`);\\n        filesImported = filesImported && result;\\n        ns.tprint(`File: ${file}: ${result ? '✔️' : '❌'}`);\\n    }\\n    return filesImported;\\n}\\n\\nexport function getFolder() { return config.folder; }\\nexport function getRootUrl() { return config.rootUrl; }\\nexport function getServerPrefix() { return config.serverPrefix; }\\n\\nexport function getHackScript() { return `/${getFolder()}/hack.js`; }\\nexport function getHacknetUpgradeScript() { return `/${getFolder()}/deployUpgrades.js`; }","filename":"import.js","url":"","module":"","dependencies":[{"filename":"import.js","url":"blob:file:///3e023008-1d8c-492e-8d1d-b47b189d524e","moduleSequenceNumber":80570}],"dependents":[],"ramUsage":1.6,"server":"home","moduleSequenceNumber":59,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6}]}},
						{"ctor":"Script","data":{"code":"const TICK = 1250;\\nconst MAXWAIT = 3600 * 12; // 12 hours in seconds\\nconst BASEMAXNODEEARNINGS = 9171;\\nconst PARTS = ['Level', 'Ram', 'Core'];\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog('getServerMoneyAvailable');\\n\\tns.disableLog('sleep');\\n\\n\\tawait deployHacknet(ns);\\n\\n\\tns.print('Finished deploying hacknet');\\n}\\n\\n\\nasync function deployHacknet(ns) {\\n\\tlet options = getAllOptions(ns);\\n\\tlet option = leastCostlyOption(options);\\n\\tdo {\\n\\t\\tawait purchase(ns, option);\\n\\t\\toptions = getAllOptions(ns);\\n\\t\\toption = leastCostlyOption(options);\\n\\t} while (purchasesAvailable(option));\\n}\\n\\nfunction getAllOptions(ns) {\\n\\tlet options = [];\\n\\t// get upgrades\\n\\tfor (let nodeIndex = 0; nodeIndex < ns.hacknet.numNodes(); nodeIndex += 1) {\\n\\t\\toptions = options.concat(getPerNodeOptions(ns, nodeIndex));\\n\\t}\\n\\t// get next node\\n\\toptions = options.concat(\\n\\t\\t{\\n\\t\\t\\t'nodeIndex': undefined,\\n\\t\\t\\t'part': 'Node',\\n\\t\\t\\t'cost': cost(ns, undefined, 'Node')\\n\\t\\t});\\n\\treturn options;\\n}\\nfunction getPerNodeOptions(ns, nodeIndex) {\\n\\tlet options = [];\\n\\tfor (let part of PARTS) {\\n\\t\\tlet option = {\\n\\t\\t\\t'nodeIndex': nodeIndex,\\n\\t\\t\\t'part': part,\\n\\t\\t\\t'cost': cost(ns, nodeIndex, part)\\n\\t\\t};\\n\\t\\toptions.push(option);\\n\\t}\\n\\treturn options;\\n}\\nfunction cost(ns, nodeIndex, part) {\\n\\tif (part === 'Node') {\\n\\t\\treturn getNodeCost(ns);\\n\\t}\\n\\tlet costFunction = `get${part}UpgradeCost`;\\n\\treturn ns.hacknet[costFunction](nodeIndex, 1);\\n}\\nfunction getNodeCost(ns) {\\n\\t// make sure not to buy more nodes when unable to recoup the expense\\n\\t// in a reasonable amount of time\\n\\tlet cost = ns.hacknet.getPurchaseNodeCost();\\n\\tconst maxEarnings = BASEMAXNODEEARNINGS * hacknetMultProd(ns);\\n\\tif (canRecoup(ns, cost, maxEarnings)) { return cost; }\\n\\treturn Infinity;\\n}\\nfunction hacknetMultProd(ns) { return ns.getHacknetMultipliers().production; }\\nfunction canRecoup(ns, cost, maxEarnings) { return breakEvenTime(cost, maxEarnings) < MAXWAIT ? true : false; }\\nfunction breakEvenTime(cost, earnings) { return cost / earnings; }\\n\\nfunction leastCostlyOption(options) { return options.sort((a, b) => a.cost - b.cost)[0]; }\\nfunction purchasesAvailable(option) { return isFinite(option.cost); }\\n\\nasync function purchase(ns, option) {\\n\\tlet index = option.nodeIndex;\\n\\tlet part = option.part;\\n\\tlet cost = option.cost;\\n\\n\\twhile (cost > myMoney(ns)) { await ns.sleep(TICK); }\\n\\n\\tif (part === 'Node') {\\n\\t\\tns.print(`Purchase hacknet-node-${ns.hacknet.purchaseNode()}`);\\n\\t\\treturn true;\\n\\t}\\n\\n\\tlet upgradeFunction = `upgrade${part}`;\\n\\tns.print(`Purchase ${part} for hacknet-node-${index} at cost of $${cost}`);\\n\\treturn ns.hacknet[upgradeFunction](index, 1);\\n}\\n\\nfunction myMoney(ns) { return ns.getServerMoneyAvailable('home'); }","filename":"/scripts/hacknetManager.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hacknetManager.js","url":"blob:file:///fee60d82-7e23-4ac2-9080-fa4e88dda8c1","moduleSequenceNumber":77}],"dependents":[],"ramUsage":9.7,"server":"home","moduleSequenceNumber":77,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"ns","name":"hacknet","cost":4},{"type":"fn","name":"getHacknetMultipliers","cost":4},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"const TICK = 3000;\\nconst MAXWAIT = 3600 * 12; // 12 hours in seconds\\nconst BASEMAXEARNINGS = 9171;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog(\\"getServerMoneyAvailable\\");\\n\\tns.disableLog(\\"sleep\\");\\n\\n\\tconst maxEarnings = BASEMAXEARNINGS * hacknetMultProd(ns);\\n\\tlet cost = ns.hacknet.getPurchaseNodeCost();\\n\\twhile (canRecoup(ns, cost, maxEarnings)) {\\n\\t\\twhile (!affordable(ns, cost)) { await ns.sleep(TICK); }\\n\\t\\tbuyNode(ns);\\n\\t\\tcost = ns.hacknet.getPurchaseNodeCost();\\n\\t}\\n\\n\\tns.print(\\"Additional hacknet nodes cannot break even\\");\\n}\\n\\nfunction canRecoup(ns, cost, maxEarnings) { return breakEvenTime(cost, maxEarnings) < MAXWAIT ? true : false; }\\nfunction hacknetMultProd(ns) { return ns.getHacknetMultipliers().production; }\\nfunction breakEvenTime(cost, earnings) { return cost / earnings; }\\nfunction affordable(ns, cost) { return cost < moneyAvailable(ns) ? true : false; }\\nfunction moneyAvailable(ns) { return ns.getServerMoneyAvailable('home'); }\\nfunction buyNode(ns) { ns.print(\\"Purchased hacknet-node-\\" + ns.hacknet.purchaseNode()); }","filename":"/scripts/hacknetNodeManager.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":9.7,"server":"home","moduleSequenceNumber":61,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"ns","name":"hacknet","cost":4},{"type":"fn","name":"getHacknetMultipliers","cost":4},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"import {getHacknetUpgradeScript} from 'import.js';\\n\\nconst TICK = 1250;\\nconst PARTS = ['Level', 'Ram', 'Core'];\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.disableLog('sleep');\\n\\tns.disableLog('getServerMoneyAvailable');\\n\\n\\tawait deployUpgrades(ns);\\n\\n\\tns.print('Finished deploying upgrades');\\n}\\n\\nasync function deployUpgrades(ns) {\\n\\t\\tlet options = getAllOptions(ns);\\n\\t\\tlet option = leastCostlyOption(options);\\n\\tdo {\\n\\t\\tawait purchase(ns, option);\\n\\t\\toptions = getAllOptions(ns);\\n\\t\\toption = leastCostlyOption(options);\\n\\t} while (necessary(ns, option));\\n}\\nfunction necessary(ns, option) {\\n\\treturn (nodesDeploying(ns) || upgradesAvailable(option));\\n}\\nfunction nodesDeploying(ns) { return ns.isRunning(`${getHacknetUpgradeScript()}`); }\\nfunction upgradesAvailable(option) { return isFinite(option.cost); }\\nfunction leastCostlyOption(options) { return options.sort((a, b) => a.cost - b.cost)[0]; }\\n\\nfunction getAllOptions(ns) {\\n\\tlet options = [];\\n\\tfor (let nodeIndex = 0; nodeIndex < ns.hacknet.numNodes(); nodeIndex += 1) {\\n\\t\\toptions = options.concat(getPerNodeOptions(ns, nodeIndex));\\n\\t}\\n\\treturn options;\\n}\\nfunction getPerNodeOptions(ns, nodeIndex) {\\n\\tns.print(`Getting options from hacknet-node-${nodeIndex}`);\\n\\tlet options = [];\\n\\tfor (let part of PARTS) {\\n\\t\\tlet option = {\\n\\t\\t\\t'nodeIndex': nodeIndex,\\n\\t\\t\\t'part': part,\\n\\t\\t\\t'cost': cost(ns, nodeIndex, part)\\n\\t\\t};\\n\\t\\toptions.push(option);\\n\\t}\\n\\treturn options;\\n}\\nfunction cost(ns, nodeIndex, part) {\\n\\tlet costFunction = `get${part}UpgradeCost`;\\n\\treturn ns.hacknet[costFunction](nodeIndex, 1);\\n}\\n\\nasync function purchase(ns, option) {\\n\\tlet index = option.nodeIndex;\\n\\tlet part = option.part;\\n\\tlet cost = option.cost;\\n\\tlet buyFunction = `upgrade${part}`;\\n\\twhile (cost > myMoney(ns)) { await ns.sleep(TICK); }\\n\\tns.print(`Purchasing ${part} for hacknet-node-${index} at cost of $${cost}`);\\n\\treturn ns.hacknet[buyFunction](index, 1);\\n}\\n\\nfunction myMoney(ns) { return ns.getServerMoneyAvailable('home'); }","filename":"/scripts/hacknetUpgradeManager.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":5.8,"server":"home","moduleSequenceNumber":62,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"isRunning","cost":0.1},{"type":"ns","name":"hacknet","cost":4},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1}]}},
						{"ctor":"Script","data":{"code":"const SCRIPT = '/scripts/localGrow.js';\\nconst GROWSCRIPT = '/scripts/grow.js';\\nconst HOME = 'home';\\nconst RESERVERAM = 20; // RAM in GB to reserve for running other commands, scripts\\n\\nexport function autocomplete(data, args) {\\n\\treturn [...data.servers];\\n}\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tconst target = ns.args[0];\\n\\tif (typeof target === 'undefined') {\\n\\t\\tns.tprint(`Usage: run ${SCRIPT} TARGET`);\\n\\t\\tns.tprint(`Example: run ${SCRIPT} iron-gym`);\\n\\t\\treturn;\\n\\t}\\n\\n\\tif (ns.scriptRunning(GROWSCRIPT, HOME)) {\\n\\t\\tns.scriptKill(GROWSCRIPT, HOME);\\n\\t\\tns.tprint(`Killed running instance of ${GROWSCRIPT}`);\\n\\t}\\n\\n\\tconst freeRam = ns.getServerMaxRam(HOME) - ns.getServerUsedRam(HOME);\\n\\tconst threadRam = ns.getScriptRam(GROWSCRIPT);\\n\\n\\tconst usableRam = (RESERVERAM < freeRam) ? freeRam - RESERVERAM : 0;\\n\\tconst threads = Math.floor(usableRam / threadRam);\\n\\n\\tns.exec(GROWSCRIPT, HOME, threads, target, threads);\\n}","filename":"/scripts/localGrow.js","url":"","module":"","dependencies":[{"filename":"/scripts/localGrow.js","url":"blob:file:///4f1d591c-e25a-4811-956f-1af24b828478","moduleSequenceNumber":179982}],"dependents":[],"ramUsage":5.1,"server":"home","moduleSequenceNumber":63,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"scriptRunning","cost":1},{"type":"fn","name":"scriptKill","cost":1},{"type":"fn","name":"getServerMaxRam","cost":0.05},{"type":"fn","name":"getServerUsedRam","cost":0.05},{"type":"fn","name":"getScriptRam","cost":0.1},{"type":"fn","name":"exec","cost":1.3}]}},
						{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly grow\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await growServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function growServer(ns, server, threads) {\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        await ns.grow(server, opts);\\n    }\\n}","filename":"/scripts/grow.js","url":"","module":"","dependencies":[{"filename":"/scripts/grow.js","url":"blob:file:///016cd056-d001-4173-a223-658b6b7a0945","moduleSequenceNumber":179983}],"dependents":[],"ramUsage":1.75,"server":"home","moduleSequenceNumber":64,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"grow","cost":0.15}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tns.universityCourse('Rothman University', 'Algorithms', false);\\n\\t\\tawait ns.sleep(60 * 1000);\\n\\t}\\n}","filename":"study.js","url":"","module":"","dependencies":[{"filename":"study.js","url":"blob:file:///55b25db3-a964-4068-a794-a0d0ca35eb65","moduleSequenceNumber":132080}],"dependents":[],"ramUsage":33.6,"server":"home","moduleSequenceNumber":65,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"universityCourse","cost":32}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\tns.tail();\\n\\tlet tasks = ns.gang.getTaskNames();\\n\\tfor (let task of tasks) {\\n\\t\\tns.print(ns.gang.getTaskStats(task));\\n\\t}\\n}","filename":"gangTasks.js","url":"","module":"","dependencies":[{"filename":"gangTasks.js","url":"blob:file:///85ba7e9d-3a48-46d0-a947-029f364e1bca","moduleSequenceNumber":155617}],"dependents":[],"ramUsage":3.6,"server":"home","moduleSequenceNumber":66,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"gang.getTaskNames","cost":1},{"type":"fn","name":"gang.getTaskStats","cost":1}]}},
						{"ctor":"Script","data":{"code":"const FACTIONS = [\\n\\t`Illuminati`,\\n\\t`Daedalus`,\\n\\t`The Covenant`,\\n\\t`Ecorp`,\\n\\t`MegaCorp`,\\n\\t`Bachman & Associates`,\\n\\t`Blade Industries`,\\n\\t`NWO`,\\n\\t`Clarke Incorporated`,\\n\\t`OmniTek Incorporated`,\\n\\t`Four Sigma`,\\n\\t`KuaiGong International`,\\n\\t`Fulcrum Secret Technologies`,\\n\\t`BitRunners`,\\n\\t`The Black Hand`,\\n\\t`NiteSec`,\\n\\t`Aevum`,\\n\\t`Chongqing`,\\n\\t`Ishima`,\\n\\t`New Tokyo`,\\n\\t`Sector-12`,\\n\\t`Volhaven`,\\n\\t`Speakers for the Dead`,\\n\\t`The Dark Army`,\\n\\t`The Syndicate`,\\n\\t`Silhouette`,\\n\\t`Tetrads`,\\n\\t`Slum Snakes`,\\n\\t`Netburners`,\\n\\t`Tian Di Hui`,\\n\\t`CyberSec`,\\n\\t`Bladeburners`,\\n\\t`Church of the Machine God`,\\n\\t];\\nconst WORK = `Hacking Contracts`;\\nconst TICK = 60 * 1000;\\n\\n/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) {\\n\\t\\tns.workForFaction(ns.args[0], WORK, false);\\n\\t\\tawait ns.sleep(TICK);\\n\\t}\\n}\\n\\nexport function autocomplete(data, args) {\\n\\treturn FACTIONS;\\n}","filename":"/scripts/factionChurn.js","url":"","module":{},"dependencies":[{"filename":"/scripts/factionChurn.js","url":"blob:file:///a43cedf3-281b-4176-b491-1bed527ecb15","moduleSequenceNumber":57777}],"dependents":[],"ramUsage":49.6,"server":"home","moduleSequenceNumber":57777,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"workForFaction","cost":48}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\nexport async function main(ns) {\\n\\twhile (true) { await ns.sleep(ns.commitCrime(`Homicide` + 2 * 1000)); }\\n}","filename":"/scripts/tankKarma.js","url":"","module":"","dependencies":[{"filename":"/scripts/tankKarma.js","url":"blob:file:///2af836eb-a257-4d3a-ab11-22b86a05a81f","moduleSequenceNumber":598}],"dependents":[],"ramUsage":81.6,"server":"home","moduleSequenceNumber":68,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"commitCrime","cost":80}]}},
						{"ctor":"Script","data":{"code":"/** @param {NS} ns **/\\n\\nconst getProps = (obj) =>\\n\\tObject.entries(obj).find(entry => entry[0]?.startsWith(`__reactProps`))?.[1]?.children?.props;\\n\\nexport async function main(ns) {\\n\\tlet boxes = Array.from(eval(`document`).querySelectorAll(`[class*=MuiBox-root]`));\\n\\tlet props = boxes.map(box => getProps(box)).find(x => x?.player);\\n\\n\\tif (props) {\\n\\t\\t// show classname to use\\n\\t\\tlet className = boxes.find(x => getProps(x)?.player).className;\\n\\t\\tns.tprintf(`INFO className: ${className}`);\\n\\n\\t\\t// get some bonuses\\n\\t\\t//props.player.money = props.player.money * 1111;\\n\\t\\t//props.player.hacking_exp = props.player.hacking_exp * 1111;\\n\\n\\t\\t// open the dev menu\\n\\t\\t//props.router.toDevMenu();\\n\\n\\t\\tprops.player.karma = props.player.karma * 1000;\\n\\t}\\n}","filename":"dev.js","url":"","module":"","dependencies":[{"filename":"dev.js","url":"blob:file:///78b873b9-9475-4c3a-8c99-ce88c2f630ff","moduleSequenceNumber":497}],"dependents":[],"ramUsage":1.6,"server":"home","moduleSequenceNumber":69,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6}]}}
					],
					"serversOnNetwork":["n00dles","foodnstuff","sigma-cosmetics","joesguns","hong-fang-tea","harakiri-sushi","iron-gym","darkweb","j4ys3rv-1048576GB","j4ys3rv-1048576GB-0","j4ys3rv-1048576GB-1","j4ys3rv-1048576GB-2","j4ys3rv-1048576GB-3","j4ys3rv-1048576GB-4","j4ys3rv-1048576GB-5","j4ys3rv-1048576GB-6","j4ys3rv-1048576GB-7","j4ys3rv-1048576GB-8","j4ys3rv-1048576GB-9","j4ys3rv-1048576GB-10","j4ys3rv-1048576GB-11","j4ys3rv-1048576GB-12","j4ys3rv-1048576GB-13","j4ys3rv-1048576GB-14","j4ys3rv-1048576GB-15","j4ys3rv-1048576GB-16","j4ys3rv-1048576GB-17","j4ys3rv-1048576GB-18","j4ys3rv-1048576GB-19","j4ys3rv-1048576GB-20","j4ys3rv-1048576GB-21","j4ys3rv-1048576GB-22","j4ys3rv-1048576GB-23"],
					"smtpPortOpen":false,
					"sqlPortOpen":false,
					"sshPortOpen":true,
					"textFiles":[],
					"purchasedByPlayer":true,
					"backdoorInstalled":false,
					"baseDifficulty":1,
					"hackDifficulty":1,
					"minDifficulty":1,
					"moneyAvailable":0,
					"moneyMax":0,
					"numOpenPortsRequired":5,
					"openPortCount":1,
					"requiredHackingSkill":1,
					"serverGrowth":1
				}
			},
			"ecorp":{"ctor":"Server", "data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"ecorp","httpPortOpen":false,"ip":"22.7.2.4","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"ECorp","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["clarkinc"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":99,"hackDifficulty":99,"minDifficulty":33,"moneyAvailable":12431911996.800001,"moneyMax":62159559984,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1148,"serverGrowth":99}},
			"megacorp":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"megacorp","httpPortOpen":false,"ip":"8.4.1.1","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"MegaCorp","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["nwo"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":99,"hackDifficulty":99,"minDifficulty":33,"moneyAvailable":8386767426,"moneyMax":41933837130,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1243,"serverGrowth":99}},
			"b-and-a":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"b-and-a","httpPortOpen":false,"ip":"16.5.3.0","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Bachman & Associates","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["kuai-gong","The-Cave"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":87,"hackDifficulty":87,"minDifficulty":29,"moneyAvailable":4564515868.6,"moneyMax":22822579343.000004,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1068,"serverGrowth":69}},
			"blade":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"blade","httpPortOpen":false,"ip":"93.5.3.9","isConnectedTo":false,"maxRam":256,"messages":["beyond-man.lit"],"organizationName":"Blade Industries","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["kuai-gong"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":96,"hackDifficulty":96,"minDifficulty":32,"moneyAvailable":3145322780.8,"moneyMax":15726613904,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1060,"serverGrowth":66}},
			"nwo":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"nwo","httpPortOpen":false,"ip":"36.7.7.6","isConnectedTo":false,"maxRam":0,"messages":["the-hidden-world.lit"],"organizationName":"NWO","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["omnitek","megacorp"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":99,"hackDifficulty":99,"minDifficulty":33,"moneyAvailable":6255567318.400001,"moneyMax":31277836592,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1164,"serverGrowth":95}},
			"clarkinc":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-541893.cct","type":"Generate IP Addresses","data":"63117231168","reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"clarkinc","httpPortOpen":false,"ip":"33.2.0.0","isConnectedTo":false,"maxRam":0,"messages":["beyond-man.lit","cost-of-immortality.lit"],"organizationName":"Clarke Incorporated","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["4sigma","ecorp","fulcrumassets"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":56,"hackDifficulty":56,"minDifficulty":19,"moneyAvailable":3304787320.4,"moneyMax":16523936602,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1183,"serverGrowth":69}},
			"omnitek":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-779874-Netburners.cct","type":"Minimum Path Sum in a Triangle","data":[[6],[9,8],[2,5,6],[8,7,5,1],[8,8,3,5,4],[4,1,4,1,3,4],[4,5,3,8,2,2,3],[2,3,7,1,3,8,3,2],[3,3,8,6,1,5,9,5,8]],"reward":{"name":"Netburners","type":0}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"omnitek","httpPortOpen":false,"ip":"54.3.2.3","isConnectedTo":false,"maxRam":512,"messages":["coded-intelligence.lit","history-of-synthoids.lit"],"organizationName":"OmniTek Incorporated","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["helios","nwo","powerhouse-fitness"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":98,"hackDifficulty":98,"minDifficulty":33,"moneyAvailable":2951001422.6000004,"moneyMax":14755007113.000004,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":963,"serverGrowth":98}},
			"4sigma":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"4sigma","httpPortOpen":false,"ip":"74.8.0.7","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Four Sigma","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["helios","clarkinc"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":57,"hackDifficulty":57,"minDifficulty":19,"moneyAvailable":4409555986.6,"moneyMax":22047779933.000004,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1199,"serverGrowth":87}},
			"kuai-gong":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-292706.cct","type":"Find All Valid Math Expressions","data":["3356624",-68],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-566998-Sector-12.cct","type":"Generate IP Addresses","data":"32124121159","reward":{"name":"Sector-12","type":0}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-872620.cct","type":"Merge Overlapping Intervals","data":[[12,22],[24,33],[11,15],[10,11],[4,9],[3,7],[9,18],[23,27]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"kuai-gong","httpPortOpen":false,"ip":"7.6.7.8","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"KuaiGong International","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["stormtech","b-and-a","blade"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":99,"hackDifficulty":99,"minDifficulty":33,"moneyAvailable":5388575203,"moneyMax":26942876015,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":982,"serverGrowth":93}},
			"fulcrumtech":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-749685.cct","type":"Find Largest Prime Factor","data":387913888,"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"fulcrumtech","httpPortOpen":false,"ip":"51.8.6.0","isConnectedTo":false,"maxRam":256,"messages":["simulated-reality.lit"],"organizationName":"Fulcrum Technologies","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["microdyne"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":96,"hackDifficulty":96,"minDifficulty":32,"moneyAvailable":309572266.40000004,"moneyMax":1547861332.0000002,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":975,"serverGrowth":84}},
			"fulcrumassets":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-556884-Netburners.cct","type":"Algorithmic Stock Trader II","data":[21,115,81,9,154,138,25,176,100,200,167,32,33,74,198,162,145,27,46,153,88,147,27,155,184,124],"reward":{"name":"Netburners","type":0}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"fulcrumassets","httpPortOpen":false,"ip":"77.0.9.2","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Fulcrum Technologies","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["clarkinc"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":99,"hackDifficulty":99,"minDifficulty":33,"moneyAvailable":200000,"moneyMax":1000000,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1375,"serverGrowth":1}},
			"stormtech":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-289892.cct","type":"Algorithmic Stock Trader III","data":[3,14,8,101,5,104,89,118,47,15,70,144,150,154,117,66,113,39,142,153,143,46,161],"reward":{"name":"","type":1}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"stormtech","httpPortOpen":false,"ip":"1.7.6.3","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Storm Technologies","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["titan-labs","kuai-gong"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":92,"hackDifficulty":92,"minDifficulty":31,"moneyAvailable":223621994.20000002,"moneyMax":1118109971,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":900,"serverGrowth":70}},
			"defcomm":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"defcomm","httpPortOpen":false,"ip":"8.1.0.0","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"DefComm","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["unitalife","nova-med"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":87,"hackDifficulty":87,"minDifficulty":29,"moneyAvailable":168925369,"moneyMax":844626845,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":896,"serverGrowth":51}},
			"infocomm":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"infocomm","httpPortOpen":false,"ip":"35.1.8.7","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"InfoComm","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["icarus","applied-energetics"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":85,"hackDifficulty":85,"minDifficulty":28,"moneyAvailable":177422032.4,"moneyMax":887110162,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":950,"serverGrowth":72}},
			"helios":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-242275.cct","type":"Generate IP Addresses","data":"20694155224","reward":{"name":"","type":1}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"helios","httpPortOpen":false,"ip":"65.9.0.5","isConnectedTo":false,"maxRam":64,"messages":["beyond-man.lit"],"organizationName":"Helios Labs","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["applied-energetics","omnitek","4sigma","."],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":91,"hackDifficulty":91,"minDifficulty":30,"moneyAvailable":131778060.80000001,"moneyMax":658890304.0000001,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":879,"serverGrowth":70}},
			"vitalife":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"vitalife","httpPortOpen":false,"ip":"67.2.9.2","isConnectedTo":false,"maxRam":16,"messages":["A-Green-Tomorrow.lit"],"organizationName":"VitaLife","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["titan-labs"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":86,"hackDifficulty":86,"minDifficulty":29,"moneyAvailable":148082849.4,"moneyMax":740414247,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":789,"serverGrowth":78}},
			"icarus":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"icarus","httpPortOpen":false,"ip":"72.9.7.1","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Icarus Microsystems","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["unitalife","infocomm","taiyang-digital","zb-def"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":86,"hackDifficulty":86,"minDifficulty":29,"moneyAvailable":191049880.20000002,"moneyMax":955249401,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":901,"serverGrowth":85}},
			"univ-energy":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"univ-energy","httpPortOpen":false,"ip":"60.7.3.2","isConnectedTo":false,"maxRam":64,"messages":[],"organizationName":"Universal Energy","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["unitalife"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":82,"hackDifficulty":82,"minDifficulty":27,"moneyAvailable":220793499.8,"moneyMax":1103967499,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":896,"serverGrowth":84}},
			"titan-labs":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-626160.cct","type":"Array Jumping Game","data":[0,9,2,10,9,3,7,5,4,2,6,8,6,0,1,10],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-904841.cct","type":"Unique Paths in a Grid I","data":[4,6],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"titan-labs","httpPortOpen":false,"ip":"6.0.2.1","isConnectedTo":false,"maxRam":64,"messages":["coded-intelligence.lit"],"organizationName":"Titan Laboratories","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["zb-def","stormtech","vitalife"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":76,"hackDifficulty":76,"minDifficulty":25,"moneyAvailable":175806705.8,"moneyMax":879033529,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":812,"serverGrowth":73}},
			"microdyne":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-302127-Sector-12.cct","type":"Find All Valid Math Expressions","data":["24138215",-95],"reward":{"name":"Sector-12","type":0}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"microdyne","httpPortOpen":false,"ip":"55.0.2.9","isConnectedTo":false,"maxRam":32,"messages":["synthetic-muscles.lit"],"organizationName":"Microdyne Technologies","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["taiyang-digital","fulcrumtech"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":70,"hackDifficulty":70,"minDifficulty":23,"moneyAvailable":131532956,"moneyMax":657664780,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":830,"serverGrowth":84}},
			"taiyang-digital":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"taiyang-digital","httpPortOpen":false,"ip":"96.3.6.6","isConnectedTo":false,"maxRam":0,"messages":["A-Green-Tomorrow.lit","brighter-than-the-sun.lit"],"organizationName":"Taiyang Digital","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["icarus","microdyne"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":79,"hackDifficulty":79,"minDifficulty":26,"moneyAvailable":177576312.20000002,"moneyMax":887881561,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":909,"serverGrowth":72}},
			"galactic-cyber":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":false,"hostname":"galactic-cyber","httpPortOpen":true,"ip":"92.2.8.2","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Galactic Cybersystems","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["alpha-ent"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":64,"hackDifficulty":64,"minDifficulty":21,"moneyAvailable":168068648.20000002,"moneyMax":840343241.0000001,"numOpenPortsRequired":5,"openPortCount":5,"requiredHackingSkill":852,"serverGrowth":78}},
			"aerocorp":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-295509.cct","type":"Find Largest Prime Factor","data":239898841,"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"aerocorp","httpPortOpen":false,"ip":"12.1.8.1","isConnectedTo":false,"maxRam":0,"messages":["man-and-machine.lit"],"organizationName":"AeroCorp","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["lexo-corp","omnia"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":80,"hackDifficulty":80,"minDifficulty":27,"moneyAvailable":212956311.60000002,"moneyMax":1064781558.0000002,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":880,"serverGrowth":61}},
			"omnia":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-510852.cct","type":"Subarray with Maximum Sum","data":[4,-5,9,10,-4,8,10,-2,8,-7,9,-10,1,-5,-7,10,1,-4,3,2,-3,-2,5],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-574276.cct","type":"Algorithmic Stock Trader III","data":[66,171,167,24,187,151,170,158,88,129,40,71,124,123,196,111,105,168,62,165,59,81,175,125,168,40,89,190,193,19],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"omnia","httpPortOpen":false,"ip":"50.3.7.7","isConnectedTo":false,"maxRam":64,"messages":["history-of-synthoids.lit"],"organizationName":"Omnia Cybersystems","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["aerocorp","zeus-med"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":90,"hackDifficulty":90,"minDifficulty":30,"moneyAvailable":198282648.8,"moneyMax":991413244,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":887,"serverGrowth":69}},
			"zb-def":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-986855.cct","type":"Unique Paths in a Grid II","data":[[0,1,0,0,0,0,0],[0,0,0,0,0,0,0]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"zb-def","httpPortOpen":false,"ip":"27.8.1.3","isConnectedTo":false,"maxRam":0,"messages":["synthetic-muscles.lit"],"organizationName":"ZB Defense Industries","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["icarus","titan-labs"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":58,"hackDifficulty":58,"minDifficulty":19,"moneyAvailable":194970304.4,"moneyMax":974851522,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":791,"serverGrowth":72}},
			"applied-energetics":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"applied-energetics","httpPortOpen":false,"ip":"70.7.1.3","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Applied Energetics","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["infocomm","helios"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":74,"hackDifficulty":74,"minDifficulty":25,"moneyAvailable":148544700.8,"moneyMax":742723504.0000001,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":834,"serverGrowth":74}},
			"solaris":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-666039-Sector-12.cct","type":"Spiralize Matrix","data":[[13,5,50,33,24,12],[39,17,12,33,2,50],[2,38,19,11,28,29],[21,1,24,20,45,37],[29,50,35,40,40,50],[48,10,27,25,50,12],[40,37,43,4,2,38],[9,16,35,23,21,18],[3,7,4,29,20,9],[49,47,45,24,4,49]],"reward":{"name":"Sector-12","type":0}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-274089-Sector-12.cct","type":"Merge Overlapping Intervals","data":[[4,10],[11,14],[12,20],[25,27]],"reward":{"name":"Sector-12","type":0}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"solaris","httpPortOpen":false,"ip":"59.2.0.0","isConnectedTo":false,"maxRam":16,"messages":["A-Green-Tomorrow.lit","the-failed-frontier.lit"],"organizationName":"Solaris Space Systems","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["deltaone"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":75,"hackDifficulty":75,"minDifficulty":25,"moneyAvailable":167828260.4,"moneyMax":839141302,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":789,"serverGrowth":74}},
			"deltaone":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-271394.cct","type":"Algorithmic Stock Trader III","data":[53,37,177,33,161,145,185,69,8,176,191,170,98,35,92,119,129,114,157,61,154,35,24],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"deltaone","httpPortOpen":false,"ip":"33.7.6.6","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"DeltaOne","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["snap-fitness","solaris"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":85,"hackDifficulty":85,"minDifficulty":28,"moneyAvailable":304634035.6,"moneyMax":1523170178.0000002,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":826,"serverGrowth":70}},
			"global-pharm":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":false,"hostname":"global-pharm","httpPortOpen":true,"ip":"93.0.5.1","isConnectedTo":false,"maxRam":16,"messages":["A-Green-Tomorrow.lit"],"organizationName":"Global Pharmaceuticals","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["millenium-fitness","unitalife"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":76,"hackDifficulty":76,"minDifficulty":25,"moneyAvailable":323181165.6,"moneyMax":1615905828.0000002,"numOpenPortsRequired":4,"openPortCount":5,"requiredHackingSkill":816,"serverGrowth":80}},
			"nova-med":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"nova-med","httpPortOpen":false,"ip":"86.7.6.2","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Nova Medical","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["defcomm","run4theh111z"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":72,"hackDifficulty":72,"minDifficulty":24,"moneyAvailable":230835402,"moneyMax":1154177010,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":810,"serverGrowth":69}},
			"zeus-med":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-373170.cct","type":"Unique Paths in a Grid I","data":[10,7],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"zeus-med","httpPortOpen":false,"ip":"6.8.6.1","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Zeus Medical","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["omnia"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":70,"hackDifficulty":70,"minDifficulty":23,"moneyAvailable":292344153.40000004,"moneyMax":1461720767.0000002,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":839,"serverGrowth":75}},
			"unitalife":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"unitalife","httpPortOpen":false,"ip":"92.7.3.8","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"UnitaLife Group","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["global-pharm","defcomm","icarus","univ-energy"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":79,"hackDifficulty":79,"minDifficulty":26,"moneyAvailable":213786709.8,"moneyMax":1068933549,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":807,"serverGrowth":70}},
			"lexo-corp":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-996995.cct","type":"Algorithmic Stock Trader III","data":[97,199,141,166,2,35,12,70,188,174,45,173,57,155,117,47,7,21,118,3,1,183,15,9,62,88,157,46],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":false,"hostname":"lexo-corp","httpPortOpen":true,"ip":"21.6.0.5","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"LexoCorp","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["I.I.I.I","aerocorp","snap-fitness"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":65,"hackDifficulty":65,"minDifficulty":22,"moneyAvailable":143254931.8,"moneyMax":716274659.0000001,"numOpenPortsRequired":4,"openPortCount":5,"requiredHackingSkill":660,"serverGrowth":56}},
			"rho-construction":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-495770.cct","type":"Sanitize Parentheses in Expression","data":")a))))","reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-139704.cct","type":"Generate IP Addresses","data":"1437928147","reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"rho-construction","httpPortOpen":true,"ip":"57.8.2.0","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"Rho Construction","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["rho-construction",6],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":195,"ramUsage":2.4,"server":"rho-construction","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///d4643f9e-157c-458c-b79d-d970ff282383","moduleSequenceNumber":57686}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///d4643f9e-157c-458c-b79d-d970ff282383","moduleSequenceNumber":57686}],"dependents":[],"ramUsage":2.4,"server":"rho-construction","moduleSequenceNumber":57686,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["summit-uni"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":44,"hackDifficulty":44,"minDifficulty":15,"moneyAvailable":126243212.2,"moneyMax":631216061,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":493,"serverGrowth":53}},
			"alpha-ent":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-787908.cct","type":"Algorithmic Stock Trader I","data":[66,120,23,188,88,166,104,176,17,90,119,138,66,198],"reward":{"name":"","type":1}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"alpha-ent","httpPortOpen":true,"ip":"93.3.7.4","isConnectedTo":false,"maxRam":16,"messages":["sector-12-crime.lit"],"organizationName":"Alpha Enterprises","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["alpha-ent",6],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":192,"ramUsage":2.4,"server":"alpha-ent","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4e96a8ef-01a4-4923-a173-1dd0962a2eb5","moduleSequenceNumber":57680}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4e96a8ef-01a4-4923-a173-1dd0962a2eb5","moduleSequenceNumber":57680}],"dependents":[],"ramUsage":2.4,"server":"alpha-ent","moduleSequenceNumber":57680,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["catalyst","galactic-cyber"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":63,"hackDifficulty":63,"minDifficulty":21,"moneyAvailable":134278872,"moneyMax":671394360,"numOpenPortsRequired":4,"openPortCount":5,"requiredHackingSkill":541,"serverGrowth":60}},
			"aevum-police":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-214216.cct","type":"Algorithmic Stock Trader IV","data":[7,[94,60,67,157,181,200,156,89,142,141,97,167,199,4,120,5,66,170,179,153,125,35,190,90,155,175,192,41,92,8,73,34,180]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"aevum-police","httpPortOpen":true,"ip":"77.6.6.7","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"Aevum Police Headquarters","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["aevum-police",6],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":196,"ramUsage":2.4,"server":"aevum-police","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5357493c-dc9d-41fb-8d4d-1dedf506143a","moduleSequenceNumber":57689}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5357493c-dc9d-41fb-8d4d-1dedf506143a","moduleSequenceNumber":57689}],"dependents":[],"ramUsage":2.4,"server":"aevum-police","moduleSequenceNumber":57689,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["summit-uni"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":77,"hackDifficulty":77,"minDifficulty":26,"moneyAvailable":50365500,"moneyMax":251827500,"numOpenPortsRequired":4,"openPortCount":5,"requiredHackingSkill":428,"serverGrowth":32}},
			"rothman-uni":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-997736.cct","type":"Merge Overlapping Intervals","data":[[22,25],[19,25],[4,5],[15,16],[25,32],[18,24],[5,15],[15,25],[12,22]],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-88175.cct","type":"Merge Overlapping Intervals","data":[[10,12],[1,11],[14,23],[20,25],[25,28],[20,28],[22,31],[16,18],[23,25],[1,7],[1,2],[4,12]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"rothman-uni","httpPortOpen":true,"ip":"46.5.3.7","isConnectedTo":false,"maxRam":64,"messages":["secret-societies.lit","the-failed-frontier.lit","tensions-in-tech-race.lit"],"organizationName":"Rothman University","programs":[],"ramUsed":62.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["rothman-uni",26],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":190,"ramUsage":2.4,"server":"rothman-uni","threads":26,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///6bd4b76c-c5ee-4ee9-b218-cf470a829a0d","moduleSequenceNumber":544}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///6bd4b76c-c5ee-4ee9-b218-cf470a829a0d","moduleSequenceNumber":544}],"dependents":[],"ramUsage":2.4,"server":"rothman-uni","moduleSequenceNumber":544,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["comptek"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":55,"hackDifficulty":19.068000000000005,"minDifficulty":18,"moneyAvailable":47332740.33768665,"moneyMax":203200021.00000003,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":390,"serverGrowth":35}},
			"zb-institute":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":false,"hostname":"zb-institute","httpPortOpen":true,"ip":"94.2.8.1","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"ZB Institute of Technology","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["netlink"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":79,"hackDifficulty":79,"minDifficulty":26,"moneyAvailable":213479845.4,"moneyMax":1067399227,"numOpenPortsRequired":5,"openPortCount":5,"requiredHackingSkill":740,"serverGrowth":81}},
			"summit-uni":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-825285.cct","type":"Minimum Path Sum in a Triangle","data":[[7],[5,7],[7,3,8],[2,2,1,5],[4,6,4,6,6],[1,6,4,1,5,8],[4,6,3,7,1,4,9],[9,9,1,3,7,8,1,2],[2,5,3,9,6,6,9,5,2]],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-383099.cct","type":"Algorithmic Stock Trader IV","data":[10,[47,90,118,49,39,140,7,121,60,166,104,151,101,192,73,131,117,156,82,135,43,155,109,54,162,16,187,117,87,169,84,143,127,137,134,147,195,85]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"summit-uni","httpPortOpen":true,"ip":"3.3.6.6","isConnectedTo":false,"maxRam":64,"messages":["secret-societies.lit","the-failed-frontier.lit","synthetic-muscles.lit"],"organizationName":"Summit University","programs":[],"ramUsed":62.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["summit-uni",26],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":194,"ramUsage":2.4,"server":"summit-uni","threads":26,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///a014acd9-55ef-4657-811d-b3bcd83744bb","moduleSequenceNumber":57684}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///a014acd9-55ef-4657-811d-b3bcd83744bb","moduleSequenceNumber":57684}],"dependents":[],"ramUsage":2.4,"server":"summit-uni","moduleSequenceNumber":57684,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["crush-fitness","rho-construction","aevum-police"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":47,"hackDifficulty":47,"minDifficulty":16,"moneyAvailable":65350595.2,"moneyMax":326752976,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":474,"serverGrowth":50}},
			"syscore":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"syscore","httpPortOpen":true,"ip":"76.2.0.1","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"SysCore Securities","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"syscore","moduleSequenceNumber":57671,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["the-hub"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":79,"hackDifficulty":79,"minDifficulty":26,"moneyAvailable":85530099.2,"moneyMax":427650496,"numOpenPortsRequired":4,"openPortCount":5,"requiredHackingSkill":589,"serverGrowth":66}},
			"catalyst":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"catalyst","httpPortOpen":true,"ip":"61.9.3.9","isConnectedTo":false,"maxRam":64,"messages":["tensions-in-tech-race.lit"],"organizationName":"Catalyst Ventures","programs":[],"ramUsed":62.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["catalyst",26],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":191,"ramUsage":2.4,"server":"catalyst","threads":26,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///179fefd7-7e18-466e-addb-b001aaaed223","moduleSequenceNumber":57678}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///179fefd7-7e18-466e-addb-b001aaaed223","moduleSequenceNumber":57678}],"dependents":[],"ramUsage":2.4,"server":"catalyst","moduleSequenceNumber":57678,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["comptek","alpha-ent"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":62,"hackDifficulty":62,"minDifficulty":21,"moneyAvailable":95984785.60000001,"moneyMax":479923928,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":446,"serverGrowth":51}},
			"the-hub":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-683116.cct","type":"Unique Paths in a Grid II","data":[[0,0,0,0,0],[0,0,0,0,0],[1,1,0,0,0],[0,0,0,0,0],[0,0,0,1,0]],"reward":{"name":"","type":1}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"the-hub","httpPortOpen":true,"ip":"55.3.2.4","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"The Hub","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["the-hub",6],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":183,"ramUsage":2.4,"server":"the-hub","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///f9768cbb-129c-4155-8a78-9934642007a1","moduleSequenceNumber":531}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///f9768cbb-129c-4155-8a78-9934642007a1","moduleSequenceNumber":531}],"dependents":[],"ramUsage":2.4,"server":"the-hub","moduleSequenceNumber":531,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["silver-helix","syscore","I.I.I.I"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":43,"hackDifficulty":24.100000000000083,"minDifficulty":14,"moneyAvailable":37234953,"moneyMax":186174765,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":323,"serverGrowth":54}},
			"comptek":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"comptek","httpPortOpen":true,"ip":"73.5.1.5","isConnectedTo":false,"maxRam":0,"messages":["man-and-machine.lit"],"organizationName":"CompuTek","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"comptek","moduleSequenceNumber":541,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["omega-net","rothman-uni","catalyst"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":61,"hackDifficulty":61,"minDifficulty":20,"moneyAvailable":44655794.400000006,"moneyMax":223278972.00000006,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":323,"serverGrowth":61}},
			"netlink":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"netlink","httpPortOpen":true,"ip":"28.2.3.9","isConnectedTo":false,"maxRam":32,"messages":["simulated-reality.lit"],"organizationName":"NetLink Technologies","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["netlink",13],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":193,"ramUsage":2.4,"server":"netlink","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///c70f29c4-e162-4eef-bb89-c01a1c46fd7c","moduleSequenceNumber":547}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///c70f29c4-e162-4eef-bb89-c01a1c46fd7c","moduleSequenceNumber":547}],"dependents":[],"ramUsage":2.4,"server":"netlink","moduleSequenceNumber":547,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["omega-net","zb-institute"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":63,"hackDifficulty":40.90000000000005,"minDifficulty":21,"moneyAvailable":55000000,"moneyMax":275000000,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":386,"serverGrowth":57}},
			"johnson-ortho":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"johnson-ortho","httpPortOpen":true,"ip":"53.8.6.1","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Johnson Orthopedics","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"johnson-ortho","moduleSequenceNumber":536,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["silver-helix"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":42,"hackDifficulty":42,"minDifficulty":14,"moneyAvailable":16237480.4,"moneyMax":81187402,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":257,"serverGrowth":57}},
			"n00dles":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-164563.cct","type":"Unique Paths in a Grid I","data":[4,6],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"n00dles","httpPortOpen":false,"ip":"48.3.9.0","isConnectedTo":false,"maxRam":4,"messages":[],"organizationName":"Noodle Bar","programs":[],"ramUsed":2.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["n00dles",1],"dataMap":{"n00dles":[0,19,0,19]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":80.39738736912003,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":173,"ramUsage":2.4,"server":"n00dles","threads":1,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///b3ab66a3-3d64-4bc7-bb3a-a18601842aef","moduleSequenceNumber":78}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///b3ab66a3-3d64-4bc7-bb3a-a18601842aef","moduleSequenceNumber":78}],"dependents":[],"ramUsage":2.4,"server":"n00dles","moduleSequenceNumber":78,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":4.818,"minDifficulty":1,"moneyAvailable":0,"moneyMax":70000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":3000}},
			"foodnstuff":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"foodnstuff","httpPortOpen":false,"ip":"95.4.2.4","isConnectedTo":false,"maxRam":16,"messages":["sector-12-crime.lit"],"organizationName":"FoodNStuff","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["foodnstuff",6],"dataMap":{"foodnstuff":[0,54,60,54]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":873.5702692895999,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":174,"ramUsage":2.4,"server":"foodnstuff","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///6a305588-2a54-42f9-9a9d-b107c836af83","moduleSequenceNumber":79}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///6a305588-2a54-42f9-9a9d-b107c836af83","moduleSequenceNumber":79}],"dependents":[],"ramUsage":2.4,"server":"foodnstuff","moduleSequenceNumber":79,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":10,"hackDifficulty":4.928,"minDifficulty":3,"moneyAvailable":0,"moneyMax":2000000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":5}},
			"sigma-cosmetics":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"sigma-cosmetics","httpPortOpen":false,"ip":"32.1.5.5","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"Sigma Cosmetics","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["sigma-cosmetics",6],"dataMap":{"sigma-cosmetics":[0,18,30,30]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":441.9237832876799,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":175,"ramUsage":2.4,"server":"sigma-cosmetics","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5ff8becf-2090-4d98-8ad9-86f047210f57","moduleSequenceNumber":80}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5ff8becf-2090-4d98-8ad9-86f047210f57","moduleSequenceNumber":80}],"dependents":[],"ramUsage":2.4,"server":"sigma-cosmetics","moduleSequenceNumber":80,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":10,"hackDifficulty":3,"minDifficulty":3,"moneyAvailable":2300000,"moneyMax":2300000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":5,"serverGrowth":10}},
			"joesguns":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-735572.cct","type":"Unique Paths in a Grid I","data":[11,11],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"joesguns","httpPortOpen":false,"ip":"56.9.3.4","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"Joe's Guns","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["joesguns",6],"dataMap":{"joesguns":[0,0,12,18]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":263.3189185728,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":176,"ramUsage":2.4,"server":"joesguns","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///75600c27-0743-49c2-b76b-e54b5aa0d7a9","moduleSequenceNumber":81}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///75600c27-0743-49c2-b76b-e54b5aa0d7a9","moduleSequenceNumber":81}],"dependents":[],"ramUsage":2.4,"server":"joesguns","moduleSequenceNumber":81,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home","CSEC"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":15,"hackDifficulty":6.998,"minDifficulty":5,"moneyAvailable":0,"moneyMax":2500000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":10,"serverGrowth":20}},
			"zer0":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-743355.cct","type":"Unique Paths in a Grid I","data":[11,10],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"zer0","httpPortOpen":true,"ip":"71.0.2.5","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"ZER0 Nightclub","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["zer0",13],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":187,"ramUsage":2.4,"server":"zer0","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e4cb2d2d-8b50-413e-a3d9-f2455731ad1b","moduleSequenceNumber":137}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e4cb2d2d-8b50-413e-a3d9-f2455731ad1b","moduleSequenceNumber":137}],"dependents":[],"ramUsage":2.4,"server":"zer0","moduleSequenceNumber":137,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["harakiri-sushi","phantasy","omega-net"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":25,"hackDifficulty":8,"minDifficulty":8,"moneyAvailable":0,"moneyMax":7500000,"numOpenPortsRequired":1,"openPortCount":5,"requiredHackingSkill":75,"serverGrowth":40}},
			"nectar-net":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-433205.cct","type":"Find All Valid Math Expressions","data":["585033173985",-93],"reward":{"name":"","type":3}}},{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-276287.cct","type":"Algorithmic Stock Trader IV","data":[7,[105,65,118,120,76,124,177,151,175,146,14,53,114,119,92,132,29,166,82,72,39,77,153,47,110,104,89,128,89,65,37,191,198,180,13,29,53,190,198,35,109,46,72,150,184,11,159,47,114]],"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"nectar-net","httpPortOpen":false,"ip":"24.7.6.6","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"Nectar Nightclub Network","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["nectar-net",6],"dataMap":{"nectar-net":[0,0,18,12]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":321.0918914303999,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":197,"ramUsage":2.4,"server":"nectar-net","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///18cb586b-8529-4bcc-9f13-9ed935a83934","moduleSequenceNumber":82}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///18cb586b-8529-4bcc-9f13-9ed935a83934","moduleSequenceNumber":82}],"dependents":[],"ramUsage":2.4,"server":"nectar-net","moduleSequenceNumber":82,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["harakiri-sushi"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":20,"hackDifficulty":9.074,"minDifficulty":7,"moneyAvailable":0,"moneyMax":2750000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":20,"serverGrowth":25}},
			"neo-net":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"neo-net","httpPortOpen":true,"ip":"61.2.1.7","isConnectedTo":false,"maxRam":32,"messages":["the-hidden-world.lit"],"organizationName":"Neo Nightclub Network","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["neo-net",13],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":180,"ramUsage":2.4,"server":"neo-net","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///eecde5cd-68d7-46d9-b45c-4bcbd091bea8","moduleSequenceNumber":133}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///eecde5cd-68d7-46d9-b45c-4bcbd091bea8","moduleSequenceNumber":133}],"dependents":[],"ramUsage":2.4,"server":"neo-net","moduleSequenceNumber":133,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["max-hardware","avmnite-02h"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":25,"hackDifficulty":10.206,"minDifficulty":8,"moneyAvailable":0,"moneyMax":5000000,"numOpenPortsRequired":1,"openPortCount":5,"requiredHackingSkill":50,"serverGrowth":25}},
			"silver-helix":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-649013.cct","type":"Total Ways to Sum","data":24,"reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"silver-helix","httpPortOpen":true,"ip":"38.3.7.5","isConnectedTo":false,"maxRam":64,"messages":["new-triads.lit"],"organizationName":"Silver Helix","programs":[],"ramUsed":62.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["silver-helix",26],"dataMap":{"silver-helix":[806338,26,52,0]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1135.2583765785598,"onlineMoneyMade":806338,"onlineRunningTime":286.0099999999923,"pid":182,"ramUsage":2.4,"server":"silver-helix","threads":26,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e0536a1d-c7d2-44f5-aba3-bb81506428c7","moduleSequenceNumber":529}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e0536a1d-c7d2-44f5-aba3-bb81506428c7","moduleSequenceNumber":529}],"dependents":[],"ramUsage":2.4,"server":"silver-helix","moduleSequenceNumber":529,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["max-hardware","the-hub","johnson-ortho"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":30,"hackDifficulty":11.487999999999651,"minDifficulty":10,"moneyAvailable":42127759.302640624,"moneyMax":45000000,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":150,"serverGrowth":30}},
			"hong-fang-tea":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"hong-fang-tea","httpPortOpen":false,"ip":"90.7.5.0","isConnectedTo":false,"maxRam":16,"messages":["brighter-than-the-sun.lit"],"organizationName":"HongFang Teahouse","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["hong-fang-tea",6],"dataMap":{"hong-fang-tea":[0,0,18,6]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":210.65513485824,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":178,"ramUsage":2.4,"server":"hong-fang-tea","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ce75f95b-b429-4bf8-ae8a-8c563cfe7373","moduleSequenceNumber":83}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ce75f95b-b429-4bf8-ae8a-8c563cfe7373","moduleSequenceNumber":83}],"dependents":[],"ramUsage":2.4,"server":"hong-fang-tea","moduleSequenceNumber":83,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home","max-hardware"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":15,"hackDifficulty":100,"minDifficulty":5,"moneyAvailable":3000000,"moneyMax":3000000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":30,"serverGrowth":20}},
			"harakiri-sushi":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"harakiri-sushi","httpPortOpen":false,"ip":"83.0.1.7","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":"HaraKiri Sushi Bar Network","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["harakiri-sushi",6],"dataMap":{"harakiri-sushi":[0,0,12,6]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":157.99135114368,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":186,"ramUsage":2.4,"server":"harakiri-sushi","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///9bab0fee-2fed-44c3-8a9f-a19a8e487467","moduleSequenceNumber":84}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///9bab0fee-2fed-44c3-8a9f-a19a8e487467","moduleSequenceNumber":84}],"dependents":[],"ramUsage":2.4,"server":"harakiri-sushi","moduleSequenceNumber":84,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home","zer0","nectar-net"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":15,"hackDifficulty":5,"minDifficulty":5,"moneyAvailable":6.012932469020781,"moneyMax":4000000,"numOpenPortsRequired":0,"openPortCount":0,"requiredHackingSkill":40,"serverGrowth":40}},
			"phantasy":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"phantasy","httpPortOpen":true,"ip":"71.2.5.5","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"Phantasy Club","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["phantasy",13],"dataMap":{"phantasy":[0,0,0,13]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":139.13981961983995,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":188,"ramUsage":2.4,"server":"phantasy","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///36cd7356-8e47-44c4-8df2-cb7a6b77642e","moduleSequenceNumber":139}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///36cd7356-8e47-44c4-8df2-cb7a6b77642e","moduleSequenceNumber":139}],"dependents":[],"ramUsage":2.4,"server":"phantasy","moduleSequenceNumber":139,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["zer0"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":20,"hackDifficulty":100,"minDifficulty":7,"moneyAvailable":24000000,"moneyMax":24000000,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":100,"serverGrowth":35}},
			"max-hardware":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"max-hardware","httpPortOpen":true,"ip":"31.8.3.7","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"Max Hardware Store","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["max-hardware",13],"dataMap":{"max-hardware":[0,0,13,0]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":114.10486471488,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":179,"ramUsage":2.4,"server":"max-hardware","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ea83a275-ee21-4c91-a42f-919a21b5a318","moduleSequenceNumber":131}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ea83a275-ee21-4c91-a42f-919a21b5a318","moduleSequenceNumber":131}],"dependents":[],"ramUsage":2.4,"server":"max-hardware","moduleSequenceNumber":131,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["hong-fang-tea","neo-net","silver-helix"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":15,"hackDifficulty":100,"minDifficulty":5,"moneyAvailable":10000000,"moneyMax":10000000,"numOpenPortsRequired":1,"openPortCount":5,"requiredHackingSkill":80,"serverGrowth":30}},
			"omega-net":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"omega-net","httpPortOpen":true,"ip":"57.9.5.2","isConnectedTo":false,"maxRam":32,"messages":["the-new-god.lit"],"organizationName":"Omega Software","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["omega-net",13],"dataMap":{"omega-net":[0,0,26,0]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":418.4753867074559,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":189,"ramUsage":2.4,"server":"omega-net","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4375caf3-b709-4cf3-bb0a-821865c36d30","moduleSequenceNumber":540}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4375caf3-b709-4cf3-bb0a-821865c36d30","moduleSequenceNumber":540}],"dependents":[],"ramUsage":2.4,"server":"omega-net","moduleSequenceNumber":540,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["zer0","comptek","netlink","crush-fitness"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":34,"hackDifficulty":12.65399999999995,"minDifficulty":11,"moneyAvailable":22970862.872879658,"moneyMax":64696937,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":220,"serverGrowth":36}},
			"crush-fitness":{"ctor":"Server","data":{"contracts":[{"ctor":"CodingContract","data":{"tries":0,"fn":"contract-810295.cct","type":"Generate IP Addresses","data":"24722024757","reward":{"name":"","type":3}}}],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"crush-fitness","httpPortOpen":true,"ip":"0.4.1.6","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Crush Fitness","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"crush-fitness","moduleSequenceNumber":549,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["omega-net","summit-uni"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":37,"hackDifficulty":37,"minDifficulty":12,"moneyAvailable":10591380.8,"moneyMax":52956904.00000001,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":238,"serverGrowth":30}},
			"iron-gym":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"iron-gym","httpPortOpen":true,"ip":"13.5.0.7","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"Iron Gym Network","programs":[],"ramUsed":31.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["iron-gym",13],"dataMap":{"iron-gym":[0,13,13,26]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":614.9316206467199,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":198,"ramUsage":2.4,"server":"iron-gym","threads":13,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///54faab21-6124-4e03-aa17-008d4787a8f5","moduleSequenceNumber":142}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///54faab21-6124-4e03-aa17-008d4787a8f5","moduleSequenceNumber":142}],"dependents":[],"ramUsage":2.4,"server":"iron-gym","moduleSequenceNumber":142,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":30,"hackDifficulty":100,"minDifficulty":10,"moneyAvailable":20000000,"moneyMax":20000000,"numOpenPortsRequired":1,"openPortCount":5,"requiredHackingSkill":100,"serverGrowth":20}},
			"millenium-fitness":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"millenium-fitness","httpPortOpen":true,"ip":"80.5.9.8","isConnectedTo":false,"maxRam":64,"messages":[],"organizationName":"Millenium Fitness Network","programs":[],"ramUsed":62.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["millenium-fitness",26],"dataMap":{},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":0,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":185,"ramUsage":2.4,"server":"millenium-fitness","threads":26,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///2b9acb33-f2f9-41f6-9bb3-19ca943fb857","moduleSequenceNumber":57674}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///2b9acb33-f2f9-41f6-9bb3-19ca943fb857","moduleSequenceNumber":57674}],"dependents":[],"ramUsage":2.4,"server":"millenium-fitness","moduleSequenceNumber":57674,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["I.I.I.I","global-pharm"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":48,"hackDifficulty":48,"minDifficulty":16,"moneyAvailable":50000000,"moneyMax":250000000,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":490,"serverGrowth":38}},
			"powerhouse-fitness":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"powerhouse-fitness","httpPortOpen":false,"ip":"69.7.2.9","isConnectedTo":false,"maxRam":32,"messages":[],"organizationName":"Powerhouse Fitness","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["omnitek"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":64,"hackDifficulty":64,"minDifficulty":21,"moneyAvailable":180000000,"moneyMax":900000000,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1097,"serverGrowth":59}},
			"snap-fitness":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"snap-fitness","httpPortOpen":false,"ip":"15.7.5.4","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"Snap Fitness","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["lexo-corp","deltaone"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":42,"hackDifficulty":42,"minDifficulty":14,"moneyAvailable":90000000,"moneyMax":450000000,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":709,"serverGrowth":60}},
			"run4theh111z":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"run4theh111z","httpPortOpen":false,"ip":"20.0.5.9","isConnectedTo":false,"maxRam":256,"messages":["simulated-reality.lit","the-new-god.lit"],"organizationName":"The Runners","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["nova-med"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":0,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":519,"serverGrowth":0}},
			"I.I.I.I":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"I.I.I.I","httpPortOpen":true,"ip":"39.1.8.7","isConnectedTo":false,"maxRam":16,"messages":["democracy-is-dead.lit"],"organizationName":"I.I.I.I","programs":[],"ramUsed":14.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["I.I.I.I",6],"dataMap":{"I.I.I.I":[0,54,0,6]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":72,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":184,"ramUsage":2.4,"server":"I.I.I.I","threads":6,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ad3627a4-fa4b-49f9-a17d-1063d0e76a39","moduleSequenceNumber":534}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ad3627a4-fa4b-49f9-a17d-1063d0e76a39","moduleSequenceNumber":534}],"dependents":[],"ramUsage":2.4,"server":"I.I.I.I","moduleSequenceNumber":534,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["the-hub","lexo-corp","millenium-fitness"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":2.7640000000000016,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":3,"openPortCount":5,"requiredHackingSkill":340,"serverGrowth":0}},
			"avmnite-02h":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"avmnite-02h","httpPortOpen":true,"ip":"75.0.0.9","isConnectedTo":false,"maxRam":128,"messages":["democracy-is-dead.lit"],"organizationName":"NiteSec","programs":[],"ramUsed":127.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["avmnite-02h",53],"dataMap":{"avmnite-02h":[0,1166,0,106]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1192.5,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":181,"ramUsage":2.4,"server":"avmnite-02h","threads":53,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///7a7ae079-3825-4b7f-b3a7-6471f157922a","moduleSequenceNumber":525}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///7a7ae079-3825-4b7f-b3a7-6471f157922a","moduleSequenceNumber":525}],"dependents":[],"ramUsage":2.4,"server":"avmnite-02h","moduleSequenceNumber":525,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["neo-net"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":1.3180000000000003,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":2,"openPortCount":5,"requiredHackingSkill":214,"serverGrowth":0}},
			".":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":".","httpPortOpen":false,"ip":"93.2.4.8","isConnectedTo":false,"maxRam":16,"messages":[],"organizationName":".","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["helios"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":0,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":4,"openPortCount":0,"requiredHackingSkill":540,"serverGrowth":0}},
			"CSEC":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"CSEC","httpPortOpen":true,"ip":"38.7.6.6","isConnectedTo":false,"maxRam":8,"messages":["democracy-is-dead.lit"],"organizationName":"CyberSec","programs":[],"ramUsed":7.2,"runningScripts":[{"ctor":"RunningScript","data":{"args":["CSEC",3],"dataMap":{"CSEC":[0,138,0,6]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":121.5,"onlineMoneyMade":0,"onlineRunningTime":286.0099999999923,"pid":177,"ramUsage":2.4,"server":"CSEC","threads":3,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///31e760e3-0726-4e56-9e3d-6ccb1bc29c2b","moduleSequenceNumber":127}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///31e760e3-0726-4e56-9e3d-6ccb1bc29c2b","moduleSequenceNumber":127}],"dependents":[],"ramUsage":2.4,"server":"CSEC","moduleSequenceNumber":127,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["joesguns"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":true,"baseDifficulty":0,"hackDifficulty":2.8659999999985786,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":1,"openPortCount":5,"requiredHackingSkill":56,"serverGrowth":0}},
			"The-Cave":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"The-Cave","httpPortOpen":false,"ip":"30.5.9.5","isConnectedTo":false,"maxRam":0,"messages":["alpha-omega.lit"],"organizationName":"Helios","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":["b-and-a"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":0,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":925,"serverGrowth":0}},
			"w0r1d_d43m0n":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":false,"hostname":"w0r1d_d43m0n","httpPortOpen":false,"ip":"56.1.1.8","isConnectedTo":false,"maxRam":0,"messages":[],"organizationName":"w0r1d_d43m0n","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[],"serversOnNetwork":[],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":0,"hackDifficulty":0,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":6000,"serverGrowth":0}},
			"darkweb":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":true,"hasAdminRights":true,"hostname":"darkweb","httpPortOpen":true,"ip":"81.8.8.8","isConnectedTo":false,"maxRam":1,"messages":[],"organizationName":"","programs":[],"ramUsed":0,"runningScripts":[],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":"","dependencies":[],"dependents":[],"ramUsage":2.4,"server":"darkweb","moduleSequenceNumber":144,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":true,"sqlPortOpen":true,"sshPortOpen":true,"textFiles":[],"purchasedByPlayer":false,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":5,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB","httpPortOpen":false,"ip":"0.3.0.5","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["n00dles",436906],"dataMap":{"n00dles":[64890000,811334442,405011862,810897536]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":5830932753.697872,"onlineMoneyMade":64890000,"onlineRunningTime":43162.0099999329,"pid":74,"ramUsage":2.4,"server":"j4ys3rv-1048576GB","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///c626a75d-6e84-4dd1-b024-fe7a97c68fcf","moduleSequenceNumber":241}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///c626a75d-6e84-4dd1-b024-fe7a97c68fcf","moduleSequenceNumber":241}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB","moduleSequenceNumber":241,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-0":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-0","httpPortOpen":false,"ip":"97.4.1.0","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["foodnstuff",436906],"dataMap":{"foodnstuff":[2766000000,604677904,604240998,604677904]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":12423670581.419989,"onlineMoneyMade":2766000000,"onlineRunningTime":43162.0099999329,"pid":75,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-0","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e3fe7346-81df-48bc-9f27-94b26cb83a4c","moduleSequenceNumber":244}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///e3fe7346-81df-48bc-9f27-94b26cb83a4c","moduleSequenceNumber":244}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-0","moduleSequenceNumber":244,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-1":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-1","httpPortOpen":false,"ip":"46.8.3.8","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["sigma-cosmetics",436906],"dataMap":{"sigma-cosmetics":[1752600000,333359278,333359278,333359278]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":6849819699.520571,"onlineMoneyMade":1752600000,"onlineRunningTime":43162.0099999329,"pid":76,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-1","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///909c32db-b094-4002-a249-75c0478ed78e","moduleSequenceNumber":247}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///909c32db-b094-4002-a249-75c0478ed78e","moduleSequenceNumber":247}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-1","moduleSequenceNumber":247,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-2":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-2","httpPortOpen":false,"ip":"13.6.5.3","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["joesguns",436906],"dataMap":{"joesguns":[1182500000,206656538,206656538,228501838]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":5633400302.612412,"onlineMoneyMade":1182500000,"onlineRunningTime":43162.0099999329,"pid":77,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-2","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5d6d96dd-e420-4614-a55c-4118e657f621","moduleSequenceNumber":250}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///5d6d96dd-e420-4614-a55c-4118e657f621","moduleSequenceNumber":250}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-2","moduleSequenceNumber":250,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-3":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-3","httpPortOpen":false,"ip":"40.4.3.4","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["hong-fang-tea",436906],"dataMap":{"hong-fang-tea":[528000000,77769268,78206174,155975442]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2732333366.6517644,"onlineMoneyMade":528000000,"onlineRunningTime":43162.0099999329,"pid":78,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-3","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///32462b3f-e5a8-45d1-aea0-5b2c811cff11","moduleSequenceNumber":253}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///32462b3f-e5a8-45d1-aea0-5b2c811cff11","moduleSequenceNumber":253}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-3","moduleSequenceNumber":253,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-4":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-4","httpPortOpen":false,"ip":"45.6.7.5","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["max-hardware",436906],"dataMap":{"max-hardware":[750000000,32767950,32767950,65535900]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1150456154.379675,"onlineMoneyMade":750000000,"onlineRunningTime":43162.0099999329,"pid":79,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-4","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///8f106a91-aa1a-4bb3-989a-ed0f9b390332","moduleSequenceNumber":256}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///8f106a91-aa1a-4bb3-989a-ed0f9b390332","moduleSequenceNumber":256}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-4","moduleSequenceNumber":256,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-5":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-5","httpPortOpen":false,"ip":"7.8.5.2","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["neo-net",436906],"dataMap":{"neo-net":[550000000,48059660,47622754,95682414]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2416713652.9905553,"onlineMoneyMade":550000000,"onlineRunningTime":43162.0099999329,"pid":80,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-5","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///3daee8aa-abbf-4acb-8c16-096df634c79c","moduleSequenceNumber":259}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///3daee8aa-abbf-4acb-8c16-096df634c79c","moduleSequenceNumber":259}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-5","moduleSequenceNumber":259,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-6":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-6","httpPortOpen":false,"ip":"51.8.7.6","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["harakiri-sushi",436906],"dataMap":{"harakiri-sushi":[548000000,60729934,61166840,121896774]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2134096166.3743198,"onlineMoneyMade":548000000,"onlineRunningTime":43162.0099999329,"pid":81,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-6","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///35190af8-1976-4323-b03e-ec6ba0bd856d","moduleSequenceNumber":262}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///35190af8-1976-4323-b03e-ec6ba0bd856d","moduleSequenceNumber":262}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-6","moduleSequenceNumber":262,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-7":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-7","httpPortOpen":false,"ip":"8.9.8.9","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["zer0",436906],"dataMap":{"zer0":[570000000,33204856,32767950,66409712]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1671836157.2058012,"onlineMoneyMade":570000000,"onlineRunningTime":43162.0099999329,"pid":82,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-7","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ff836077-9947-4452-9800-8f2eccf6b808","moduleSequenceNumber":265}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///ff836077-9947-4452-9800-8f2eccf6b808","moduleSequenceNumber":265}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-7","moduleSequenceNumber":265,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-8":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-8","httpPortOpen":false,"ip":"11.1.5.8","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["phantasy",436906],"dataMap":{"phantasy":[1416000000,25777454,25777454,51554908]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1103590861.4826782,"onlineMoneyMade":1416000000,"onlineRunningTime":43162.0099999329,"pid":83,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-8","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///85d36862-be9d-4150-9352-7eeb1d7dae58","moduleSequenceNumber":268}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///85d36862-be9d-4150-9352-7eeb1d7dae58","moduleSequenceNumber":268}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-8","moduleSequenceNumber":268,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-9":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-9","httpPortOpen":false,"ip":"3.8.7.6","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["nectar-net",436906],"dataMap":{"nectar-net":[660000000,105731252,105731252,211462504]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":4519578676.368684,"onlineMoneyMade":660000000,"onlineRunningTime":43162.0099999329,"pid":84,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-9","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1e1582c6-e986-4d09-a96a-a0c3d54ce932","moduleSequenceNumber":271}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1e1582c6-e986-4d09-a96a-a0c3d54ce932","moduleSequenceNumber":271}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-9","moduleSequenceNumber":271,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-10":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-10","httpPortOpen":false,"ip":"73.0.2.0","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["iron-gym",436906],"dataMap":{"iron-gym":[1120000000,24466736,24466736,48933472]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1424413691.8736503,"onlineMoneyMade":1120000000,"onlineRunningTime":43162.0099999329,"pid":85,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-10","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1aff23e8-c6c4-4347-a4ef-6975a45e4416","moduleSequenceNumber":274}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1aff23e8-c6c4-4347-a4ef-6975a45e4416","moduleSequenceNumber":274}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-10","moduleSequenceNumber":274,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-11":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-11","httpPortOpen":false,"ip":"93.4.8.6","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["n00dles",436906],"dataMap":{"n00dles":[65170000,809586818,406759486,809149912]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":5833890741.144259,"onlineMoneyMade":65170000,"onlineRunningTime":43162.0099999329,"pid":86,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-11","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///be1648f6-fce6-4888-af4d-dc504e8a7356","moduleSequenceNumber":277}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///be1648f6-fce6-4888-af4d-dc504e8a7356","moduleSequenceNumber":277}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-11","moduleSequenceNumber":277,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-12":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-12","httpPortOpen":false,"ip":"51.4.5.8","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["foodnstuff",436906],"dataMap":{"foodnstuff":[2766000000,604240998,604677904,604240998]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":12422922212.612001,"onlineMoneyMade":2766000000,"onlineRunningTime":43162.0099999329,"pid":87,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-12","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///df340975-0b6a-4031-868c-f47148fd2457","moduleSequenceNumber":280}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///df340975-0b6a-4031-868c-f47148fd2457","moduleSequenceNumber":280}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-12","moduleSequenceNumber":280,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-13":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-13","httpPortOpen":false,"ip":"36.4.7.3","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["sigma-cosmetics",436906],"dataMap":{"sigma-cosmetics":[1752600000,332922372,333359278,333359278]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":6849071330.712583,"onlineMoneyMade":1752600000,"onlineRunningTime":43162.0099999329,"pid":88,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-13","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///99cc7519-7f8b-4e07-ad26-8c1ee419e18e","moduleSequenceNumber":283}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///99cc7519-7f8b-4e07-ad26-8c1ee419e18e","moduleSequenceNumber":283}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-13","moduleSequenceNumber":283,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-14":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-14","httpPortOpen":false,"ip":"8.7.9.3","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["joesguns",436906],"dataMap":{"joesguns":[1172500000,206219632,206656538,228501838]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":5620937027.606634,"onlineMoneyMade":1172500000,"onlineRunningTime":43162.0099999329,"pid":89,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-14","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///fa89e2ad-acbc-40ef-b27f-e523ccd8377d","moduleSequenceNumber":286}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///fa89e2ad-acbc-40ef-b27f-e523ccd8377d","moduleSequenceNumber":286}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-14","moduleSequenceNumber":286,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-15":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-15","httpPortOpen":false,"ip":"27.7.2.6","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["hong-fang-tea",436906],"dataMap":{"hong-fang-tea":[540000000,78643080,78206174,156849254]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2753425062.8153925,"onlineMoneyMade":540000000,"onlineRunningTime":43162.0099999329,"pid":90,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-15","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///f6556d91-6c53-4e7f-9e42-7cf7ec1424b6","moduleSequenceNumber":289}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///f6556d91-6c53-4e7f-9e42-7cf7ec1424b6","moduleSequenceNumber":289}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-15","moduleSequenceNumber":289,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-16":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-16","httpPortOpen":false,"ip":"7.6.5.4","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["max-hardware",436906],"dataMap":{"max-hardware":[720000000,31894138,32767950,64662088]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1132240598.6019962,"onlineMoneyMade":720000000,"onlineRunningTime":43162.0099999329,"pid":91,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-16","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///07697760-13b4-426a-8716-37e3c15220b8","moduleSequenceNumber":292}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///07697760-13b4-426a-8716-37e3c15220b8","moduleSequenceNumber":292}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-16","moduleSequenceNumber":292,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-17":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-17","httpPortOpen":false,"ip":"93.3.6.8","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["neo-net",436906],"dataMap":{"neo-net":[530000000,47185848,48059660,95245508]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2397402014.210951,"onlineMoneyMade":530000000,"onlineRunningTime":43162.0099999329,"pid":92,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-17","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///64cfa76d-2aee-4f48-8c23-0cb72fdeba27","moduleSequenceNumber":295}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///64cfa76d-2aee-4f48-8c23-0cb72fdeba27","moduleSequenceNumber":295}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-17","moduleSequenceNumber":295,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-18":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-18","httpPortOpen":false,"ip":"85.2.5.7","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["harakiri-sushi",436906],"dataMap":{"harakiri-sushi":[564000000,61603746,60729934,122770586]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":2151353008.6900153,"onlineMoneyMade":564000000,"onlineRunningTime":43162.0099999329,"pid":93,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-18","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///58e76573-945a-4bce-884b-ca408e1b35c2","moduleSequenceNumber":298}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///58e76573-945a-4bce-884b-ca408e1b35c2","moduleSequenceNumber":298}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-18","moduleSequenceNumber":298,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-19":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-19","httpPortOpen":false,"ip":"36.5.5.3","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["zer0",436906],"dataMap":{"zer0":[540000000,32331044,33204856,65535900]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1647006907.346309,"onlineMoneyMade":540000000,"onlineRunningTime":43162.0099999329,"pid":94,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-19","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1b401136-b805-4a9a-aae2-ef7778264ee2","moduleSequenceNumber":301}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///1b401136-b805-4a9a-aae2-ef7778264ee2","moduleSequenceNumber":301}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-19","moduleSequenceNumber":301,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-20":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-20","httpPortOpen":false,"ip":"67.0.5.2","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["phantasy",436906],"dataMap":{"phantasy":[1344000000,24903642,25777454,50681096]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1081378757.2791076,"onlineMoneyMade":1344000000,"onlineRunningTime":43162.0099999329,"pid":95,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-20","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///9db0d899-5379-4520-bf8a-91674b1b2b00","moduleSequenceNumber":304}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///9db0d899-5379-4520-bf8a-91674b1b2b00","moduleSequenceNumber":304}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-20","moduleSequenceNumber":304,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-21":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-21","httpPortOpen":false,"ip":"98.6.9.6","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["nectar-net",436906],"dataMap":{"nectar-net":[668250000,106168158,105731252,211899410]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":4535945489.992369,"onlineMoneyMade":668250000,"onlineRunningTime":43162.0099999329,"pid":96,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-21","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///3a84d34e-070e-4630-93a3-80676ce1c906","moduleSequenceNumber":307}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///3a84d34e-070e-4630-93a3-80676ce1c906","moduleSequenceNumber":307}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-21","moduleSequenceNumber":307,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-22":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-22","httpPortOpen":false,"ip":"43.5.6.2","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["iron-gym",436906],"dataMap":{"iron-gym":[1040000000,23592924,24466736,48059660]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":1389439248.546396,"onlineMoneyMade":1040000000,"onlineRunningTime":43162.0099999329,"pid":97,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-22","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4ecce7bd-a669-4b6c-bcd9-c9ef29fc9bd0","moduleSequenceNumber":310}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///4ecce7bd-a669-4b6c-bcd9-c9ef29fc9bd0","moduleSequenceNumber":310}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-22","moduleSequenceNumber":310,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}},
			"j4ys3rv-1048576GB-23":{"ctor":"Server","data":{"contracts":[],"cpuCores":1,"ftpPortOpen":false,"hasAdminRights":true,"hostname":"j4ys3rv-1048576GB-23","httpPortOpen":false,"ip":"99.7.6.0","isConnectedTo":false,"maxRam":1048576,"messages":[],"organizationName":"","programs":[],"ramUsed":1048574.4,"runningScripts":[{"ctor":"RunningScript","data":{"args":["n00dles",436906],"dataMap":{"n00dles":[64820000,812208254,404138050,811771348]},"filename":"/scripts/hack.js","logs":[],"logUpd":true,"offlineExpGained":0,"offlineMoneyMade":0,"offlineRunningTime":0.01,"onlineExpGained":5830563005.267072,"onlineMoneyMade":64820000,"onlineRunningTime":43162.0099999329,"pid":98,"ramUsage":2.4,"server":"j4ys3rv-1048576GB-23","threads":436906,"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///0bb427e8-f653-4809-bce9-69a522c1c773","moduleSequenceNumber":312}]}}],"scripts":[{"ctor":"Script","data":{"code":"/* A simple lightweight script that is deployed\\n * to remote and local servers to repeatedly hack\\n * a particular server.\\n * The smaller this is, the more threads can be deployed.\\n * args[0] - server name\\n * args[1] - threads to attack with\\n */\\nexport async function main(ns, args) {\\n    await hackServer(ns, ns.args[0], ns.args[1]);\\n}\\n\\nasync function hackServer(ns, server, threads) {\\n    ns.disableLog('getServerSecurityLevel');\\n    let serverSecurityThreshold = ns.getServerMinSecurityLevel(server) + 2;\\n    let serverMoneyThreshold = ns.getServerMaxMoney(server) * 0.95;\\n    let opts = { threads: threads, stock: true };\\n    while (true) {\\n        if (ns.getServerSecurityLevel(server) > serverSecurityThreshold) {\\n            await ns.weaken(server, opts);\\n        } else if (ns.getServerMoneyAvailable(server) < serverMoneyThreshold) {\\n            await ns.grow(server, opts);\\n        } else {\\n            await ns.hack(server, opts);\\n        }\\n    }\\n}\\n\\nexport function autocomplete(data, args) {\\n    return [...data.servers];\\n}","filename":"/scripts/hack.js","url":"","module":{},"dependencies":[{"filename":"/scripts/hack.js","url":"blob:file:///0bb427e8-f653-4809-bce9-69a522c1c773","moduleSequenceNumber":312}],"dependents":[],"ramUsage":2.4,"server":"j4ys3rv-1048576GB-23","moduleSequenceNumber":312,"ramUsageEntries":[{"type":"misc","name":"baseCost","cost":1.6},{"type":"fn","name":"getServerMinSecurityLevel","cost":0.1},{"type":"fn","name":"getServerMaxMoney","cost":0.1},{"type":"fn","name":"getServerSecurityLevel","cost":0.1},{"type":"fn","name":"weaken","cost":0.15},{"type":"fn","name":"getServerMoneyAvailable","cost":0.1},{"type":"fn","name":"grow","cost":0.15},{"type":"fn","name":"hack","cost":0.1}]}}],"serversOnNetwork":["home"],"smtpPortOpen":false,"sqlPortOpen":false,"sshPortOpen":false,"textFiles":[],"purchasedByPlayer":true,"backdoorInstalled":false,"baseDifficulty":1,"hackDifficulty":1,"minDifficulty":1,"moneyAvailable":0,"moneyMax":0,"numOpenPortsRequired":5,"openPortCount":0,"requiredHackingSkill":1,"serverGrowth":1}}
		},
		"CompaniesSave":{
			"ECorp":{
				"ctor":"Company",
				"data":{
					"name":"ECorp",
					"info":"",
					"companyPositions":{
						"Software Engineering Intern":true,
						"Junior Software Engineer":true,
						"Senior Software Engineer":true,
						"Lead Software Developer":true,
						"Head of Software":true,
						"Head of Engineering":true,
						"Vice President of Technology":true,
						"Chief Technology Officer":true,
						"IT Intern":true,
						"IT Analyst":true,
						"IT Manager":true,
						"Systems Administrator":true,
						"Network Engineer":true,
						"Network Administrator":true,
						"Security Engineer":true,
						"Business Intern":true,
						"Business Analyst":true,
						"Business Manager":true,
						"Operations Manager":true,
						"Chief Financial Officer":true,
						"Chief Executive Officer":true,
						"Police Officer":true,
						"Police Chief":true,
						"Security Guard":true,
						"Security Officer":true,
						"Security Supervisor":true,
						"Head of Security":true
					},
					"expMultiplier":3,
					"salaryMultiplier":3,
					"jobStatReqOffset":249,
					"isPlayerEmployed":false,
					"playerReputation":1,
					"favor":0,
					"isMegacorp":false
				}
			},
			"MegaCorp":{
				"ctor":"Company",
				"data":{
					"name":"MegaCorp",
					"info":"",
					"companyPositions":{
						"Software Engineering Intern":true,
						"Junior Software Engineer":true,
						"Senior Software Engineer":true,
						"Lead Software Developer":true,
						"Head of Software":true,
						"Head of Engineering":true,
						"Vice President of Technology":true,
						"Chief Technology Officer":true,
						"IT Intern":true,
						"IT Analyst":true,
						"IT Manager":true,
						"Systems Administrator":true,
						"Network Engineer":true,
						"Network Administrator":true,
						"Security Engineer":true,
						"Business Intern":true,
						"Business Analyst":true,
						"Business Manager":true,
						"Operations Manager":true,
						"Chief Financial Officer":true,
						"Chief Executive Officer":true,
						"Police Officer":true,
						"Police Chief":true,
						"Security Guard":true,
						"Security Officer":true,
						"Security Supervisor":true,
						"Head of Security":true
					},
					"expMultiplier":3,
					"salaryMultiplier":3,
					"jobStatReqOffset":249,
					"isPlayerEmployed":false,
					"playerReputation":1,
					"favor":0,
					"isMegacorp":false
				}
			},
			"Bachman & Associates":{"ctor":"Company","data":{"name":"Bachman & Associates","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.6,"salaryMultiplier":2.6,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Blade Industries":{"ctor":"Company","data":{"name":"Blade Industries","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.75,"salaryMultiplier":2.75,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"NWO":{"ctor":"Company","data":{"name":"NWO","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.75,"salaryMultiplier":2.75,"jobStatReqOffset":249,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Clarke Incorporated":{"ctor":"Company","data":{"name":"Clarke Incorporated","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.25,"salaryMultiplier":2.25,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"OmniTek Incorporated":{"ctor":"Company","data":{"name":"OmniTek Incorporated","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.25,"salaryMultiplier":2.25,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Four Sigma":{"ctor":"Company","data":{"name":"Four Sigma","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.5,"salaryMultiplier":2.5,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"KuaiGong International":{"ctor":"Company","data":{"name":"KuaiGong International","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":2.2,"salaryMultiplier":2.2,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Fulcrum Technologies":{"ctor":"Company","data":{"name":"Fulcrum Technologies","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true},"expMultiplier":2,"salaryMultiplier":2,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Storm Technologies":{"ctor":"Company","data":{"name":"Storm Technologies","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Software Consultant":true,"Senior Software Consultant":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true},"expMultiplier":1.8,"salaryMultiplier":1.8,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"DefComm":{"ctor":"Company","data":{"name":"DefComm","info":"","companyPositions":{"Chief Executive Officer":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.75,"salaryMultiplier":1.75,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Helios Labs":{"ctor":"Company","data":{"name":"Helios Labs","info":"","companyPositions":{"Chief Executive Officer":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.8,"salaryMultiplier":1.8,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"VitaLife":{"ctor":"Company","data":{"name":"VitaLife","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.8,"salaryMultiplier":1.8,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Icarus Microsystems":{"ctor":"Company","data":{"name":"Icarus Microsystems","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.9,"salaryMultiplier":1.9,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Universal Energy":{"ctor":"Company","data":{"name":"Universal Energy","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":2,"salaryMultiplier":2,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Galactic Cybersystems":{"ctor":"Company","data":{"name":"Galactic Cybersystems","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.9,"salaryMultiplier":1.9,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"AeroCorp":{"ctor":"Company","data":{"name":"AeroCorp","info":"","companyPositions":{"Chief Executive Officer":true,"Operations Manager":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.7,"salaryMultiplier":1.7,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Omnia Cybersystems":{"ctor":"Company","data":{"name":"Omnia Cybersystems","info":"","companyPositions":{"Chief Executive Officer":true,"Operations Manager":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.7,"salaryMultiplier":1.7,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Solaris Space Systems":{"ctor":"Company","data":{"name":"Solaris Space Systems","info":"","companyPositions":{"Chief Executive Officer":true,"Operations Manager":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.7,"salaryMultiplier":1.7,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"DeltaOne":{"ctor":"Company","data":{"name":"DeltaOne","info":"","companyPositions":{"Chief Executive Officer":true,"Operations Manager":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.6,"salaryMultiplier":1.6,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Global Pharmaceuticals":{"ctor":"Company","data":{"name":"Global Pharmaceuticals","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.8,"salaryMultiplier":1.8,"jobStatReqOffset":224,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Nova Medical":{"ctor":"Company","data":{"name":"Nova Medical","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Software Consultant":true,"Senior Software Consultant":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.75,"salaryMultiplier":1.75,"jobStatReqOffset":199,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Central Intelligence Agency":{"ctor":"Company","data":{"name":"Central Intelligence Agency","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true,"Field Agent":true,"Secret Agent":true,"Special Operative":true},"expMultiplier":2,"salaryMultiplier":2,"jobStatReqOffset":149,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"National Security Agency":{"ctor":"Company","data":{"name":"National Security Agency","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true,"Field Agent":true,"Secret Agent":true,"Special Operative":true},"expMultiplier":2,"salaryMultiplier":2,"jobStatReqOffset":149,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Watchdog Security":{"ctor":"Company","data":{"name":"Watchdog Security","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Network Engineer":true,"Network Administrator":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true,"Field Agent":true,"Secret Agent":true,"Special Operative":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.5,"salaryMultiplier":1.5,"jobStatReqOffset":124,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"LexoCorp":{"ctor":"Company","data":{"name":"LexoCorp","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Software Consultant":true,"Senior Software Consultant":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Chief Financial Officer":true,"Chief Executive Officer":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.4,"salaryMultiplier":1.4,"jobStatReqOffset":99,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Rho Construction":{"ctor":"Company","data":{"name":"Rho Construction","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true},"expMultiplier":1.3,"salaryMultiplier":1.3,"jobStatReqOffset":49,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Alpha Enterprises":{"ctor":"Company","data":{"name":"Alpha Enterprises","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Business Intern":true,"Business Analyst":true,"Business Manager":true,"Operations Manager":true,"Software Consultant":true,"Senior Software Consultant":true},"expMultiplier":1.5,"salaryMultiplier":1.5,"jobStatReqOffset":99,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Aevum Police Headquarters":{"ctor":"Company","data":{"name":"Aevum Police Headquarters","info":"","companyPositions":{"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true,"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true},"expMultiplier":1.3,"salaryMultiplier":1.3,"jobStatReqOffset":99,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"SysCore Securities":{"ctor":"Company","data":{"name":"SysCore Securities","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true},"expMultiplier":1.3,"salaryMultiplier":1.3,"jobStatReqOffset":124,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"CompuTek":{"ctor":"Company","data":{"name":"CompuTek","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true},"expMultiplier":1.2,"salaryMultiplier":1.2,"jobStatReqOffset":74,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"NetLink Technologies":{"ctor":"Company","data":{"name":"NetLink Technologies","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true},"expMultiplier":1.2,"salaryMultiplier":1.2,"jobStatReqOffset":99,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Carmichael Security":{"ctor":"Company","data":{"name":"Carmichael Security","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true,"Network Engineer":true,"Network Administrator":true,"Security Engineer":true,"Software Consultant":true,"Senior Software Consultant":true,"Field Agent":true,"Secret Agent":true,"Special Operative":true,"Police Officer":true,"Police Chief":true,"Security Guard":true,"Security Officer":true,"Security Supervisor":true,"Head of Security":true},"expMultiplier":1.2,"salaryMultiplier":1.2,"jobStatReqOffset":74,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"FoodNStuff":{"ctor":"Company","data":{"name":"FoodNStuff","info":"","companyPositions":{"Employee":true,"Part-time Employee":true},"expMultiplier":1,"salaryMultiplier":1,"jobStatReqOffset":0,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Joe's Guns":{"ctor":"Company","data":{"name":"Joe's Guns","info":"","companyPositions":{"Employee":true,"Part-time Employee":true},"expMultiplier":1,"salaryMultiplier":1,"jobStatReqOffset":0,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Omega Software":{"ctor":"Company","data":{"name":"Omega Software","info":"","companyPositions":{"Software Engineering Intern":true,"Junior Software Engineer":true,"Senior Software Engineer":true,"Lead Software Developer":true,"Head of Software":true,"Head of Engineering":true,"Vice President of Technology":true,"Chief Technology Officer":true,"Software Consultant":true,"Senior Software Consultant":true,"IT Intern":true,"IT Analyst":true,"IT Manager":true,"Systems Administrator":true},"expMultiplier":1.1,"salaryMultiplier":1.1,"jobStatReqOffset":49,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}},
			"Noodle Bar":{"ctor":"Company","data":{"name":"Noodle Bar","info":"","companyPositions":{"Waiter":true,"Part-time Waiter":true},"expMultiplier":1,"salaryMultiplier":1,"jobStatReqOffset":0,"isPlayerEmployed":false,"playerReputation":1,"favor":0,"isMegacorp":false}
			}
		},
		"FactionsSave":{
			"Illuminati":{
				"ctor":"Faction",
				"data":{
					"alreadyInvited":false,
					"augmentations":["Synthetic Heart","Synfibril Muscle","NEMEAN Subdermal Weave","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","NeuroFlux Governor","QLink"],
					"favor":0,
					"isBanned":false,
					"isMember":false,
					"name":"Illuminati",
					"playerReputation":0
				}
			},
			"Daedalus":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Synthetic Heart","Synfibril Muscle","NEMEAN Subdermal Weave","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","NeuroFlux Governor","The Red Pill"],"favor":0,"isBanned":false,"isMember":false,"name":"Daedalus","playerReputation":0}},
			"The Covenant":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting III","Synthetic Heart","Synfibril Muscle","Combat Rib III","NEMEAN Subdermal Weave","Graphene Bone Lacings","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","NeuroFlux Governor","SPTN-97 Gene Modification"],"favor":0,"isBanned":false,"isMember":false,"name":"The Covenant","playerReputation":0}},
			"ECorp":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Graphene Bionic Spine Upgrade","Graphene Bionic Legs Upgrade","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","PC Direct-Neural Interface","PC Direct-Neural Interface Optimization Submodule","NeuroFlux Governor","ECorp HVMind Implant"],"favor":0,"isBanned":false,"isMember":false,"name":"ECorp","playerReputation":0}},
			"MegaCorp":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Graphene Bionic Legs Upgrade","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","ADR-V1 Pheromone Gene","NeuroFlux Governor","CordiARC Fusion Reactor"],"favor":0,"isBanned":false,"isMember":false,"name":"MegaCorp","playerReputation":0}},
			"Bachman & Associates":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Enhanced Social Interaction Implant","Neuralstimulator","Nuoptimal Nootropic Injector Implant","Speech Enhancement","FocusWire","ADR-V2 Pheromone Gene","NeuroFlux Governor","SmartJaw"],"favor":0,"isBanned":false,"isMember":false,"name":"Bachman & Associates","playerReputation":0}},
			"Blade Industries":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting I","Augmented Targeting II","Augmented Targeting III","Synfibril Muscle","Combat Rib I","Combat Rib II","Combat Rib III","Nanofiber Weave","Bionic Spine","Bionic Legs","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","PC Direct-Neural Interface","PC Direct-Neural Interface Optimization Submodule","NeuroFlux Governor","HyperSight Corneal Implant","Neotra"],"favor":0,"isBanned":false,"isMember":false,"name":"Blade Industries","playerReputation":0}},
			"NWO":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Synthetic Heart","Synfibril Muscle","Enhanced Social Interaction Implant","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","ADR-V1 Pheromone Gene","NeuroFlux Governor","Neurotrainer III","Power Recirculation Core","Xanipher","Hydroflame Left Arm"],"favor":0,"isBanned":false,"isMember":false,"name":"NWO","playerReputation":0}},
			"Clarke Incorporated":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Enhanced Social Interaction Implant","Neuralstimulator","Neuronal Densification","Nuoptimal Nootropic Injector Implant","Speech Enhancement","FocusWire","ADR-V2 Pheromone Gene","NeuroFlux Governor","nextSENS Gene Modification"],"favor":0,"isBanned":false,"isMember":false,"name":"Clarke Incorporated","playerReputation":0}},
			"OmniTek Incorporated":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting I","Augmented Targeting II","Augmented Targeting III","Combat Rib I","Combat Rib II","Combat Rib III","Nanofiber Weave","Bionic Spine","Bionic Legs","Enhanced Social Interaction Implant","Embedded Netburner Module Core V2 Upgrade","PC Direct-Neural Interface","NeuroFlux Governor","OmniTek InfoLoad"],"favor":0,"isBanned":false,"isMember":false,"name":"OmniTek Incorporated","playerReputation":0}},
			"Four Sigma":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Enhanced Social Interaction Implant","Neuralstimulator","Nuoptimal Nootropic Injector Implant","Speech Enhancement","FocusWire","PC Direct-Neural Interface","ADR-V1 Pheromone Gene","ADR-V2 Pheromone Gene","NeuroFlux Governor","Neurotrainer III"],"favor":0,"isBanned":false,"isMember":false,"name":"Four Sigma","playerReputation":0}},
			"KuaiGong International":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting I","Augmented Targeting II","Augmented Targeting III","Synthetic Heart","Synfibril Muscle","Combat Rib I","Combat Rib II","Combat Rib III","Bionic Spine","Bionic Legs","Embedded Netburner Module Core V2 Upgrade","Speech Enhancement","FocusWire","NeuroFlux Governor","HyperSight Corneal Implant","Photosynthetic Cells"],"favor":0,"isBanned":false,"isMember":false,"name":"KuaiGong International","playerReputation":0}},
			"Fulcrum Secret Technologies":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Synthetic Heart","Synfibril Muscle","Nanofiber Weave","NEMEAN Subdermal Weave","Graphene Bone Lacings","Graphene Bionic Spine Upgrade","Graphene Bionic Legs Upgrade","Artificial Bio-neural Network Implant","Enhanced Myelin Sheathing","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","Embedded Netburner Module Core V3 Upgrade","Embedded Netburner Module Analyze Engine","Embedded Netburner Module Direct Memory Access Upgrade","PC Direct-Neural Interface Optimization Submodule","PC Direct-Neural Interface NeuroNet Injector","NeuroFlux Governor"],"favor":0,"isBanned":false,"isMember":false,"name":"Fulcrum Secret Technologies","playerReputation":0}},
			"BitRunners":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Artificial Bio-neural Network Implant","Enhanced Myelin Sheathing","DataJack","Embedded Netburner Module","Embedded Netburner Module Core Implant","Embedded Netburner Module Core V2 Upgrade","Neural Accelerator","Cranial Signal Processors - Gen III","Cranial Signal Processors - Gen IV","Cranial Signal Processors - Gen V","NeuroFlux Governor","Neurotrainer II","BitRunners Neurolink"],"favor":0,"isBanned":false,"isMember":false,"name":"BitRunners","playerReputation":0}},
			"The Black Hand":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Artificial Synaptic Potentiation","Enhanced Myelin Sheathing","DataJack","Embedded Netburner Module","Embedded Netburner Module Core Implant","Neuralstimulator","Cranial Signal Processors - Gen III","Cranial Signal Processors - Gen IV","NeuroFlux Governor","The Black Hand"],"favor":0,"isBanned":false,"isMember":false,"name":"The Black Hand","playerReputation":0}},
			"NiteSec":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["BitWire","Artificial Synaptic Potentiation","Neural-Retention Enhancement","DataJack","Embedded Netburner Module","Cranial Signal Processors - Gen II","Cranial Signal Processors - Gen III","NeuroFlux Governor","Neurotrainer II","CRTX42-AA Gene Modification"],"favor":0,"isBanned":false,"isMember":false,"name":"NiteSec","playerReputation":0}},
			"Aevum":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Wired Reflexes","Speech Processor Implant","Synaptic Enhancement Implant","Neuralstimulator","NeuroFlux Governor","Neurotrainer I","PCMatrix"],"favor":0,"isBanned":false,"isMember":false,"name":"Aevum","playerReputation":0}},
			"Chongqing":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Speech Processor Implant","DataJack","Neuralstimulator","Nuoptimal Nootropic Injector Implant","NeuroFlux Governor","Neuregen Gene Modification"],"favor":0,"isBanned":true,"isMember":false,"name":"Chongqing","playerReputation":0}},
			"Ishima":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting I","Combat Rib I","Wired Reflexes","Speech Processor Implant","Neuralstimulator","NeuroFlux Governor","INFRARET Enhancement"],"favor":0,"isBanned":true,"isMember":false,"name":"Ishima","playerReputation":0}},
			"New Tokyo":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Speech Processor Implant","DataJack","Neuralstimulator","Nuoptimal Nootropic Injector Implant","NeuroFlux Governor","NutriGen Implant"],"favor":0,"isBanned":true,"isMember":false,"name":"New Tokyo","playerReputation":0}},
			"Sector-12":{"ctor":"Faction","data":{"alreadyInvited":true,"augmentations":["Augmented Targeting I","Augmented Targeting II","Wired Reflexes","Speech Processor Implant","Neuralstimulator","NeuroFlux Governor","CashRoot Starter Kit"],"favor":0,"isBanned":false,"isMember":true,"name":"Sector-12","playerReputation":2324.452768130883}},
			"Volhaven":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Combat Rib I","Combat Rib II","Wired Reflexes","Speech Processor Implant","Neuralstimulator","Nuoptimal Nootropic Injector Implant","NeuroFlux Governor","DermaForce Particle Barrier"],"favor":0,"isBanned":true,"isMember":false,"name":"Volhaven","playerReputation":0}},
			"Speakers for the Dead":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Unstable Circadian Modulator","Synthetic Heart","Synfibril Muscle","Nanofiber Weave","Wired Reflexes","Bionic Spine","Bionic Legs","Speech Enhancement","The Shadow's Simulacrum","NeuroFlux Governor","Graphene BrachiBlades Upgrade"],"favor":0,"isBanned":false,"isMember":false,"name":"Speakers for the Dead","playerReputation":0}},
			"The Dark Army":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["HemoRecirculator","Augmented Targeting I","Augmented Targeting II","Augmented Targeting III","Combat Rib I","Combat Rib II","Combat Rib III","Nanofiber Weave","Wired Reflexes","The Shadow's Simulacrum","NeuroFlux Governor","Power Recirculation Core","Graphene Bionic Arms Upgrade"],"favor":0,"isBanned":false,"isMember":false,"name":"The Dark Army","playerReputation":0}},
			"The Syndicate":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["HemoRecirculator","Augmented Targeting I","Augmented Targeting II","Augmented Targeting III","Combat Rib I","Combat Rib II","Combat Rib III","Nanofiber Weave","NEMEAN Subdermal Weave","Wired Reflexes","Bionic Spine","Bionic Legs","ADR-V1 Pheromone Gene","The Shadow's Simulacrum","NeuroFlux Governor","Power Recirculation Core","BrachiBlades"],"favor":0,"isBanned":false,"isMember":false,"name":"The Syndicate","playerReputation":0}},
			"Silhouette":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Speech Processor Implant","TITN-41 Gene-Modification Injection","ADR-V2 Pheromone Gene","NeuroFlux Governor"],"favor":0,"isBanned":false,"isMember":false,"name":"Silhouette","playerReputation":0}},
			"Tetrads":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["HemoRecirculator","NeuroFlux Governor","LuminCloaking-V1 Skin Implant","LuminCloaking-V2 Skin Implant","Power Recirculation Core","Bionic Arms"],"favor":0,"isBanned":false,"isMember":false,"name":"Tetrads","playerReputation":0}},
			"Slum Snakes":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Augmented Targeting I","Combat Rib I","Wired Reflexes","NeuroFlux Governor","LuminCloaking-V1 Skin Implant","LuminCloaking-V2 Skin Implant","SmartSonar Implant"],"favor":0,"isBanned":false,"isMember":false,"name":"Slum Snakes","playerReputation":0}},
			"Netburners":{"ctor":"Faction","data":{"alreadyInvited":true,"augmentations":["Hacknet Node CPU Architecture Neural-Upload","Hacknet Node Cache Architecture Neural-Upload","Hacknet Node NIC Architecture Neural-Upload","Hacknet Node Kernel Direct-Neural Interface","Hacknet Node Core Direct-Neural Interface","NeuroFlux Governor"],"favor":0,"isBanned":false,"isMember":true,"name":"Netburners","playerReputation":2325.3621575184566}},
			"Tian Di Hui":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Nanofiber Weave","Wired Reflexes","Speech Processor Implant","Nuoptimal Nootropic Injector Implant","Speech Enhancement","ADR-V1 Pheromone Gene","NeuroFlux Governor","Social Negotiation Assistant (S.N.A)","Neuroreceptor Management Implant"],"favor":0,"isBanned":false,"isMember":false,"name":"Tian Di Hui","playerReputation":0}},
			"CyberSec":{"ctor":"Faction","data":{"alreadyInvited":true,"augmentations":["BitWire","Synaptic Enhancement Implant","Cranial Signal Processors - Gen I","Cranial Signal Processors - Gen II","NeuroFlux Governor","Neurotrainer I"],"favor":0,"isBanned":false,"isMember":true,"name":"CyberSec","playerReputation":693.112823637798}},
			"Bladeburners":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["EsperTech Bladeburner Eyewear","EMS-4 Recombination","ORION-MKIV Shoulder","Hyperion Plasma Cannon V1","Hyperion Plasma Cannon V2","GOLEM Serum","Vangelis Virus","Vangelis Virus 3.0","I.N.T.E.R.L.I.N.K.E.D","Blade's Runners","BLADE-51b Tesla Armor","BLADE-51b Tesla Armor: Power Cells Upgrade","BLADE-51b Tesla Armor: Energy Shielding Upgrade","BLADE-51b Tesla Armor: Unibeam Upgrade","BLADE-51b Tesla Armor: Omnibeam Upgrade","BLADE-51b Tesla Armor: IPU Upgrade","The Blade's Simulacrum"],"favor":0,"isBanned":false,"isMember":false,"name":"Bladeburners","playerReputation":0}},
			"Church of the Machine God":{"ctor":"Faction","data":{"alreadyInvited":false,"augmentations":["Stanek's Gift - Genesis","Stanek's Gift - Awakening","Stanek's Gift - Serenity"],"favor":0,"isBanned":false,"isMember":false,"name":"Church of the Machine God","playerReputation":0}}
		},
		"AliasesSave":{
			"ssh":"run BruteSSH.exe",
			"ftp":"run FTPCrack.exe",
			"nuke":"run NUKE.exe",
			"smtp":"run relaySMTP.exe",
			"open":"run open.js",
			"http":"run HTTPWorm.exe",
			"sql":"run SQLInject.exe",
			"dash":"run /scripts/hax.js dashboard",
			"scaz":"scan-analyze",
			"hax":"run /scripts/hax.js",
			"go":"run /scripts/hax.js autoHack",
			"farm":"run /scripts/purchaseServers.js; run /scripts/hax.js autoRemoteHack",
			"a1":"run /scripts/purchaseServers.js",
			"a2":"run /scripts/autoRemoteHack.js"
		},
		"GlobalAliasesSave":{},
		"MessagesSave":{
			"j0.msg":{
				"ctor":"Message",
				"data":{
					"filename":"j0.msg",
					"msg":"I know you can sense it. I know you're searching for it. It's why you spend night after night at your computer. <br><br>It's real, I've seen it. And I can help you find it. But not right now. You're not ready yet.<br><br>Use this program to track your progress<br><br>The fl1ght.exe program was added to your home computer<br><br>-jump3R","recvd":true
				}
			},
			"j1.msg":{"ctor":"Message","data":{"filename":"j1.msg","msg":"Soon you will be contacted by a hacking group known as CyberSec. They can help you with your search. <br><br>You should join them, garner their favor, and exploit them for their Augmentations. But do not trust them. They are not what they seem. No one is.<br><br>-jump3R","recvd":true}},
			"j2.msg":{"ctor":"Message","data":{"filename":"j2.msg","msg":"Do not try to save the world. There is no world to save. If you want to find the truth, worry only about yourself. Ethics and morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.<br><br>-jump3R","recvd":true}},
			"j3.msg":{"ctor":"Message","data":{"filename":"j3.msg","msg":"You must learn to walk before you can run. And you must run before you can fly. Look for the black hand. <br><br>I.I.I.I <br><br>-jump3R","recvd":true}},
			"j4.msg":{"ctor":"Message","data":{"filename":"j4.msg","msg":"To find what you are searching for, you must understand the bits. The bits are all around us. The runners will help you.<br><br>-jump3R","recvd":true}},
			"csec-test.msg":{"ctor":"Message","data":{"filename":"csec-test.msg","msg":"We've been watching you. Your skills are very impressive. But you're wasting your talents. If you join us, you can put your skills to good use and change the world for the better. If you join us, we can unlock your full potential. <br><br>But first, you must pass our test. Find and install the backdoor on our server. <br><br>-CyberSec","recvd":true}},
			"nitesec-test.msg":{"ctor":"Message","data":{"filename":"nitesec-test.msg","msg":"People say that the corrupted governments and corporations rule the world. Yes, maybe they do. But do you know who everyone really fears? People like us. Because they can't hide from us. Because they can't fight shadows and ideas with bullets. <br><br>Join us, and people will fear you, too. <br><br>Find and install the backdoor on our server. Then, we will contact you again.<br><br>-NiteSec","recvd":true}},
			"19dfj3l1nd.msg":{"ctor":"Message","data":{"filename":"19dfj3l1nd.msg","msg":"We know what you are doing. We know what drives you. We know what you are looking for. <br><br> We can help you find the answers.<br><br>run4theh111z","recvd":true}},
			"icarus.msg":{"ctor":"Message","data":{"filename":"icarus.msg","msg":"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>)@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)","recvd":false}
			}
		},
		"StockMarketSave":{
			"ECorp":{
				"ctor":"Stock",
				"data":{
					"name":"ECorp",
					"symbol":"ECP",
					"price":30731.434457054165,
					"lastPrice":30834.924343651142,
					"playerShares":0,
					"playerAvgPx":0,
					"playerShortShares":0,
					"playerAvgShortPx":0,
					"mv":0.41,
					"b":false,
					"otlkMag":20.171771282261613,
					"otlkMagForecast":31.673444241506456,
					"cap":180667472,
					"spreadPerc":0.1,
					"shareTxForMovement":61385,
					"shareTxUntilMovement":61385,
					"totalShares":95600000,
					"maxShares":19100000
				}
			},
			"MegaCorp":{"ctor":"Stock","data":{"name":"MegaCorp","symbol":"MGCP","price":14255.224465247282,"lastPrice":14205.054640249415,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.43,"b":true,"otlkMag":17.665876651412688,"otlkMagForecast":69.74413358972456,"cap":69871006,"spreadPerc":0.1,"shareTxForMovement":68625,"shareTxUntilMovement":68625,"totalShares":75400000,"maxShares":15100000}},
			"Blade Industries":{"ctor":"Stock","data":{"name":"Blade Industries","symbol":"BLD","price":12814.611511394876,"lastPrice":12734.075638108281,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.77,"b":true,"otlkMag":14.907452258817818,"otlkMagForecast":63.89635073063482,"cap":215145164,"spreadPerc":0.6,"shareTxForMovement":55257,"shareTxUntilMovement":55257,"totalShares":74300000,"maxShares":14900000}},
			"Clarke Incorporated":{"ctor":"Stock","data":{"name":"Clarke Incorporated","symbol":"CLRK","price":15723.416666971447,"lastPrice":15627.15080837959,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.75,"b":true,"otlkMag":9.793159737869576,"otlkMagForecast":58.199952900953086,"cap":338900058,"spreadPerc":0.5,"shareTxForMovement":65819,"shareTxUntilMovement":65819,"totalShares":94100000,"maxShares":18800000}},
			"OmniTek Incorporated":{"ctor":"Stock","data":{"name":"OmniTek Incorporated","symbol":"OMTK","price":15820.45526089289,"lastPrice":15736.441368426129,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.65,"b":false,"otlkMag":13.017104630148156,"otlkMagForecast":34.10769943212824,"cap":322399264,"spreadPerc":0.1,"shareTxForMovement":71334,"shareTxUntilMovement":71334,"totalShares":54100000,"maxShares":10800000}},
			"Four Sigma":{"ctor":"Stock","data":{"name":"Four Sigma","symbol":"FSIG","price":938007.7377131783,"lastPrice":946482.5546927971,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.1,"b":false,"otlkMag":20.006069461579134,"otlkMagForecast":33.677428147137064,"cap":428492403,"spreadPerc":0.8,"shareTxForMovement":42981,"shareTxUntilMovement":42981,"totalShares":34000000,"maxShares":6800000}},
			"KuaiGong International":{"ctor":"Stock","data":{"name":"KuaiGong International","symbol":"KGI","price":14183.640222394502,"lastPrice":14087.601500338327,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.83,"b":true,"otlkMag":10.888467632622621,"otlkMagForecast":60.35992291306549,"cap":47073087,"spreadPerc":0.6,"shareTxForMovement":79591,"shareTxUntilMovement":79591,"totalShares":112800000,"maxShares":22600000}},
			"Fulcrum Technologies":{"ctor":"Stock","data":{"name":"Fulcrum Technologies","symbol":"FLCM","price":168332.3293991489,"lastPrice":170046.76209449876,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.24,"b":true,"otlkMag":11.660509065300719,"otlkMagForecast":59.12580192923314,"cap":748799696,"spreadPerc":0.9,"shareTxForMovement":65865,"shareTxUntilMovement":65865,"totalShares":60000000,"maxShares":12000000}},
			"Storm Technologies":{"ctor":"Stock","data":{"name":"Storm Technologies","symbol":"STM","price":16486.416223332344,"lastPrice":16373.449458481504,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.84,"b":false,"otlkMag":5.735439785003959,"otlkMagForecast":42.87206632674634,"cap":496627649,"spreadPerc":0.6,"shareTxForMovement":72632,"shareTxUntilMovement":72632,"totalShares":51000000,"maxShares":10200000}},
			"DefComm":{"ctor":"Stock","data":{"name":"DefComm","symbol":"DCOMM","price":15417.384296491022,"lastPrice":15333.005502040567,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.67,"b":true,"otlkMag":7.282034052628884,"otlkMagForecast":57.68529791116169,"cap":167682957,"spreadPerc":0.3,"shareTxForMovement":55731,"shareTxUntilMovement":55731,"totalShares":74100000,"maxShares":14800000}},
			"Helios Labs":{"ctor":"Stock","data":{"name":"Helios Labs","symbol":"HLS","price":10020.575915555395,"lastPrice":10068.312561127032,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.58,"b":false,"otlkMag":10.340119373914572,"otlkMagForecast":39.54862410756844,"cap":151553738,"spreadPerc":0.3,"shareTxForMovement":68605,"shareTxUntilMovement":68605,"totalShares":61700000,"maxShares":12300000}},
			"VitaLife":{"ctor":"Stock","data":{"name":"VitaLife","symbol":"VITA","price":10610.404770547197,"lastPrice":10676.638127325119,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.76,"b":false,"otlkMag":6.174294132206049,"otlkMagForecast":45.38750606941439,"cap":199551107,"spreadPerc":0.9,"shareTxForMovement":48562,"shareTxUntilMovement":48562,"totalShares":104700000,"maxShares":20900000}},
			"Icarus Microsystems":{"ctor":"Stock","data":{"name":"Icarus Microsystems","symbol":"ICRS","price":29705.29375805721,"lastPrice":29547.544988231853,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.65,"b":true,"otlkMag":8.235341927856126,"otlkMagForecast":57.09635293404081,"cap":143634964,"spreadPerc":0.8,"shareTxForMovement":91005,"shareTxUntilMovement":91005,"totalShares":43600000,"maxShares":8700000}},
			"Universal Energy":{"ctor":"Stock","data":{"name":"Universal Energy","symbol":"UNV","price":11777.042829109683,"lastPrice":11721.20462226003,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.58,"b":true,"otlkMag":8.86255620890286,"otlkMagForecast":58.9462461116965,"cap":331310912,"spreadPerc":1,"shareTxForMovement":90354,"shareTxUntilMovement":90354,"totalShares":48100000,"maxShares":9600000}},
			"AeroCorp":{"ctor":"Stock","data":{"name":"AeroCorp","symbol":"AERO","price":5815.210719034382,"lastPrice":5786.6931222618,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.6,"b":true,"otlkMag":6.690693169328477,"otlkMagForecast":57.602580470903476,"cap":84984065,"spreadPerc":0.4,"shareTxForMovement":49281,"shareTxUntilMovement":49281,"totalShares":73000000,"maxShares":14600000}},
			"Omnia Cybersystems":{"ctor":"Stock","data":{"name":"Omnia Cybersystems","symbol":"OMN","price":25200.51690095892,"lastPrice":25048.272712089998,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.74,"b":false,"otlkMag":5.3293307645989625,"otlkMagForecast":45.67945155304009,"cap":168493587,"spreadPerc":0.6,"shareTxForMovement":54541,"shareTxUntilMovement":54541,"totalShares":54500000,"maxShares":10900000}},
			"Solaris Space Systems":{"ctor":"Stock","data":{"name":"Solaris Space Systems","symbol":"SLRS","price":42240.84278116734,"lastPrice":41971.94641431167,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.78,"b":true,"otlkMag":7.478145733995024,"otlkMagForecast":57.91105457847427,"cap":34961953,"spreadPerc":0.5,"shareTxForMovement":107361,"shareTxUntilMovement":107361,"totalShares":28500000,"maxShares":5700000}},
			"Global Pharmaceuticals":{"ctor":"Stock","data":{"name":"Global Pharmaceuticals","symbol":"GPH","price":24500.547129866256,"lastPrice":24374.420708269423,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.63,"b":false,"otlkMag":8.417227655024423,"otlkMagForecast":40.97831966389954,"cap":166266646,"spreadPerc":0.9,"shareTxForMovement":75563,"shareTxUntilMovement":75563,"totalShares":46000000,"maxShares":9200000}},
			"Nova Medical":{"ctor":"Stock","data":{"name":"Nova Medical","symbol":"NVMD","price":16148.229368504444,"lastPrice":16049.362614679703,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.75,"b":false,"otlkMag":6.495235581345199,"otlkMagForecast":42.56375553095814,"cap":150324009,"spreadPerc":1.1,"shareTxForMovement":57190,"shareTxUntilMovement":57190,"totalShares":36400000,"maxShares":7300000}},
			"Watchdog Security":{"ctor":"Stock","data":{"name":"Watchdog Security","symbol":"WDS","price":2307.885459673446,"lastPrice":2357.1709204190083,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":2.6,"b":true,"otlkMag":5.904015179046077,"otlkMagForecast":54.77746608209336,"cap":140334569,"spreadPerc":0.7,"shareTxForMovement":33956,"shareTxUntilMovement":33956,"totalShares":57100000,"maxShares":11400000}},
			"LexoCorp":{"ctor":"Stock","data":{"name":"LexoCorp","symbol":"LXO","price":11718.841179095056,"lastPrice":11847.820679026338,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.34,"b":true,"otlkMag":6.806642553091327,"otlkMagForecast":53.65019111893607,"cap":123613876,"spreadPerc":0.9,"shareTxForMovement":74249,"shareTxUntilMovement":74249,"totalShares":58100000,"maxShares":11600000}},
			"Rho Construction":{"ctor":"Stock","data":{"name":"Rho Construction","symbol":"RHOC","price":3043.9390461729636,"lastPrice":3027.5269829989475,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.66,"b":false,"otlkMag":6.145992642259595,"otlkMagForecast":45.853384327475894,"cap":39668342,"spreadPerc":0.9,"shareTxForMovement":113610,"shareTxUntilMovement":113610,"totalShares":36400000,"maxShares":7300000}},
			"Alpha Enterprises":{"ctor":"Stock","data":{"name":"Alpha Enterprises","symbol":"APHE","price":3408.173011545445,"lastPrice":3355.2604617932257,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.92,"b":false,"otlkMag":9.234156889540753,"otlkMagForecast":41.698703273885805,"cap":191160736,"spreadPerc":0.6,"shareTxForMovement":55880,"shareTxUntilMovement":55880,"totalShares":28800000,"maxShares":5800000}},
			"SysCore Securities":{"ctor":"Stock","data":{"name":"SysCore Securities","symbol":"SYSC","price":10768.4407581651,"lastPrice":10626.176484482785,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.63,"b":true,"otlkMag":5.998549667925338,"otlkMagForecast":56.244775749936245,"cap":142074838,"spreadPerc":0.6,"shareTxForMovement":37096,"shareTxUntilMovement":37096,"totalShares":35100000,"maxShares":7000000}},
			"CompuTek":{"ctor":"Stock","data":{"name":"CompuTek","symbol":"CTK","price":3778.813615250568,"lastPrice":3749.2507217572715,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.96,"b":true,"otlkMag":2.282648833878026,"otlkMagForecast":47.07534605772696,"cap":10496700,"spreadPerc":1.2,"shareTxForMovement":113253,"shareTxUntilMovement":113253,"totalShares":36600000,"maxShares":7300000}},
			"NetLink Technologies":{"ctor":"Stock","data":{"name":"NetLink Technologies","symbol":"NTLK","price":2362.115908018974,"lastPrice":2401.5006916857624,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":2.03,"b":false,"otlkMag":5.53984268272906,"otlkMagForecast":51.58517255663035,"cap":20858233,"spreadPerc":2,"shareTxForMovement":41099,"shareTxUntilMovement":41099,"totalShares":32900000,"maxShares":6600000}},
			"Omega Software":{"ctor":"Stock","data":{"name":"Omega Software","symbol":"OMGA","price":18962.1382829469,"lastPrice":19130.34459417389,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.08,"b":false,"otlkMag":5.093609864726971,"otlkMagForecast":49.20127288114507,"cap":122689670,"spreadPerc":0.6,"shareTxForMovement":67312,"shareTxUntilMovement":67312,"totalShares":7500000,"maxShares":1500000}},
			"FoodNStuff":{"ctor":"Stock","data":{"name":"FoodNStuff","symbol":"FNS","price":3379.6778089494137,"lastPrice":3358.437578332275,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.77,"b":false,"otlkMag":5.492178134724561,"otlkMagForecast":42.87975854352138,"cap":58743583,"spreadPerc":0.6,"shareTxForMovement":67408,"shareTxUntilMovement":67408,"totalShares":13500000,"maxShares":2700000}},
			"Sigma Cosmetics":{"ctor":"Stock","data":{"name":"Sigma Cosmetics","symbol":"SGC","price":1546.5928416488061,"lastPrice":1518.5296529151278,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":2.25,"b":false,"otlkMag":6.301925376731679,"otlkMagForecast":43.610444392022316,"cap":72150516,"spreadPerc":0.7,"shareTxForMovement":64664,"shareTxUntilMovement":64664,"totalShares":8800000,"maxShares":1800000}},
			"Joe's Guns":{"ctor":"Stock","data":{"name":"Joe's Guns","symbol":"JGN","price":32731.008959542174,"lastPrice":33325.14088359635,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":2.21,"b":true,"otlkMag":6.352887091043622,"otlkMagForecast":57.32369176099127,"cap":21736227,"spreadPerc":1.1,"shareTxForMovement":39700,"shareTxUntilMovement":39700,"totalShares":41100000,"maxShares":8200000}},
			"Catalyst Ventures":{"ctor":"Stock","data":{"name":"Catalyst Ventures","symbol":"CTYS","price":493.25108388765506,"lastPrice":499.7332365187589,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":1.6,"b":false,"otlkMag":19.45032146072573,"otlkMagForecast":32.87987336601392,"cap":22071531,"spreadPerc":0.5,"shareTxForMovement":27661,"shareTxUntilMovement":27661,"totalShares":88000000,"maxShares":17600000}},
			"Microdyne Technologies":{"ctor":"Stock","data":{"name":"Microdyne Technologies","symbol":"MDYN","price":14577.629910076397,"lastPrice":14484.83176822839,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.78,"b":true,"otlkMag":6.870799686400113,"otlkMagForecast":57.39645263836851,"cap":187499622,"spreadPerc":1,"shareTxForMovement":166941,"shareTxUntilMovement":166941,"totalShares":23200000,"maxShares":4600000}},
			"Titan Laboratories":{"ctor":"Stock","data":{"name":"Titan Laboratories","symbol":"TITN","price":20074.122295246743,"lastPrice":20169.75265314686,"playerShares":0,"playerAvgPx":0,"playerShortShares":0,"playerAvgShortPx":0,"mv":0.58,"b":true,"otlkMag":10.682617747930083,"otlkMagForecast":61.84999930203842,"cap":365227226,"spreadPerc":0.3,"shareTxForMovement":129947,"shareTxUntilMovement":129947,"totalShares":24100000,"maxShares":4800000}},
			"Orders":{"ECP":[],"MGCP":[],"BLD":[],"CLRK":[],"OMTK":[],"FSIG":[],"KGI":[],"FLCM":[],"STM":[],"DCOMM":[],"HLS":[],"VITA":[],"ICRS":[],"UNV":[],"AERO":[],"OMN":[],"SLRS":[],"GPH":[],"NVMD":[],"WDS":[],"LXO":[],"RHOC":[],"APHE":[],"SYSC":[],"CTK":[],"NTLK":[],"OMGA":[],"FNS":[],"SGC":[],"JGN":[],"CTYS":[],"MDYN":[],"TITN":[]},
			"storedCycles":8,
			"lastUpdate":1646318173699,
			"ticksUntilCycle":39
		},
		"SettingsSave":{
			"ActiveScriptsServerPageSize":100,
			"ActiveScriptsScriptPageSize":100,
			"AutosaveInterval":60,
			"CodeInstructionRunTime":25,
			"DisableASCIIArt":false,
			"DisableHotkeys":false,
			"DisableTextEffects":false,
			"DisableOverviewProgressBars":false,
			"EnableBashHotkeys":true,
			"TimestampsFormat":"",
			"Locale":"en",
			"MaxLogCapacity":320,
			"MaxPortCapacity":55,
			"MaxTerminalCapacity":400,
			"OwnedAugmentationsOrder":0,
			"PurchaseAugmentationsOrder":2,
			"SaveGameOnFileSave":true,
			"SuppressBuyAugmentationConfirmation":true,
			"SuppressFactionInvites":true,
			"SuppressMessages":true,
			"SuppressTravelConfirmation":true,
			"SuppressBladeburnerPopup":false,
			"SuppressTIXPopup":true,
			"SuppressSavedGameToast":false,
			"UseIEC60027_2":true,
			"ExcludeRunningScriptsFromSave":false,
			"IsSidebarOpened":true,
			"MonacoTheme":"monokai",
			"MonacoInsertSpaces":false,
			"MonacoFontSize":14,
			"MonacoVim":false,
			"MonacoWordWrap":"off",
			"theme":{
				"primarylight":"#0f0",
				"primary":"#0c0",
				"primarydark":"#090",
				"successlight":"#0f0",
				"success":"#0c0",
				"successdark":"#090",
				"errorlight":"#f00",
				"error":"#c00",
				"errordark":"#900",
				"secondarylight":"#AAA",
				"secondary":"#888",
				"secondarydark":"#666",
				"warninglight":"#ff0",
				"warning":"#cc0",
				"warningdark":"#990",
				"infolight":"#69f",
				"info":"#36c",
				"infodark":"#039",
				"welllight":"#444",
				"well":"#222",
				"white":"#fff",
				"black":"#000",
				"hp":"#dd3434",
				"money":"#ffd700",
				"hack":"#adff2f",
				"combat":"#faffdf",
				"cha":"#a671d1",
				"int":"#6495ed",
				"rep":"#faffdf",
				"disabled":"#66cfbc",
				"backgroundprimary":"#000",
				"backgroundsecondary":"#000",
				"button":"#333"
			},
			"styles":{
				"lineHeight":1.5,
				"fontFamily":"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman"
			},
			"overview":{"x":1,"y":0,"opened":true}
		},
		"VersionSave":"10",
		"AllGangsSave":"",
		"LastExportBonus":"1646263459706",
		"StaneksGiftSave":{"ctor":"StaneksGift", "data":{"storedCycles":0,"fragments":[]}},
		"SaveTimestamp":"1646318175379"
	}
}